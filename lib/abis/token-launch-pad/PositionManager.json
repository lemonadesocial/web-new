{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct PositionManager.ConstructorParams",
          "components": [
            {
              "name": "nativeToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "poolManager",
              "type": "address",
              "internalType": "contract IPoolManager"
            },
            {
              "name": "feeDistribution",
              "type": "tuple",
              "internalType": "struct FeeDistributor.FeeDistribution",
              "components": [
                {
                  "name": "swapFee",
                  "type": "uint24",
                  "internalType": "uint24"
                },
                {
                  "name": "referrer",
                  "type": "uint24",
                  "internalType": "uint24"
                },
                {
                  "name": "protocol",
                  "type": "uint24",
                  "internalType": "uint24"
                },
                {
                  "name": "active",
                  "type": "bool",
                  "internalType": "bool"
                }
              ]
            },
            {
              "name": "initialPrice",
              "type": "address",
              "internalType": "contract IInitialPrice"
            },
            {
              "name": "protocolOwner",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "protocolFeeRecipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "flayGovernance",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "feeEscrow",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "feeExemptions",
              "type": "address",
              "internalType": "contract FeeExemptions"
            },
            {
              "name": "actionManager",
              "type": "address",
              "internalType": "contract TreasuryActionManager"
            },
            {
              "name": "bidWall",
              "type": "address",
              "internalType": "contract BidWall"
            },
            {
              "name": "fairLaunch",
              "type": "address",
              "internalType": "contract FairLaunch"
            }
          ]
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "receive",
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "MAX_PROTOCOL_ALLOCATION",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint24",
          "internalType": "uint24"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "actionManager",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract TreasuryActionManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "afterAddLiquidity",
      "inputs": [
        {
          "name": "_sender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IPoolManager.ModifyLiquidityParams",
          "components": [
            {
              "name": "tickLower",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "tickUpper",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "liquidityDelta",
              "type": "int256",
              "internalType": "int256"
            },
            {
              "name": "salt",
              "type": "bytes32",
              "internalType": "bytes32"
            }
          ]
        },
        {
          "name": "_delta",
          "type": "int256",
          "internalType": "BalanceDelta"
        },
        {
          "name": "_feesAccrued",
          "type": "int256",
          "internalType": "BalanceDelta"
        },
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "selector_",
          "type": "bytes4",
          "internalType": "bytes4"
        },
        {
          "name": "",
          "type": "int256",
          "internalType": "BalanceDelta"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "afterDonate",
      "inputs": [
        {
          "name": "_sender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "_amount0",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_amount1",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "selector_",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "afterInitialize",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "",
          "type": "uint160",
          "internalType": "uint160"
        },
        {
          "name": "",
          "type": "int24",
          "internalType": "int24"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "afterRemoveLiquidity",
      "inputs": [
        {
          "name": "_sender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IPoolManager.ModifyLiquidityParams",
          "components": [
            {
              "name": "tickLower",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "tickUpper",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "liquidityDelta",
              "type": "int256",
              "internalType": "int256"
            },
            {
              "name": "salt",
              "type": "bytes32",
              "internalType": "bytes32"
            }
          ]
        },
        {
          "name": "_delta",
          "type": "int256",
          "internalType": "BalanceDelta"
        },
        {
          "name": "_feesAccrued",
          "type": "int256",
          "internalType": "BalanceDelta"
        },
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "selector_",
          "type": "bytes4",
          "internalType": "bytes4"
        },
        {
          "name": "",
          "type": "int256",
          "internalType": "BalanceDelta"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "afterSwap",
      "inputs": [
        {
          "name": "_sender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "_params",
          "type": "tuple",
          "internalType": "struct IPoolManager.SwapParams",
          "components": [
            {
              "name": "zeroForOne",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "amountSpecified",
              "type": "int256",
              "internalType": "int256"
            },
            {
              "name": "sqrtPriceLimitX96",
              "type": "uint160",
              "internalType": "uint160"
            }
          ]
        },
        {
          "name": "_delta",
          "type": "int256",
          "internalType": "BalanceDelta"
        },
        {
          "name": "_hookData",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "selector_",
          "type": "bytes4",
          "internalType": "bytes4"
        },
        {
          "name": "hookDeltaUnspecified_",
          "type": "int128",
          "internalType": "int128"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "beforeAddLiquidity",
      "inputs": [
        {
          "name": "_sender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IPoolManager.ModifyLiquidityParams",
          "components": [
            {
              "name": "tickLower",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "tickUpper",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "liquidityDelta",
              "type": "int256",
              "internalType": "int256"
            },
            {
              "name": "salt",
              "type": "bytes32",
              "internalType": "bytes32"
            }
          ]
        },
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "selector_",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "beforeDonate",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "beforeInitialize",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "",
          "type": "uint160",
          "internalType": "uint160"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "beforeRemoveLiquidity",
      "inputs": [
        {
          "name": "_sender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IPoolManager.ModifyLiquidityParams",
          "components": [
            {
              "name": "tickLower",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "tickUpper",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "liquidityDelta",
              "type": "int256",
              "internalType": "int256"
            },
            {
              "name": "salt",
              "type": "bytes32",
              "internalType": "bytes32"
            }
          ]
        },
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "selector_",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "beforeSwap",
      "inputs": [
        {
          "name": "_sender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        },
        {
          "name": "_params",
          "type": "tuple",
          "internalType": "struct IPoolManager.SwapParams",
          "components": [
            {
              "name": "zeroForOne",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "amountSpecified",
              "type": "int256",
              "internalType": "int256"
            },
            {
              "name": "sqrtPriceLimitX96",
              "type": "uint160",
              "internalType": "uint160"
            }
          ]
        },
        {
          "name": "_hookData",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "selector_",
          "type": "bytes4",
          "internalType": "bytes4"
        },
        {
          "name": "beforeSwapDelta_",
          "type": "int256",
          "internalType": "BeforeSwapDelta"
        },
        {
          "name": "",
          "type": "uint24",
          "internalType": "uint24"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "bidWall",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract BidWall"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "cancelOwnershipHandover",
      "inputs": [],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "closeBidWall",
      "inputs": [
        {
          "name": "_key",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "completeOwnershipHandover",
      "inputs": [
        {
          "name": "pendingOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "fairLaunch",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract FairLaunch"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "fairLaunchFeeCalculator",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IFeeCalculator"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "feeCalculator",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IFeeCalculator"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "feeEscrow",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract FeeEscrow"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "feeExemptions",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract FeeExemptions"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "feeSplit",
      "inputs": [
        {
          "name": "_poolId",
          "type": "bytes32",
          "internalType": "PoolId"
        },
        {
          "name": "_amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "bidWall_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "creator_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "protocol_",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "flaunch",
      "inputs": [
        {
          "name": "_params",
          "type": "tuple",
          "internalType": "struct PositionManager.FlaunchParams",
          "components": [
            {
              "name": "name",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "symbol",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "tokenUri",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "initialTokenFairLaunch",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "fairLaunchDuration",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "premineAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "creator",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "creatorFeeAllocation",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "flaunchAt",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "initialPriceParams",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "feeCalculatorParams",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "creatorVestingParams",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "memecoin_",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "flaunchContract",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IFlaunch"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "flaunchesAt",
      "inputs": [
        {
          "name": "_poolId",
          "type": "bytes32",
          "internalType": "PoolId"
        }
      ],
      "outputs": [
        {
          "name": "_flaunchTime",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "flayGovernance",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getFeeCalculator",
      "inputs": [
        {
          "name": "_isFairLaunch",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IFeeCalculator"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getFlaunchingFee",
      "inputs": [
        {
          "name": "_initialPriceParams",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getFlaunchingMarketCap",
      "inputs": [
        {
          "name": "_initialPriceParams",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getHookPermissions",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Hooks.Permissions",
          "components": [
            {
              "name": "beforeInitialize",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "afterInitialize",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "beforeAddLiquidity",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "afterAddLiquidity",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "beforeRemoveLiquidity",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "afterRemoveLiquidity",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "beforeSwap",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "afterSwap",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "beforeDonate",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "afterDonate",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "beforeSwapReturnDelta",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "afterSwapReturnDelta",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "afterAddLiquidityReturnDelta",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "afterRemoveLiquidityReturnDelta",
              "type": "bool",
              "internalType": "bool"
            }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "getPoolFeeDistribution",
      "inputs": [
        {
          "name": "_poolId",
          "type": "bytes32",
          "internalType": "PoolId"
        }
      ],
      "outputs": [
        {
          "name": "feeDistribution_",
          "type": "tuple",
          "internalType": "struct FeeDistributor.FeeDistribution",
          "components": [
            {
              "name": "swapFee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "referrer",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "protocol",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "active",
              "type": "bool",
              "internalType": "bool"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialPrice",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IInitialPrice"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "nativeToken",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "notifier",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract Notifier"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "result",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ownershipHandoverExpiresAt",
      "inputs": [
        {
          "name": "pendingOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "result",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "poolFees",
      "inputs": [
        {
          "name": "_poolKey",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct InternalSwapPool.ClaimableFees",
          "components": [
            {
              "name": "amount0",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "amount1",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "poolKey",
      "inputs": [
        {
          "name": "_token",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct PoolKey",
          "components": [
            {
              "name": "currency0",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "currency1",
              "type": "address",
              "internalType": "Currency"
            },
            {
              "name": "fee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "tickSpacing",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "hooks",
              "type": "address",
              "internalType": "contract IHooks"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "poolManager",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPoolManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "referralEscrow",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract ReferralEscrow"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "requestOwnershipHandover",
      "inputs": [],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setFairLaunchFeeCalculator",
      "inputs": [
        {
          "name": "_feeCalculator",
          "type": "address",
          "internalType": "contract IFeeCalculator"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setFeeCalculator",
      "inputs": [
        {
          "name": "_feeCalculator",
          "type": "address",
          "internalType": "contract IFeeCalculator"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setFeeDistribution",
      "inputs": [
        {
          "name": "_feeDistribution",
          "type": "tuple",
          "internalType": "struct FeeDistributor.FeeDistribution",
          "components": [
            {
              "name": "swapFee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "referrer",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "protocol",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "active",
              "type": "bool",
              "internalType": "bool"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setFlaunch",
      "inputs": [
        {
          "name": "_flaunchContract",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setInitialPrice",
      "inputs": [
        {
          "name": "_initialPrice",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setPoolFeeDistribution",
      "inputs": [
        {
          "name": "_poolId",
          "type": "bytes32",
          "internalType": "PoolId"
        },
        {
          "name": "_feeDistribution",
          "type": "tuple",
          "internalType": "struct FeeDistributor.FeeDistribution",
          "components": [
            {
              "name": "swapFee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "referrer",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "protocol",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "active",
              "type": "bool",
              "internalType": "bool"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setProtocolFeeDistribution",
      "inputs": [
        {
          "name": "_protocol",
          "type": "uint24",
          "internalType": "uint24"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setReferralEscrow",
      "inputs": [
        {
          "name": "_referralEscrow",
          "type": "address",
          "internalType": "address payable"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "unlockCallback",
      "inputs": [
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "CreatorFeeAllocationUpdated",
      "inputs": [
        {
          "name": "_poolId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "_allocation",
          "type": "uint24",
          "indexed": false,
          "internalType": "uint24"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "FairLaunchBurn",
      "inputs": [
        {
          "name": "_poolId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "_unsoldSupply",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "FairLaunchFeeCalculatorUpdated",
      "inputs": [
        {
          "name": "_feeCalculator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "FeeCalculatorUpdated",
      "inputs": [
        {
          "name": "_feeCalculator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "FeeDistributionUpdated",
      "inputs": [
        {
          "name": "_feeDistribution",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct FeeDistributor.FeeDistribution",
          "components": [
            {
              "name": "swapFee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "referrer",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "protocol",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "active",
              "type": "bool",
              "internalType": "bool"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "HookFee",
      "inputs": [
        {
          "name": "id",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "feeAmount0",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        },
        {
          "name": "feeAmount1",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "HookSwap",
      "inputs": [
        {
          "name": "id",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount0",
          "type": "int128",
          "indexed": false,
          "internalType": "int128"
        },
        {
          "name": "amount1",
          "type": "int128",
          "indexed": false,
          "internalType": "int128"
        },
        {
          "name": "hookLPfeeAmount0",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        },
        {
          "name": "hookLPfeeAmount1",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "InitialPriceUpdated",
      "inputs": [
        {
          "name": "_initialPrice",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipHandoverCanceled",
      "inputs": [
        {
          "name": "pendingOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipHandoverRequested",
      "inputs": [
        {
          "name": "pendingOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "oldOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolCreated",
      "inputs": [
        {
          "name": "_poolId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "_memecoin",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "_memecoinTreasury",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "_currencyFlipped",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        },
        {
          "name": "_flaunchFee",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "_params",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct PositionManager.FlaunchParams",
          "components": [
            {
              "name": "name",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "symbol",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "tokenUri",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "initialTokenFairLaunch",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "fairLaunchDuration",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "premineAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "creator",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "creatorFeeAllocation",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "flaunchAt",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "initialPriceParams",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "feeCalculatorParams",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "creatorVestingParams",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolFeeDistributionUpdated",
      "inputs": [
        {
          "name": "_poolId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "_feeDistribution",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct FeeDistributor.FeeDistribution",
          "components": [
            {
              "name": "swapFee",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "referrer",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "protocol",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "active",
              "type": "bool",
              "internalType": "bool"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolFeesDistributed",
      "inputs": [
        {
          "name": "_poolId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "_donateAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "_creatorAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "_bidWallAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "_governanceAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "_protocolAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolFeesReceived",
      "inputs": [
        {
          "name": "_poolId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "_amount0",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "_amount1",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolFeesSwapped",
      "inputs": [
        {
          "name": "_poolId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "zeroForOne",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        },
        {
          "name": "_amount0",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "_amount1",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolPremine",
      "inputs": [
        {
          "name": "_poolId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "_premineAmount",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolScheduled",
      "inputs": [
        {
          "name": "_poolId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "_flaunchesAt",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolStateUpdated",
      "inputs": [
        {
          "name": "_poolId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "_sqrtPriceX96",
          "type": "uint160",
          "indexed": false,
          "internalType": "uint160"
        },
        {
          "name": "_tick",
          "type": "int24",
          "indexed": false,
          "internalType": "int24"
        },
        {
          "name": "_protocolFee",
          "type": "uint24",
          "indexed": false,
          "internalType": "uint24"
        },
        {
          "name": "_swapFee",
          "type": "uint24",
          "indexed": false,
          "internalType": "uint24"
        },
        {
          "name": "_liquidity",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolSwap",
      "inputs": [
        {
          "name": "poolId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "flAmount0",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        },
        {
          "name": "flAmount1",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        },
        {
          "name": "flFee0",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        },
        {
          "name": "flFee1",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        },
        {
          "name": "ispAmount0",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        },
        {
          "name": "ispAmount1",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        },
        {
          "name": "ispFee0",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        },
        {
          "name": "ispFee1",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        },
        {
          "name": "uniAmount0",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        },
        {
          "name": "uniAmount1",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        },
        {
          "name": "uniFee0",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        },
        {
          "name": "uniFee1",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ReferralEscrowUpdated",
      "inputs": [
        {
          "name": "_referralEscrow",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ReferrerFeePaid",
      "inputs": [
        {
          "name": "_poolId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "PoolId"
        },
        {
          "name": "_recipient",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "_token",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "_amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AlreadyInitialized",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CallerIsNotBidWall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CallerNotCreator",
      "inputs": [
        {
          "name": "_caller",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "CannotBeInitializedDirectly",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CannotModifyLiquidityDuringFairLaunch",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CannotSellTokenDuringFairLaunch",
      "inputs": []
    },
    {
      "type": "error",
      "name": "HookNotImplemented",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InsufficientFlaunchFee",
      "inputs": [
        {
          "name": "_paid",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_required",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidPool",
      "inputs": []
    },
    {
      "type": "error",
      "name": "LockFailure",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NewOwnerIsZeroAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NoHandoverRequest",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotPoolManager",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotSelf",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ProtocolFeeInvalid",
      "inputs": []
    },
    {
      "type": "error",
      "name": "RecipientZeroAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ReferrerFeeInvalid",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SwapFeeInvalid",
      "inputs": []
    },
    {
      "type": "error",
      "name": "TokenNotFlaunched",
      "inputs": [
        {
          "name": "_flaunchesAt",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "Unauthorized",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UnknownPool",
      "inputs": [
        {
          "name": "_poolId",
          "type": "bytes32",
          "internalType": "PoolId"
        }
      ]
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "2769:47913:166:-:0;;;8308:1072;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8414:18;;8434:22;;;;8458:20;;;;;8480:21;;;;8503:16;;;;8371:18;;;;-1:-1:-1;;;;;508:26:155;;;;;8458:20:166;;8480:21;;8503:16;841:25:157::1;861:4;841:19;:25::i;:::-;-1:-1:-1::0;4833:11:190;:26;;-1:-1:-1;;;;;;4833:26:190;-1:-1:-1;;;;;4833:26:190;;;;;4914:42;4939:16;4914:24;:42::i;:::-;4966:34;;:15;:34;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;4966:34:190;;;;;;;-1:-1:-1;;;;4966:34:190;;;;;-1:-1:-1;;4966:34:190;;;;;;;;;;;;;;;;;;;;;;;;;;5015:40;;;;;4984:16;;3161:4:267;3203:3;3192:9;3188:19;3180:27;;3253:8;3244:6;3238:13;3234:28;3223:9;3216:47;3331:8;3323:4;3315:6;3311:17;3305:24;3301:39;3294:4;3283:9;3279:20;3272:69;3409:8;3401:4;3393:6;3389:17;3383:24;3379:39;3372:4;3361:9;3357:20;3350:69;3489:4;3481:6;3477:17;3471:24;3464:32;3457:40;3450:4;3439:9;3435:20;3428:70;2999:505;;;;;5015:40:190;;;;;;;;5116:14;:32;;-1:-1:-1;;;;;5116:32:190;;;-1:-1:-1;;;;;;5116:32:190;;;;;;;5189:9;:42;;;;;;;;;;;;;;;5116:14;5299:7;-1:-1:-1;;11556:18:73;;11408:182;5299:7:190;-1:-1:-1;;;;;5299:21:190;;5295:84;;5336:32;5353:14;5336:16;:32::i;:::-;-1:-1:-1;;;;8589:19:166::2;::::0;::::2;::::0;8574:12:::2;:34:::0;;-1:-1:-1;;;;;;8574:34:166;;::::2;-1:-1:-1::0;;;;;8574:34:166;;::::2;;::::0;;;8684:27:::2;::::0;::::2;::::0;8661:20:::2;:50:::0;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;8574:34:::2;8784:20:::0;::::2;::::0;8768:13:::2;:36:::0;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;8866:14:::2;::::0;::::2;::::0;8856:7:::2;:24:::0;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;8945:17:::2;::::0;::::2;::::0;8932:10:::2;:30:::0;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;9027:20:::2;::::0;::::2;::::0;9011:13:::2;:36:::0;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;-1:-1:-1;9113:20:166::2;::::0;::::2;::::0;9100:34:::2;::::0;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;;;;;3673:32:267;;;3655:51;;3643:2;3628:18;9100:34:166::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;9089:8:166::2;:45:::0;;-1:-1:-1;;;;;;9089:45:166::2;-1:-1:-1::0;;;;;9089:45:166;;::::2;;::::0;;9231:18;;9267:7:::2;::::0;9224:68:::2;::::0;-1:-1:-1;;;9224:68:166;;:34;;::::2;::::0;::::2;::::0;:68:::2;::::0;9267:7;;::::2;::::0;-1:-1:-1;;9277:14:166;9224:68:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;9309:18:166;;9345:10:::2;::::0;9302:71:::2;::::0;-1:-1:-1;;;9302:71:166;;-1:-1:-1;;;;;9302:34:166;;::::2;::::0;::::2;::::0;:71:::2;::::0;9345:10;::::2;::::0;-1:-1:-1;;9358:14:166;9302:71:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8308:1072:::0;2769:47913;;1829:142:157;1906:58;1936:5;1943:20;2769:47913:166;;;;;;;;-1:-1:-1;2769:47913:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15582:857:166;;;;;;;;15632:4;15582:857;;;-1:-1:-1;15582:857:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15479:967;1943:20:157;1906:29;:58::i;:::-;1829:142;:::o;14572:581:190:-;3123:6;14720:16;:24;;;:46;;;14716:100;;;14789:16;;-1:-1:-1;;;14789:16:190;;;;;;;;;;;14716:100;3123:6;14879:16;:25;;;:47;;;14875:105;;;14949:20;;-1:-1:-1;;;14949:20:190;;;;;;;;;;;14875:105;3240:6;15042:51;;:16;:25;;;:51;;;15038:109;;;15116:20;;-1:-1:-1;;;15116:20:190;;;;;;;;;;;4883:1190:73;-1:-1:-1;;5125:9:73;5119:16;5116:150;;;5171:10;5165:4;5158:24;5243:4;5237;5230:18;5116:150;-1:-1:-1;;;;;5339:26:73;;;5462:16;;5457:3;5453:26;5440:40;;5422:59;;;5339:26;5607:1;5567:38;5607:1;;5556:63;1829:142:157;:::o;3532:1599:117:-;3683:42;-1:-1:-1;;;;;3683:18:117;;1319:7;3683:18;:42::i;:::-;3651:28;;:74;;;;;;;;:166;;-1:-1:-1;3776:41:117;-1:-1:-1;;;;;3776:18:117;;1382:7;3776:18;:41::i;:::-;3745:72;;:11;:27;;;:72;;;;3651:166;:265;;;-1:-1:-1;3871:45:117;-1:-1:-1;;;;;3871:18:117;;1450:7;3871:18;:45::i;:::-;3837:79;;:11;:30;;;:79;;;;3651:265;:362;;;-1:-1:-1;3969:44:117;-1:-1:-1;;;;;3969:18:117;;1516:7;3969:18;:44::i;:::-;3936:77;;:11;:29;;;:77;;;;3651:362;:467;;;-1:-1:-1;4070:48:117;-1:-1:-1;;;;;4070:18:117;;1587:6;4070:18;:48::i;:::-;4033:85;;:11;:33;;;:85;;;;3651:467;:570;;;-1:-1:-1;4174:47:117;-1:-1:-1;;;;;4174:18:117;;1655:6;4174:18;:47::i;:::-;4138:83;;:11;:32;;;:83;;;;3651:570;:652;;;-1:-1:-1;4267:36:117;-1:-1:-1;;;;;4267:18:117;;1713:6;4267:18;:36::i;:::-;4241:62;;:11;:22;;;:62;;;;3651:652;:732;;;-1:-1:-1;4348:35:117;-1:-1:-1;;;;;4348:18:117;;1769:6;4348:18;:35::i;:::-;4323:60;;:11;:21;;;:60;;;;3651:732;:818;;;-1:-1:-1;4431:38:117;-1:-1:-1;;;;;4431:18:117;;1829:6;4431:18;:38::i;:::-;4403:66;;:11;:24;;;:66;;;;3651:818;:902;;;-1:-1:-1;4516:37:117;-1:-1:-1;;;;;4516:18:117;;1887:6;4516:18;:37::i;:::-;4489:64;;:11;:23;;;:64;;;;3651:902;:1009;;;-1:-1:-1;4610:50:117;-1:-1:-1;;;;;4610:18:117;;1959:6;4610:18;:50::i;:::-;4573:87;;:11;:33;;;:87;;;;3651:1009;:1114;;;-1:-1:-1;4716:49:117;-1:-1:-1;;;;;4716:18:117;;2029:6;4716:18;:49::i;:::-;4680:85;;:11;:32;;;:85;;;;3651:1114;:1236;;;-1:-1:-1;4829:58:117;-1:-1:-1;;;;;4829:18:117;;2108:6;4829:18;:58::i;:::-;4785:102;;:11;:40;;;:102;;;;3651:1236;:1384;;;-1:-1:-1;4974:61:117;-1:-1:-1;;;;;4974:18:117;;2190:6;4974:18;:61::i;:::-;4907:128;;:11;:43;;;:128;;;;3651:1384;3634:1491;;;5060:54;-1:-1:-1;;;5108:4:117;5060:39;:54::i;:::-;3532:1599;;:::o;16345:137::-;16441:29;-1:-1:-1;;;;;16441:34:117;;;;16345:137::o;1009:257:113:-;1133:8;1130:1;1123:19;-1:-1:-1;;;;;1172:4:113;1168:53;1162:4;1155:67;1245:4;1242:1;1235:15;2769:47913:166;;;;;;;;:::o;14:347:267:-;81:2;75:9;123:6;111:19;;-1:-1:-1;;;;;145:34:267;;181:22;;;142:62;139:185;;;246:10;241:3;237:20;234:1;227:31;281:4;278:1;271:15;309:4;306:1;299:15;139:185;340:2;333:22;14:347;:::o;366:177::-;445:13;;-1:-1:-1;;;;;487:31:267;;477:42;;467:70;;533:1;530;523:12;467:70;366:177;;;:::o;548:165::-;626:13;;679:8;668:20;;658:31;;648:59;;703:1;700;693:12;718:164;794:13;;843;;836:21;826:32;;816:60;;872:1;869;862:12;887:802;960:5;1008:4;996:9;991:3;987:19;983:30;980:50;;;1026:1;1023;1016:12;980:50;1079:2;1073:9;1121:4;1109:17;;-1:-1:-1;;;;;1141:34:267;;1177:22;;;1138:62;1135:185;;;1242:10;1237:3;1233:20;1230:1;1223:31;1277:4;1274:1;1267:15;1305:4;1302:1;1295:15;1135:185;1336:2;1329:22;1369:6;-1:-1:-1;1369:6:267;1399:39;1428:9;1399:39;:::i;:::-;1391:6;1384:55;1472:48;1516:2;1505:9;1501:18;1472:48;:::i;:::-;1467:2;1459:6;1455:15;1448:73;1554:48;1598:2;1587:9;1583:18;1554:48;:::i;:::-;1549:2;1541:6;1537:15;1530:73;1636:46;1678:2;1667:9;1663:18;1636:46;:::i;:::-;1631:2;1623:6;1619:15;1612:71;;887:802;;;;:::o;1694:1300::-;1800:6;1860:3;1848:9;1839:7;1835:23;1831:33;1876:2;1873:22;;;1891:1;1888;1881:12;1873:22;-1:-1:-1;1933:17:267;;:::i;:::-;1973:40;2003:9;1973:40;:::i;:::-;1966:5;1959:55;2046:49;2091:2;2080:9;2076:18;2046:49;:::i;:::-;2041:2;2034:5;2030:14;2023:73;2128;2193:7;2188:2;2177:9;2173:18;2128:73;:::i;:::-;2123:2;2116:5;2112:14;2105:97;2236:50;2281:3;2270:9;2266:19;2236:50;:::i;:::-;2229:4;2222:5;2218:16;2211:76;2321:50;2366:3;2355:9;2351:19;2321:50;:::i;:::-;2314:4;2307:5;2303:16;2296:76;2406:50;2451:3;2440:9;2436:19;2406:50;:::i;:::-;2399:4;2392:5;2388:16;2381:76;2490:50;2535:3;2524:9;2520:19;2490:50;:::i;:::-;2484:3;2477:5;2473:15;2466:75;2574:50;2619:3;2608:9;2604:19;2574:50;:::i;:::-;2568:3;2561:5;2557:15;2550:75;2658:50;2703:3;2692:9;2688:19;2658:50;:::i;:::-;2652:3;2645:5;2641:15;2634:75;2742:53;2787:6;2776:9;2772:22;2742:53;:::i;:::-;2736:3;2729:5;2725:15;2718:78;2829:50;2874:3;2863:9;2859:19;2829:50;:::i;:::-;2823:3;2816:5;2812:15;2805:75;2913:50;2958:3;2947:9;2943:19;2913:50;:::i;:::-;2907:3;2896:15;;2889:75;2900:5;1694:1300;-1:-1:-1;;;1694:1300:267:o;3717:274::-;-1:-1:-1;;;;;3909:32:267;;;;3891:51;;3973:2;3958:18;;3951:34;3879:2;3864:18;;3717:274::o;3996:202::-;4063:6;4116:2;4104:9;4095:7;4091:23;4087:32;4084:52;;;4132:1;4129;4122:12;4084:52;4155:37;4182:9;4155:37;:::i;:::-;4145:47;3996:202;-1:-1:-1;;;3996:202:267:o;:::-;2769:47913:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260043610610251575f3560e01c806301a2cae81461025c57806309276ea4146102915780631d0806ae146102b057806321d0ee70146102cf5780632423028c146103075780632569296214610328578063259982e51461033057806338b1e7001461034f5780633fa4d9571461036e5780634875cbb8146103815780634ed0f0f5146103bb57806354d1f13d146103da57806355d1cb60146103e2578063575e24b41461049c5780636c2bbe7e146104e65780636fe7e6eb14610525578063715018a61461054457806371c4ddb01461054c57806375d252a51461056b5780637907addf1461058a57806384aa1da0146105c35780638c66d04f146105e25780638da5cb5b146106015780638f2bdf751461061957806391dd73461461063857806394e1cf96146106645780639f063efc14610683578063a1dd2d91146106a2578063a87277dd146106c1578063ad49d66e146106e0578063b00eb9fe146106ff578063b3b427951461071e578063b47b2fb11461074a578063b6a8b0fa1461078c578063ba3e69b7146107a6578063be721505146107c5578063c29c945b146107e4578063c4b7de971461080d578063c4e833ce1461082c578063d3bff7171461092c578063dc4c90d31461094b578063dc98354e1461097e578063ddb475d51461099d578063dddfecf5146109d7578063df81740e146109f6578063e1758bd814610a15578063e1b4af6914610a34578063ec876d7114610a53578063f04e283e14610a72578063f2fde38b14610a85578063fee81cf414610a98578063ff3575e414610ac9575f80fd5b3661025857005b5f80fd5b348015610267575f80fd5b5060115461027b906001600160a01b031681565b6040516102889190614bb5565b60405180910390f35b34801561029c575f80fd5b5060125461027b906001600160a01b031681565b3480156102bb575f80fd5b50600c5461027b906001600160a01b031681565b3480156102da575f80fd5b506102ee6102e9366004614c52565b610ae8565b6040516001600160e01b03199091168152602001610288565b348015610312575f80fd5b50610326610321366004614ce3565b610b66565b005b610326610c2c565b34801561033b575f80fd5b506102ee61034a366004614c52565b610c78565b34801561035a575f80fd5b50610326610369366004614cfe565b610ce9565b61027b61037c366004614d19565b610d3c565b34801561038c575f80fd5b506103a061039b366004614d50565b61137f565b60408051938452602084019290925290820152606001610288565b3480156103c6575f80fd5b506103266103d5366004614e47565b61141f565b6103266114db565b3480156103ed575f80fd5b5061048f6103fc366004614cfe565b6040805160a0810182525f80825260208201819052918101829052606081018290526080810191909152506001600160a01b039081165f90815260026020818152604092839020835160a08101855281548616815260018201548087169382019390935262ffffff600160a01b84041694810194909452600160b81b909104820b60608401520154909116608082015290565b6040516102889190614eb5565b3480156104a7575f80fd5b506104bb6104b6366004614f2d565b611514565b604080516001600160e01b03199094168452602084019290925262ffffff1690820152606001610288565b3480156104f1575f80fd5b50610505610500366004614f86565b611d87565b604080516001600160e01b03199093168352602083019190915201610288565b348015610530575f80fd5b506102ee61053f36600461501e565b611e13565b610326611e2d565b348015610557575f80fd5b5061027b610566366004615077565b611e40565b348015610576575f80fd5b5060105461027b906001600160a01b031681565b348015610595575f80fd5b506105b56105a4366004615092565b60136020525f908152604090205481565b604051908152602001610288565b3480156105ce575f80fd5b50600b5461027b906001600160a01b031681565b3480156105ed575f80fd5b506103266105fc366004614cfe565b611e7f565b34801561060c575f80fd5b50638b78c6d8195461027b565b348015610624575f80fd5b5060045461027b906001600160a01b031681565b348015610643575f80fd5b506106576106523660046150a9565b611ed2565b6040516102889190615115565b34801561066f575f80fd5b50600f5461027b906001600160a01b031681565b34801561068e575f80fd5b5061050561069d366004614f86565b611f30565b3480156106ad575f80fd5b5060075461027b906001600160a01b031681565b3480156106cc575f80fd5b506103266106db366004614cfe565b611f9a565b3480156106eb575f80fd5b506103266106fa366004615127565b611fed565b34801561070a575f80fd5b5060065461027b906001600160a01b031681565b348015610729575f80fd5b5061073d610738366004615092565b61218f565b60405161028891906151be565b348015610755575f80fd5b506107696107643660046151fe565b61222c565b604080516001600160e01b03199093168352600f9190910b602083015201610288565b348015610797575f80fd5b506102ee61053f366004615288565b3480156107b1575f80fd5b50600e5461027b906001600160a01b031681565b3480156107d0575f80fd5b506103266107df366004614cfe565b612486565b3480156107ef575f80fd5b506107f961271081565b60405162ffffff9091168152602001610288565b348015610818575f80fd5b5060055461027b906001600160a01b031681565b348015610837575f80fd5b5061091f604080516101c0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101c08101825260018082525f60208301819052928201819052606082018190526080820181905260a0820181905260c0820181905260e0820181905261010082018390526101208201819052610140820181905261016082015261018081018290526101a081019190915290565b60405161028891906152e1565b348015610937575f80fd5b50610326610946366004615402565b6124b0565b348015610956575f80fd5b5061027b7f000000000000000000000000000000000000000000000000000000000000000081565b348015610989575f80fd5b506102ee61099836600461541c565b612542565b3480156109a8575f80fd5b506109bc6109b7366004615127565b6125a5565b60408051825181526020928301519281019290925201610288565b3480156109e2575f80fd5b5060095461027b906001600160a01b031681565b348015610a01575f80fd5b50610326610a10366004614cfe565b6125f8565b348015610a20575f80fd5b5060085461027b906001600160a01b031681565b348015610a3f575f80fd5b506102ee610a4e366004615288565b61264b565b348015610a5e575f80fd5b506105b5610a6d3660046150a9565b6126d3565b610326610a80366004614cfe565b612746565b610326610a93366004614cfe565b612783565b348015610aa3575f80fd5b506105b5610ab2366004614cfe565b63389a75e1600c9081525f91909152602090205490565b348015610ad4575f80fd5b506105b5610ae33660046150a9565b6127a9565b5f336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b325760405163570c108560e11b815260040160405180910390fd5b610b54610b4e610b4736889003880188615127565b60a0902090565b876127db565b5063021d0ee760e41b95945050505050565b6009546001600160a01b03163314610b90576040516282b42960e81b815260040160405180910390fd5b61271062ffffff82161115610bb85760405163f37b175b60e01b815260040160405180910390fd5b6003805462ffffff8316600160301b0262ffffff60301b199091161781556040515f80516020615e7b83398151915291610c2191905462ffffff8082168352601882901c81166020840152603082901c16604083015260481c60ff161515606082015260800190565b60405180910390a150565b5f6202a3006001600160401b03164201905063389a75e1600c52335f52806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d5f80a250565b5f336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cc25760405163570c108560e11b815260040160405180910390fd5b610cd7610b4e610b4736889003880188615127565b5063259982e560e01b95945050505050565b610cf1612898565b600780546001600160a01b0319166001600160a01b0383161790556040517f87043577396d39ef835a9eb69bb496c219cc61bdd6e718447add3c06b6cc084490610c21908390614bb5565b600b54604051633fa4d95760e01b81525f91829182916001600160a01b031690633fa4d95790610d709087906004016155fe565b6060604051808303815f875af1158015610d8c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610db09190615610565b6008546040805160a081019091529396509094509092506001600160a01b038086169116108015915f918190610de65786610df3565b6008546001600160a01b03165b6001600160a01b0316815260200183610e0c5786610e19565b6008546001600160a01b03165b6001600160a01b0390811682525f6020830152603c6040808401919091523060609093018390526010546008549151632095f47360e21b815294955087831694638257d1cc94610e759490939281169216908790600401615651565b5f604051808303815f87803b158015610e8c575f80fd5b505af1158015610e9e573d5f803e3d5ffd5b505050506001600160a01b038581165f908152600260208181526040808420865181546001600160a01b0319908116918816919091178255928701516001820180549389015160608a01519289166001600160b81b031990951694909417600160a01b62ffffff958616021762ffffff60b81b1916600160b81b949092169390930217909155608086015192018054909116919093161790915560a082209050610f4f610100880160e08901614ce3565b62ffffff1615610f8e57610f6a610100880160e08901614ce3565b5f828152602081905260409020805462ffffff191662ffffff929092169190911790555b610fa581610fa06101408a018a61567f565b6128b2565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636276cbbe84600c5f9054906101000a90046001600160a01b03166001600160a01b031663fc87f3f633898e80610120019061100c919061567f565b6040518563ffffffff1660e01b815260040161102b94939291906156c1565b602060405180830381865afa158015611046573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061106a91906156ed565b6040518363ffffffff1660e01b8152600401611087929190615708565b6020604051808303815f875af11580156110a3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110c7919061572e565b90505f6110db610a6d6101208b018b61567f565b9050827f572052f08e5056ccbd5743d7d5178a534e8fa8e67ac908e0f8b97147e12df9ea89888a89868f60405161111796959493929190615749565b60405180910390a260a08901351561113e575f6111378a60a001356129b6565b905080845d505b600f5460405163095ea7b360e01b81526001600160a01b038a81169263095ea7b39261117392909116905f1990600401615796565b6020604051808303815f875af115801561118f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111b391906157af565b50600f546001600160a01b0316631b5b90138484426101008e0135116111d957426111e0565b8c61010001355b6040516001600160e01b031960e086901b168152600481019390935260029190910b6024830152604482015260608c0135606482015260808c0135608482015260a40160c0604051808303815f875af115801561123f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112639190615854565b504289610100013511156112c9575f83815260136020526040908190206101008b013590819055905184917f0a5b59cacc8ab09e32bf89cb0477200adacf9c0237786bf21d17f44cec998107916112bc91815260200190565b60405180910390a26112da565b5f8381526013602052604090204290555b8015611325578034101561130f576040516384eca25560e01b8152346004820152602481018290526044015b60405180910390fd5b600d54611325906001600160a01b0316826129d4565b80341115611340576113403361133b8334615882565b6129d4565b61137383636fe7e6eb60e01b898c60405160200161135f929190615895565b6040516020818303038152906040526129f1565b50505050505050919050565b5f805f8061138c8661218f565b9050806040015162ffffff165f146113cf57612710816040015162ffffff16866113b691906158ad565b6113c091906158d8565b91506113cc8286615882565b94505b5f8681526020819052604090205462ffffff168015611413576127106113fa62ffffff8316886158ad565b61140491906158d8565b93506114108487615882565b95505b85945050509250925092565b611427612898565b61143081612b45565b5f8281526001602090815260409182902083518154928501518486015160608701511515600160481b0260ff60481b1962ffffff928316600160301b021663ffffffff60301b1993831663010000000265ffffffffffff1990971692909416919091179490941716179190911790555182907fe1b2af81a774e1ebee3ca7c94c1e1a0df1210b236149a2079b8bba8dbc475a28906114cf9084906151be565b60405180910390a25050565b63389a75e1600c52335f525f6020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c925f80a2565b5f8080336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146115605760405163570c108560e11b815260040160405180910390fd5b5f611573610b47368a90038a018a615127565b5f81815260136020526040902054909150801561161757815c801580159061159e5750808960200151145b156115e257827fdfa452364a13ecc87d8b629926a27f0b82206c68e4126e138157c5d853c71d84826040516115d591815260200190565b60405180910390a2611615565b428211156116065760405163129b67b160e21b815260048101839052602401611306565b5f838152601360205260408120555b505b5050600f545f906001600160a01b031663e4f203f661163e610b47368c90038c018c615127565b6040518263ffffffff1660e01b815260040161165c91815260200190565b60c060405180830381865afa158015611677573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061169b9190615854565b90508060a00151611b08575f6116b460208a018a614cfe565b6008546001600160a01b0390811691161490505f6116da610b47368c90038c018c615127565b9050805c1580156117525750600f54604051621cc8fb60e81b8152600481018390526001600160a01b0390911690631cc8fb0090602401602060405180830381865afa15801561172c573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061175091906157af565b155b1561186a576080830151600f545f838152600a60205260409081902060010154905163e7ea93c760e01b81526001600160a01b039092169163e7ea93c7916117a1918f9190889060040161597b565b60c0604051808303815f875af11580156117bd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117e19190615854565b5080156118645761182961dead82856118065761180160208f018f614cfe565b611819565b8d60200160208101906118199190614cfe565b6001600160a01b03169190612bcd565b817f69a23fc084ff191b1eed2d64f95be97bef87b127d8a3e71925d4c252ae408f658260405161185b91815260200190565b60405180910390a25b50611b05565b885115158215151461188f5760405163013fa16b60e41b815260040160405180910390fd5b600f5460208a0151604051633132604760e11b81525f926001600160a01b031691636264c08e916118c6918f91889060040161597b565b610100604051808303815f875af11580156118e3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611907919061599f565b9197509094509050611927611921368d90038d018d615127565b82612c7b565b5f61193f8c8c8f6119388b600f0b90565b8e8e612e8f565b90506119678b5f80516020615f3b8339815191525f80516020615f5b8339815191528a61306b565b61198d8b5f80516020615e9b8339815191525f80516020615dfb833981519152846130ea565b6119ca61199a8860801d90565b6119a383613121565b6119ad8a600f0b90565b6119b791906159d4565b6001600160801b031660809190911b1790565b96505f8b60200151121580156119df57508015155b15611a5d57600f546001600160a01b031663197a866b846119ff84613121565b611a0890615a01565b6040516001600160e01b031960e085901b1681526004810192909252600f0b60248201526044015f604051808303815f87803b158015611a46575f80fd5b505af1158015611a58573d5f803e3d5ffd5b505050505b84608001515f03611b0257600f5f9054906101000a90046001600160a01b03166001600160a01b031663e7ea93c78d600a5f8781526020019081526020015f2060010154876040518463ffffffff1660e01b8152600401611ac09392919061597b565b60c0604051808303815f875af1158015611adc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b009190615854565b505b50505b50505b5f611b1b610b47368b90038b018b615127565b90505f815d505f80611b6c7f00000000000000000000000000000000000000000000000000000000000000008b8b611b566020830183614cfe565b6008546001600160a01b03908116911614613141565b9092509050611b7b8183615a22565b15611c7c575f808a602001511215611bb057611bab611b9984613121565b611ba284613121565b6119b790615a01565b611bce565b611bce611bbc83613121565b611bc590615a01565b6119b785613121565b90505f611be18c8c8f61193886600f0b90565b9050611c098b5f80516020615f7b8339815191525f80516020615efb8339815191528561306b565b611c2f8b5f80516020615e1b8339815191525f80516020615e3b833981519152846130ea565b611c77611c3c8360801d90565b611c468960801d90565b611c5091906159d4565b611c5983613121565b611c6385600f0b90565b611c6d8b600f0b90565b6119ad91906159d4565b965050505b611cc1611c91610b47368d90038d018d615127565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169061340f565b5050600c805462ffffff60a01b1916600160a01b62ffffff9390931683021790819055600e546001600160a01b0316925063ba95e274918d910460020b611d0b6020830183614cfe565b6008546040516001600160e01b031960e087901b168152611d429493926001600160a01b0392831692169190911490600401615a35565b5f604051808303815f87803b158015611d59575f80fd5b505af1158015611d6b573d5f803e3d5ffd5b5050505063575e24b460e01b9550505050955095509592505050565b5f80336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611dd25760405163570c108560e11b815260040160405180910390fd5b633615df3f60e11b9150611e07611df1610b47368b90038b018b615127565b838b898960405160200161135f93929190615a5c565b97509795505050505050565b5f604051630a85dc2960e01b815260040160405180910390fd5b611e35612898565b611e3e5f6134c1565b565b5f818015611e5857506007546001600160a01b031615155b15611e6e5750506007546001600160a01b031690565b50506006546001600160a01b031690565b611e87612898565b600680546001600160a01b0319166001600160a01b0383161790556040517f3e762c7e655633ce63121393b9694f9ca1883d14d18f48f1be55e5dc7a9fb6c190610c21908390614bb5565b6060336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611f1d5760405163570c108560e11b815260040160405180910390fd5b611f278383613507565b90505b92915050565b5f80336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611f7b5760405163570c108560e11b815260040160405180910390fd5b6327c18fbf60e21b9150611e07611df1610b47368b90038b018b615127565b611fa2612898565b600480546001600160a01b0319166001600160a01b0383161790556040517f9c922de256a07b4d188faacda5c1abb2cae12f74f4370d5c2f11efb37a742d7090610c21908390614bb5565b600e546001600160a01b0316331461201857604051630632844f60e31b815260040160405180910390fd5b6008545f9060029082906120369085906001600160a01b0316613576565b6001600160a01b03908116825260208083019390935260409182015f20825160a08101845281548316815260018201548084169582019590955262ffffff600160a01b86041693810193909352600160b81b909304600290810b6060840152909201549091166080820181905290915015806120b8575060a0822060a0822014155b156120dd5760a0822060405163180b855560e01b815260040161130691815260200190565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166348c894918360405160200161211d9190614eb5565b6040516020818303038152906040526040518263ffffffff1660e01b81526004016121489190615115565b5f604051808303815f875af1158015612163573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261218a9190810190615a7d565b505050565b604080516080810182525f8082526020820181905291810182905260608101919091525f82815260016020526040902054600160481b900460ff166121d55760036121e3565b5f8281526001602052604090205b60408051608081018252915462ffffff80821684526301000000820481166020850152600160301b82041691830191909152600160481b900460ff161515606082015292915050565b5f80336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146122775760405163570c108560e11b815260040160405180910390fd5b5f806122838760801d90565b61228d88600f0b90565b90925090505f6122a060208a018a615077565b15155f60208b013512146122b457826122b6565b815b90505f6122d58b6122cc368d90038d018d615b0f565b8e858c8c612e8f565b9050835f80516020615e5b8339815191525d825f80516020615ebb8339815191525d61232b612309368c90038c018c615b0f565b5f80516020615f1b8339815191525f80516020615edb833981519152846130ea565b61234261233d368d90038d018d615127565b61359c565b5f612355610b47368e90038e018e615127565b600f54604051621cc8fb60e81b8152600481018390529192505f916123c7916001600160a01b031690631cc8fb00906024015b602060405180830381865afa1580156123a3573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061056691906157af565b90506001600160a01b0381161561243c57806001600160a01b03166324f961778f8f8f8f8f8f6040518763ffffffff1660e01b815260040161240e96959493929190615b66565b5f604051808303815f87803b158015612425575f80fd5b505af1158015612437573d5f803e3d5ffd5b505050505b5061244682613121565b63b47b2fb160e01b9750955061245c818e61394c565b61247681888f8e8e60405160200161135f93929190615bac565b5050505050965096945050505050565b61248e612898565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6124b8612898565b6124c181612b45565b805160038054602084015160408086015160608701511515600160481b0260ff60481b1962ffffff928316600160301b021663ffffffff60301b1994831663010000000265ffffffffffff199096169290971691909117939093179190911693909317179055515f80516020615e7b83398151915290610c219083906151be565b5f336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461258c5760405163570c108560e11b815260040160405180910390fd5b604051635116b0eb60e11b815260040160405180910390fd5b604080518082019091525f8082526020820152600a5f6125c68460a0902090565b81526020019081526020015f206040518060400160405290815f82015481526020016001820154815250509050919050565b612600612898565b600c80546001600160a01b0319166001600160a01b0383161790556040517fbfad4f58ed4ffa32358e2ae423bf8a56d8adf778ad13eb9160c0fecd99ec157790610c21908390614bb5565b5f336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146126955760405163570c108560e11b815260040160405180910390fd5b5063e1b4af6960e01b6126c96126b3610b4736899003890189615127565b8289888860405160200161135f93929190615a5c565b9695505050505050565b600c5460405163010b630b60e61b81525f916001600160a01b0316906342d8c2c09061270790339087908790600401615bd7565b602060405180830381865afa158015612722573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f279190615bfb565b61274e612898565b63389a75e1600c52805f526020600c20805442111561277457636f5e88185f526004601cfd5b5f9055612780816134c1565b50565b61278b612898565b8060601b6127a057637448fbae5f526004601cfd5b612780816134c1565b600c54604051630550389f60e31b81525f916001600160a01b031690632a81c4f8906127079086908690600401615c12565b600e546001600160a01b03828116911614806128045750600f546001600160a01b038281169116145b1561280d575050565b600f54604051621cc8fb60e81b8152600481018490526001600160a01b0390911690631cc8fb0090602401602060405180830381865afa158015612853573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061287791906157af565b61287f575050565b604051631d3e310160e21b815260040160405180910390fd5b638b78c6d819543314611e3e576382b429005f526004601cfd5b5f6128bd6001611e40565b90506001600160a01b0381161561292c5760405163edf2ec7960e01b81526001600160a01b0382169063edf2ec79906128fe90879087908790600401615c25565b5f604051808303815f87803b158015612915575f80fd5b505af1158015612927573d5f803e3d5ffd5b505050505b5f6129365f611e40565b9050816001600160a01b0316816001600160a01b0316146129af5760405163edf2ec7960e01b81526001600160a01b0382169063edf2ec799061298190889088908890600401615c25565b5f604051808303815f87803b158015612998575f80fd5b505af11580156129aa573d5f803e3d5ffd5b505050505b5050505050565b805f8112156129cf576129cf6393dafdf160e01b613bd6565b919050565b5f385f3884865af16129ed5763b12d13eb5f526004601cfd5b5050565b60125460405163314e79ad60e01b81526001600160a01b039091169063314e79ad90612a2590869086908690600401615c3e565b5f604051808303815f87803b158015612a3c575f80fd5b505af1158015612a4e573d5f803e3d5ffd5b505050505f805f80612a92877f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661340f90919063ffffffff16565b92965090945092509050867f1a111a34a945a6d821c9dc87031a478ad3107acb9b19f2ee72d3aaa72b0849c985858585612af56001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001687613bde565b604080516001600160a01b0396909616865260029490940b602086015262ffffff92831685850152911660608401526001600160801b03166080830152519081900360a00190a250505050505050565b612710815f015162ffffff161115612b705760405163520fab3d60e01b815260040160405180910390fd5b612710816020015162ffffff161115612b9c57604051633626bec760e01b815260040160405180910390fd5b61271062ffffff16816040015162ffffff1611156127805760405163f37b175b60e01b815260040160405180910390fd5b5f612be0846001600160a01b0316613c6a565b15612c0b575f805f8085875af1905080612c0657612c06835f633d2cec6f60e21b613c77565b612c75565b60405163a9059cbb60e01b81526001600160a01b038416600482015282602482015260205f6044835f895af13d15601f3d1160015f511416171691505f81525f60208201525f60408201525080612c7557612c758463a9059cbb60e01b633c9fd93960e21b613c77565b50505050565b5f612c868260801d90565b600f0b1215612ce357612cde7f000000000000000000000000000000000000000000000000000000000000000030612cbe8460801d90565b600f0b612cca90615c65565b85516001600160a01b03169291905f613cef565b612d84565b5f612cee8260801d90565b600f0b1315612d84577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630b0d9c09835f015130612d358560801d90565b600f0b6040518463ffffffff1660e01b8152600401612d5693929190615c7f565b5f604051808303815f87803b158015612d6d575f80fd5b505af1158015612d7f573d5f803e3d5ffd5b505050505b5f612d8f82600f0b90565b600f0b1215612dea576129ed7f000000000000000000000000000000000000000000000000000000000000000030612dc784600f0b90565b600f0b612dd390615c65565b60208601516001600160a01b03169291905f613cef565b5f612df582600f0b90565b600f0b13156129ed577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630b0d9c09836020015130612e3d85600f0b90565b600f0b6040518463ffffffff1660e01b8152600401612e5e93929190615c7f565b5f604051808303815f87803b158015612e75575f80fd5b505af1158015612e87573d5f803e3d5ffd5b505050505050565b5f80865f015115155f886020015112151514612eb757612eb26020890189614cfe565b612ec7565b612ec76040890160208a01614cfe565b600f54909150612fdf907f0000000000000000000000000000000000000000000000000000000000000000908a908a90612f39906001600160a01b0316631cc8fb00612f1b610b4736879003870187615127565b6040518263ffffffff1660e01b815260040161238891815260200190565b855f8b600f0b12612f4a578a612f53565b612f538b615a01565b6001600160801b031660115f9054906101000a90046001600160a01b03166001600160a01b031663f6a23d988e6040518263ffffffff1660e01b8152600401612f9c9190614bb5565b6040805180830381865afa158015612fb6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612fda9190615ca3565b613f9f565b9150815f03612fee57506126c9565b5f612ffc89838588886140fd565b905061305f613010368b90038b018b615127565b6008546001600160a01b0385811691161461302b575f613035565b6130358386615882565b6008546001600160a01b03868116911614613059576130548487615882565b614285565b5f614285565b50509695505050505050565b5f80855f015115155f8760200151121515146130ac5761308b83600f0b90565b61309490615a01565b61309e8460801d90565b6130a790615a01565b6130d2565b6130b68360801d90565b6130bf90615a01565b6130c984600f0b90565b6130d290615a01565b600f0b9150600f0b915081855d80845d505050505050565b5f6130f482615c65565b8551602087015191925015155f90911203613114575f845d80835d6129af565b80845d5f835d5050505050565b5f6001607f1b821061313d5761313d6393dafdf160e01b613bd6565b5090565b5f8080613156610b4736889003880188615127565b5f818152600a602052604081206001810154929350919003613179575050613406565b855115158515151461318c575050613406565b5f6131a06001600160a01b038a168461340f565b50505090505f87602001511261320c575f82600101548860200151116131ca5787602001516131d0565b82600101545b90506131fe8289604001516131f7878e6001600160a01b0316613bde90919063ffffffff16565b845f614311565b5090975095506132ad915050565b61327381885f015161322d576132286401000276a36001615d01565b61324c565b61324c600173fffd8963efd1fc6a506488495d951d5263988d26615d20565b61325f6001600160a01b038d1687613bde565b8a6020015161326d90615c65565b5f614311565b50600185015490975090955085111590506132ad578385836001015461329991906158ad565b6132a391906158d8565b9450816001015493505b841580156132b9575083155b156132c657505050613406565b84825f015f8282546132d89190615a22565b9250508190555083826001015f8282546132f29190615882565b90915550506001600160a01b038916630b0d9c09871561331e5761331960208b018b614cfe565b61332e565b61332e60408b0160208c01614cfe565b30886040518463ffffffff1660e01b815260040161334e93929190615c7f565b5f604051808303815f87803b158015613365575f80fd5b505af1158015613377573d5f803e3d5ffd5b505050506133bc8930865f8a1561339d5761339860408e0160208f01614cfe565b6133aa565b6133aa60208e018e614cfe565b6001600160a01b031693929190613cef565b865160408051911515825260208201879052810185905283907fce97caf4fd0295de9544b52b4b9e79fe34c370bebb6fb71bc5baae9a702079689060600160405180910390a25050505b94509492505050565b5f805f805f61341d86614474565b604051631e2eaeaf60e01b8152600481018290529091505f906001600160a01b03891690631e2eaeaf90602401602060405180830381865afa158015613465573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906134899190615bfb565b90506001600160a01b03811695508060a01c60020b945062ffffff8160b81c16935062ffffff8160d01c169250505092959194509250565b638b78c6d81980546001600160a01b039092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3811560ff1b8217905550565b600e546060906001600160a01b031663ad49d66e61352784860186615127565b6040518263ffffffff1660e01b81526004016135439190614eb5565b5f604051808303815f87803b15801561355a575f80fd5b505af115801561356c573d5f803e3d5ffd5b5050505092915050565b81515f906001600160a01b03808416911614613593578251611f27565b50506020015190565b60a081205f818152600a602052604090205466038d7ea4c680008110156135c257505050565b5f828152600a6020526040812081905580806135de858561137f565b60085492955090935091505f9081906136019089906001600160a01b0316613576565b90505f816001600160a01b03166302d05d3f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613640573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061366491906156ed565b90506001600160a01b03811615851561369c578061368c576136878983886144b0565b61369c565b6136968688615a22565b96505f95505b861561384757600e54604051634e944d5760e01b8152600481018b90526001600160a01b0390911690634e944d5790602401602060405180830381865afa1580156136e9573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061370d91906157af565b80156137805750600f54604051621cc8fb60e81b8152600481018b90526001600160a01b0390911690631cc8fb0090602401602060405180830381865afa15801561375a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061377e91906157af565b155b1561383757600e5f9054906101000a90046001600160a01b03166001600160a01b031663088a80c78b89600c60149054906101000a900460020b8e5f01516001600160a01b031660085f9054906101000a90046001600160a01b03166001600160a01b0316146040518563ffffffff1660e01b81526004016138059493929190615d3f565b5f604051808303815f87803b15801561381c575f80fd5b505af115801561382e573d5f803e3d5ffd5b50505050613847565b6138418785615a22565b93505f96505b83156138d157806138c1576138bc89846001600160a01b03166361d027b36040518163ffffffff1660e01b8152600401602060405180830381865afa158015613892573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906138b691906156ed565b866144b0565b6138d1565b6138cb8486615a22565b94505f93505b84156138ef57600d546138ef908a906001600160a01b0316876144b0565b6040805189815260208101889052908101889052606081018590526080810186905289907fc7241a69d3660bdfe5f36bdcca3b2da1fe8844366e46adb58be95171ab0665ad9060a00160405180910390a250505050505050505050565b604080515f80516020615f3b8339815191525c81525f80516020615f5b8339815191525c60208201525f80516020615e9b8339815191525c818301525f80516020615dfb8339815191525c60608201525f80516020615f7b8339815191525c60808201525f80516020615efb8339815191525c60a08201525f80516020615e1b8339815191525c60c08201525f80516020615e3b8339815191525c60e08201525f80516020615e5b8339815191525c6101008201525f80516020615ebb8339815191525c6101208201525f80516020615f1b8339815191525c6101408201525f80516020615edb8339815191525c610160820152905183917f35001030bac7516ed5b1daf42bbfd3eaf587acc70c90f7f00ee42d5a34d7523391908190036101800190a2613b128282613a9b5f80516020615f7b8339815191525c5f80516020615f3b8339815191525c615d6e565b613ac15f80516020615efb8339815191525c5f80516020615f5b8339815191525c615d6e565b613ae75f80516020615e1b8339815191525c5f80516020615e9b8339815191525c615d6e565b613b0d5f80516020615e3b8339815191525c5f80516020615dfb8339815191525c615d6e565b614615565b5f5f80516020615f3b8339815191525d5f5f80516020615f5b8339815191525d5f5f80516020615e9b8339815191525d5f5f80516020615dfb8339815191525d5f5f80516020615f7b8339815191525d5f5f80516020615efb8339815191525d5f5f80516020615e1b8339815191525d5f5f80516020615e3b8339815191525d5f5f80516020615e5b8339815191525d5f5f80516020615ebb8339815191525d5f5f80516020615f1b8339815191525d5f5f80516020615edb8339815191525d5050565b805f5260045ffd5b5f80613be983614474565b90505f613bf7600383615a22565b604051631e2eaeaf60e01b8152600481018290529091506001600160a01b03861690631e2eaeaf90602401602060405180830381865afa158015613c3d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613c619190615bfb565b95945050505050565b6001600160a01b03161590565b6040516390bfb86560e01b8082526001600160a01b03851660048301526001600160e01b031984166024830152608060448301526020601f3d018190040260a0810160648401523d608484015290913d5f60a483013e60048260a4018201526001600160e01b031984168260c4018201528160e40181fd5b8015613d6f57836001600160a01b031663f5298aca84613d1e886001600160a01b03166001600160a01b031690565b856040518463ffffffff1660e01b8152600401613d3d93929190615a5c565b5f604051808303815f87803b158015613d54575f80fd5b505af1158015613d66573d5f803e3d5ffd5b505050506129af565b613d81856001600160a01b0316613c6a565b15613def57836001600160a01b03166311da60b4836040518263ffffffff1660e01b815260040160206040518083038185885af1158015613dc4573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190613de99190615bfb565b506129af565b604051632961046560e21b81526001600160a01b0385169063a584119490613e1b908890600401614bb5565b5f604051808303815f87803b158015613e32575f80fd5b505af1158015613e44573d5f803e3d5ffd5b505050506001600160a01b0383163014613ece576040516323b872dd60e01b81526001600160a01b038616906323b872dd90613e8890869088908790600401615c7f565b6020604051808303815f875af1158015613ea4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613ec891906157af565b50613f3e565b60405163a9059cbb60e01b81526001600160a01b0386169063a9059cbb90613efc9087908690600401615796565b6020604051808303815f875af1158015613f18573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613f3c91906157af565b505b836001600160a01b03166311da60b46040518163ffffffff1660e01b81526004016020604051808303815f875af1158015613f7b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612e879190615bfb565b5f82156140f2575f613fbc610738610b47368b90038b018b615127565b5190506001600160a01b0386161561404057604051634039108560e01b81526001600160a01b03871690634039108590613ffe908b908b908690600401615d95565b602060405180830381865afa158015614019573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061403d9190615ddf565b90505b826020015180156140595750825162ffffff8083169116105b15614062575081515b8062ffffff165f0361407457506140f2565b61271061408662ffffff8316866158ad565b61409091906158d8565b604051630b0d9c0960e01b81529092506001600160a01b038a1690630b0d9c09906140c390889030908790600401615c7f565b5f604051808303815f87803b1580156140da575f80fd5b505af11580156140ec573d5f803e3d5ffd5b50505050505b979650505050505050565b5f8115613c61575f614117610b4736899003890189615127565b90505f6141238261218f565b6020015190508062ffffff165f0361413c575050613c61565b5f61414985870187614cfe565b90506001600160a01b03811661416157505050613c61565b6003546127109061417e906301000000900462ffffff16896158ad565b61418891906158d8565b6004549094506001600160a01b03166141f0576141af6001600160a01b0389168286612bcd565b827f3ca4a7850462c23d5854e8b3e852626beb21b37354c670c0135ab46f0c4bdc31828a876040516141e393929190615c7f565b60405180910390a2614279565b60045461420a906001600160a01b038a8116911686612bcd565b6004805460405163587a617560e11b81529182018590526001600160a01b0383811660248401528a8116604484015260648301879052169063b0f4c2ea906084015f604051808303815f87803b158015614262575f80fd5b505af1158015614274573d5f803e3d5ffd5b505050505b50505095945050505050565b60a083205f818152600a6020526040812080548592906142a6908490615a22565b90915550505f818152600a6020526040812060010180548492906142cb908490615a22565b9091555050604080518481526020810184905282917fa245a9a38e8877add82f0a82c13e062ab3df16a26121977ddcca8827d46c690a910160405180910390a250505050565b5f80808062ffffff85166001600160a01b03808a16908b16101582881280156143e7575f61434a8a5f0385620f424003620f4240614717565b9050826143635761435e8d8d8d60016147b4565b614370565b6143708c8e8d6001614800565b96508681106143a4578b9750620f4240841461439b57614396878586620f4240036148c5565b61439d565b865b94506143bd565b8096506143b38d8c83866148f5565b9750868a5f030394505b826143d3576143ce8d898d5f614800565b6143df565b6143df888e8d5f6147b4565b955050614465565b816143fd576143f88c8c8c5f614800565b614409565b6144098b8d8c5f6147b4565b945084891061441a578a965061442c565b8894506144298c8b8785614943565b96505b816144435761443e8c888c60016147b4565b614450565b614450878d8c6001614800565b9550614462868485620f4240036148c5565b93505b50505095509550955095915050565b6040515f90614493908390600690602001918252602082015260400190565b604051602081830303815290604052805190602001209050919050565b600854600554604051636eb1769f60e11b81523360048201526001600160a01b0391821660248201528392919091169063dd62ed3e906044016020604051808303815f875af1158015614505573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906145299190615bfb565b10156145a85760085460055460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392614566929116905f1990600401615796565b6020604051808303815f875af1158015614582573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906145a691906157af565b505b600554604051632c8ff5d960e21b8152600481018590526001600160a01b038481166024830152604482018490529091169063b23fd764906064015f604051808303815f87803b1580156145fa575f80fd5b505af115801561460c573d5f803e3d5ffd5b50505050505050565b8315158061462257508215155b1561469157846001600160a01b0316867f365f10e9e7ce45d7acfd986c42e0b666f8af282e440e6dafc78c1f2b2f78676061465c8761498a565b6146658761498a565b60408051600f93840b81529190920b60208201525f818301819052606082015290519081900360800190a35b8115158061469e57508015155b15612e87576001600160a01b038516867f444083dce778da1269b63671912c00569a2a58fa85827911902301f91793ffd76146e06146db86615c65565b6149a6565b6146ec6146db86615c65565b604080516001600160801b0393841681529290911660208301520160405180910390a3505050505050565b5f838302815f1985870982811083820303915050808411614736575f80fd5b805f03614748575082900490506147ad565b5f848688095f868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b5f6001600160a01b038481169086160360ff81901d90810118600160601b6001600160801b0385166147e7818484614717565b9350845f83858409111684019350505050949350505050565b5f836001600160a01b0316856001600160a01b0316111561481f579293925b6001600160a01b0385166148395762bfc9215f526004601cfd5b600160601b600160e01b03606084901b166001600160a01b03868603168361488c57866001600160a01b03166148798383896001600160a01b0316614717565b81614886576148866158c4565b046148b8565b6148b86148a38383896001600160a01b03166148c5565b886001600160a01b0316808204910615150190565b925050505b949350505050565b5f6148d1848484614717565b905081806148e1576148e16158c4565b838509156147ad57600101806147ad575f80fd5b5f6001600160801b038416156001600160a01b03861615171561491f57634f2461b85f526004601cfd5b816149365761493185858560016149c7565b613c61565b613c618585856001614ab2565b5f6001600160801b038416156001600160a01b03861615171561496d57634f2461b85f526004601cfd5b8161497e576149318585855f614ab2565b613c618585855f6149c7565b80600f81900b81146129cf576129cf6393dafdf160e01b613bd6565b806001600160801b03811681146129cf576129cf6393dafdf160e01b613bd6565b5f8115614a37575f6001600160a01b038411156149fb576149f684600160601b876001600160801b0316614717565b614a12565b614a126001600160801b038616606086901b6158d8565b9050614a2f614a2a826001600160a01b038916615a22565b614b94565b9150506148bd565b5f6001600160a01b03841115614a6457614a5f84600160601b876001600160801b03166148c5565b614a81565b614a81606085901b6001600160801b038716808204910615150190565b9050806001600160a01b03871611614aa057634323a5555f526004601cfd5b6001600160a01b0386160390506148bd565b5f825f03614ac15750836148bd565b600160601b600160e01b03606085901b168215614b53576001600160a01b03861684810290858281614af557614af56158c4565b0403614b2557818101828110614b2357614b1983896001600160a01b0316836148c5565b93505050506148bd565b505b50614a2f8185614b3e6001600160a01b038a16836158d8565b614b489190615a22565b808204910615150190565b6001600160a01b038616848102908582041481831116614b7a5763f5c787f15f526004601cfd5b808203614b19614a2a846001600160a01b038b16846148c5565b806001600160a01b03811681146129cf576129cf6393dafdf160e01b613bd6565b6001600160a01b0391909116815260200190565b6001600160a01b0381168114612780575f80fd5b80356129cf81614bc9565b5f60a08284031215614bf8575f80fd5b50919050565b5f60808284031215614bf8575f80fd5b5f8083601f840112614c1e575f80fd5b5081356001600160401b03811115614c34575f80fd5b602083019150836020828501011115614c4b575f80fd5b9250929050565b5f805f805f6101608688031215614c67575f80fd5b8535614c7281614bc9565b9450614c818760208801614be8565b9350614c908760c08801614bfe565b92506101408601356001600160401b03811115614cab575f80fd5b614cb788828901614c0e565b969995985093965092949392505050565b62ffffff81168114612780575f80fd5b80356129cf81614cc8565b5f60208284031215614cf3575f80fd5b81356147ad81614cc8565b5f60208284031215614d0e575f80fd5b81356147ad81614bc9565b5f60208284031215614d29575f80fd5b81356001600160401b03811115614d3e575f80fd5b820161018081850312156147ad575f80fd5b5f8060408385031215614d61575f80fd5b50508035926020909101359150565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b0381118282101715614dac57614dac614d70565b604052919050565b8015158114612780575f80fd5b5f60808284031215614dd1575f80fd5b604051608081016001600160401b0381118282101715614df357614df3614d70565b6040529050808235614e0481614cc8565b81526020830135614e1481614cc8565b60208201526040830135614e2781614cc8565b60408201526060830135614e3a81614db4565b6060919091015292915050565b5f8060a08385031215614e58575f80fd5b82359150614e698460208501614dc1565b90509250929050565b80516001600160a01b03908116835260208083015182169084015260408083015162ffffff169084015260608083015160020b9084015260809182015116910152565b60a08101611f2a8284614e72565b5f60608284031215614ed3575f80fd5b604051606081016001600160401b0381118282101715614ef557614ef5614d70565b6040529050808235614f0681614db4565b8152602083810135908201526040830135614f2081614bc9565b6040919091015292915050565b5f805f805f6101408688031215614f42575f80fd5b8535614f4d81614bc9565b9450614f5c8760208801614be8565b9350614f6b8760c08801614ec3565b92506101208601356001600160401b03811115614cab575f80fd5b5f805f805f805f6101a0888a031215614f9d575f80fd5b8735614fa881614bc9565b9650614fb78960208a01614be8565b9550614fc68960c08a01614bfe565b9450610140880135935061016088013592506101808801356001600160401b03811115614ff1575f80fd5b614ffd8a828b01614c0e565b989b979a50959850939692959293505050565b8060020b8114612780575f80fd5b5f805f806101008587031215615032575f80fd5b843561503d81614bc9565b935061504c8660208701614be8565b925060c085013561505c81614bc9565b915060e085013561506c81615010565b939692955090935050565b5f60208284031215615087575f80fd5b81356147ad81614db4565b5f602082840312156150a2575f80fd5b5035919050565b5f80602083850312156150ba575f80fd5b82356001600160401b038111156150cf575f80fd5b6150db85828601614c0e565b90969095509350505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f611f2760208301846150e7565b5f60a0828403128015615138575f80fd5b5060405160a081016001600160401b038111828210171561515b5761515b614d70565b604052823561516981614bc9565b8152602083013561517981614bc9565b6020820152604083013561518c81614cc8565b6040820152606083013561519f81615010565b606082015260808301356151b281614bc9565b60808201529392505050565b5f60808201905062ffffff835116825262ffffff602084015116602083015262ffffff604084015116604083015260608301511515606083015292915050565b5f805f805f80868803610160811215615215575f80fd5b873561522081614bc9565b965061522f8960208a01614be8565b9550606060bf1982011215615242575f80fd5b5060c08701935061012087013592506101408701356001600160401b0381111561526a575f80fd5b61527689828a01614c0e565b979a9699509497509295939492505050565b5f805f805f80610120878903121561529e575f80fd5b86356152a981614bc9565b95506152b88860208901614be8565b945060c0870135935060e087013592506101008701356001600160401b0381111561526a575f80fd5b8151151581526101c0810160208301516152ff602084018215159052565b506040830151615313604084018215159052565b506060830151615327606084018215159052565b50608083015161533b608084018215159052565b5060a083015161534f60a084018215159052565b5060c083015161536360c084018215159052565b5060e083015161537760e084018215159052565b5061010083015161538d61010084018215159052565b506101208301516153a361012084018215159052565b506101408301516153b961014084018215159052565b506101608301516153cf61016084018215159052565b506101808301516153e561018084018215159052565b506101a08301516153fb6101a084018215159052565b5092915050565b5f60808284031215615412575f80fd5b611f278383614dc1565b5f805f60e0848603121561542e575f80fd5b833561543981614bc9565b92506154488560208601614be8565b915060c084013561545881614bc9565b809150509250925092565b5f808335601e19843603018112615478575f80fd5b83016020810192503590506001600160401b03811115615496575f80fd5b803603821315614c4b575f80fd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b5f6154d78283615463565b61018085526154eb610180860182846154a4565b9150506154fb6020840184615463565b858303602087015261550e8382846154a4565b9250505061551f6040840184615463565b85830360408701526155328382846154a4565b606086810135908801526080808701359088015260a08087013590880152925061556191505060c08401614bdd565b6001600160a01b031660c085015261557b60e08401614cd8565b62ffffff1660e0850152610100838101359085015261559e610120840184615463565b8583036101208701526155b28382846154a4565b925050506155c4610140840184615463565b8583036101408701526155d88382846154a4565b925050506155ea610160840184615463565b8583036101608701526126c98382846154a4565b602081525f611f2760208301846154cc565b5f805f60608486031215615622575f80fd5b835161562d81614bc9565b602085015190935061563e81614bc9565b6040949094015192959394509192915050565b6001600160a01b0385811682528481166020830152831660408201526101008101613c616060830184614e72565b5f808335601e19843603018112615694575f80fd5b8301803591506001600160401b038211156156ad575f80fd5b602001915036819003821315614c4b575f80fd5b6001600160a01b038516815283151560208201526060604082018190525f906126c990830184866154a4565b5f602082840312156156fd575f80fd5b81516147ad81614bc9565b60c081016157168285614e72565b6001600160a01b039290921660a09190910152919050565b5f6020828403121561573e575f80fd5b81516147ad81615010565b6001600160a01b038781168252861660208201526040810185905283151560608201526080810183905260c060a082018190525f9061578a908301846154cc565b98975050505050505050565b6001600160a01b03929092168252602082015260400190565b5f602082840312156157bf575f80fd5b81516147ad81614db4565b5f60c082840312156157da575f80fd5b60405160c081016001600160401b03811182821017156157fc576157fc614d70565b60409081528351825260208085015190830152830151909150819061582081615010565b6040820152606083810151908201526080808401519082015260a083015161584781614db4565b60a0919091015292915050565b5f60c08284031215615864575f80fd5b611f2783836157ca565b634e487b7160e01b5f52601160045260245ffd5b81810381811115611f2a57611f2a61586e565b828152604060208201525f6148bd60408301846154cc565b8082028115828204841417611f2a57611f2a61586e565b634e487b7160e01b5f52601260045260245ffd5b5f826158f257634e487b7160e01b5f52601260045260245ffd5b500490565b803561590281614bc9565b6001600160a01b03168252602081013561591b81614bc9565b6001600160a01b03166020830152604081013561593781614cc8565b62ffffff166040830152606081013561594f81615010565b60020b6060830152608081013561596581614bc9565b6001600160a01b03166080929092019190915250565b60e0810161598982866158f7565b8360a083015282151560c0830152949350505050565b5f805f61010084860312156159b2575f80fd5b8351602085015190935091506159cb85604086016157ca565b90509250925092565b600f81810b9083900b0160016001607f1b03811360016001607f1b031982121715611f2a57611f2a61586e565b5f600f82900b6001607f1b8101615a1a57615a1a61586e565b5f0392915050565b80820180821115611f2a57611f2a61586e565b60e08101615a4382866158f7565b8360020b60a083015282151560c0830152949350505050565b6001600160a01b039390931683526020830191909152604082015260600190565b5f60208284031215615a8d575f80fd5b81516001600160401b03811115615aa2575f80fd5b8201601f81018413615ab2575f80fd5b80516001600160401b03811115615acb57615acb614d70565b615ade601f8201601f1916602001614d84565b818152856020838501011115615af2575f80fd5b8160208401602083015e5f91810160200191909152949350505050565b5f60608284031215615b1f575f80fd5b611f278383614ec3565b8035615b3481614db4565b15158252602081810135908301526040810135615b5081614bc9565b6001600160a01b03166040929092019190915250565b6001600160a01b0387168152615b7f60208201876158f7565b615b8c60c0820186615b29565b836101208201526101606101408201525f61578a610160830184866154a4565b6001600160a01b038416815260a08101615bc96020830185615b29565b826080830152949350505050565b6001600160a01b03841681526040602082018190525f90613c6190830184866154a4565b5f60208284031215615c0b575f80fd5b5051919050565b602081525f6148bd6020830184866154a4565b838152604060208201525f613c616040830184866154a4565b83815263ffffffff60e01b83166020820152606060408201525f613c6160608301846150e7565b5f600160ff1b8201615c7957615c7961586e565b505f0390565b6001600160a01b039384168152919092166020820152604081019190915260600190565b5f6040828403128015615cb4575f80fd5b50604080519081016001600160401b0381118282101715615cd757615cd7614d70565b6040528251615ce581614cc8565b81526020830151615cf581614db4565b60208201529392505050565b6001600160a01b038181168382160190811115611f2a57611f2a61586e565b6001600160a01b038281168282160390811115611f2a57611f2a61586e565b6101008101615d4e8287614e72565b8460a08301528360020b60c083015282151560e083015295945050505050565b8082018281125f831280158216821582161715615d8d57615d8d61586e565b505092915050565b6101208101615da482866158f7565b8351151560a0830152602084015160c08301526040909301516001600160a01b031660e082015262ffffff9190911661010090910152919050565b5f60208284031215615def575f80fd5b81516147ad81614cc856fe2153348e08952a9737a728deab496289242e3884d90dd8e5fc8362f809e843141a426dc34b0367779dd37e66c4b193647bd2fd094d26b263dccbe93433d0a25bb5692db6de7b607ce10bbcb6a38fb443823969b63ffea1591751f25f9fe7059a0f457c8132f52d9098267126b744d1c04e04ccc48dce7c5b4396b38879d8b08aca7619d8d03127c99378decb6d4c002b5b8b8d60918ea28c2300a7811e7c1300aac705f00f1df487f4863cf5b7baa49be15a9dc73d477f33ca4d694d45cac7fef5955824691119aec0d1c983542055bfb83b16d3bc8d04e6cd271bbd244e894a6bc3f16992c8e44a3018b72b6d7aec54e64e1cdec74e64c5154c782ffe8aff2dee887e5283585aea7d61ae82ec91b0d9dbc7a52caa1fbc4f511651d06967058d84457b11f2602289c00904214483ea820055ea325cc54ad9b512e76c6541dfb417cab649bf7619b4535991407dcf8f717035632cf45997a05c0f90b7baafa479170e502bdc7039c895af9c291daf6592705d439a7873ee28dbc514d2f1aa51b3859fad1dd1a8a0c97fb9e594529061ff17256ed2fd92004dfd6d47a8324651c4a26469706673582212200d22e60dead626eea00d09da08a43df4c75f944ac0c86103f5c1a9b0ad56ee4264736f6c634300081a0033",
    "sourceMap": "2769:47913:166:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7964:34;;;;;;;;;;-1:-1:-1;7964:34:166;;;;-1:-1:-1;;;;;7964:34:166;;;;;;;;;;:::i;:::-;;;;;;;;8043:24;;;;;;;;;;-1:-1:-1;8043:24:166;;;;-1:-1:-1;;;;;8043:24:166;;;7341:33;;;;;;;;;;-1:-1:-1;7341:33:166;;;;-1:-1:-1;;;;;7341:33:166;;;32143:486;;;;;;;;;;-1:-1:-1;32143:486:166;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;2788:33:267;;;2770:52;;2758:2;2743:18;32143:486:166;2626:202:267;13224:542:190;;;;;;;;;;-1:-1:-1;13224:542:190;;;;;:::i;:::-;;:::i;:::-;;9021:617:73;;;:::i;30238:443:166:-;;;;;;;;;;-1:-1:-1;30238:443:166;;;;;:::i;:::-;;:::i;15711:211:190:-;;;;;;;;;;-1:-1:-1;15711:211:190;;;;;:::i;:::-;;:::i;9736:4952:166:-;;;;;;:::i;:::-;;:::i;11382:827:190:-;;;;;;;;;;-1:-1:-1;11382:827:190;;;;;:::i;:::-;;:::i;:::-;;;;4809:25:267;;;4865:2;4850:18;;4843:34;;;;4893:18;;;4886:34;4797:2;4782:18;11382:827:190;4607:319:267;13983:336:190;;;;;;;;;;-1:-1:-1;13983:336:190;;;;;:::i;:::-;;:::i;9720:456:73:-;;;:::i;15049:113:166:-;;;;;;;;;;-1:-1:-1;15049:113:166;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15138:17:166;;;;;;;:9;:17;;;;;;;;;15131:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;15131:24:166;;;;;;;;;;-1:-1:-1;;;15131:24:166;;;;;;;;;;;;;;;;;;;15049:113;;;;;;;;:::i;17761:9084::-;;;;;;;;;;-1:-1:-1;17761:9084:166;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;9628:33:267;;;9610:52;;9693:2;9678:18;;9671:34;;;;9753:8;9741:21;9721:18;;;9714:49;9598:2;9583:18;17761:9084:166;9376:393:267;33146:520:166;;;;;;;;;;-1:-1:-1;33146:520:166;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;11141:33:267;;;11123:52;;11206:2;11191:18;;11184:34;;;;11096:18;33146:520:166;10918:306:267;2615:146:157;;;;;;;;;;-1:-1:-1;2615:146:157;;;;;:::i;:::-;;:::i;8762:100:73:-;;;:::i;16905:254:190:-;;;;;;;;;;-1:-1:-1;16905:254:190;;;;;:::i;:::-;;:::i;7856:42:166:-;;;;;;;;;;-1:-1:-1;7856:42:166;;;;-1:-1:-1;;;;;7856:42:166;;;8139:64;;;;;;;;;;-1:-1:-1;8139:64:166;;;;;:::i;:::-;;;;;;;;;;;;;;;;;13136:25:267;;;13124:2;13109:18;8139:64:166;12990:177:267;7263:31:166;;;;;;;;;;-1:-1:-1;7263:31:166;;;;-1:-1:-1;;;;;7263:31:166;;;15329:181:190;;;;;;;;;;-1:-1:-1;15329:181:190;;;;;:::i;:::-;;:::i;11408:182:73:-;;;;;;;;;;-1:-1:-1;;;11556:18:73;11408:182;;3990:36:190;;;;;;;;;;-1:-1:-1;3990:36:190;;;;-1:-1:-1;;;;;3990:36:190;;;1005:138:156;;;;;;;;;;-1:-1:-1;1005:138:156;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7760:28:166:-;;;;;;;;;;-1:-1:-1;7760:28:166;;;;-1:-1:-1;;;;;7760:28:166;;;31340:538;;;;;;;;;;-1:-1:-1;31340:538:166;;;;;:::i;:::-;;:::i;4215:45:190:-;;;;;;;;;;-1:-1:-1;4215:45:190;;;;-1:-1:-1;;;;;4215:45:190;;;12386:242;;;;;;;;;;-1:-1:-1;12386:242:190;;;;;:::i;:::-;;:::i;35866:919:166:-;;;;;;;;;;-1:-1:-1;35866:919:166;;;;;:::i;:::-;;:::i;4174:35:190:-;;;;;;;;;;-1:-1:-1;4174:35:190;;;;-1:-1:-1;;;;;4174:35:190;;;16282:232;;;;;;;;;;-1:-1:-1;16282:232:190;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;27788:2092:166:-;;;;;;;;;;-1:-1:-1;27788:2092:166;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;;17971:33:267;;;17953:52;;18052:2;18041:22;;;;18036:2;18021:18;;18014:50;17926:18;27788:2092:166;17783:287:267;4482:189:157;;;;;;;;;;-1:-1:-1;4482:189:157;;;;;:::i;7677:22:166:-;;;;;;;;;;-1:-1:-1;7677:22:166;;;;-1:-1:-1;;;;;7677:22:166;;;35201:124;;;;;;;;;;-1:-1:-1;35201:124:166;;;;;:::i;:::-;;:::i;3191:55:190:-;;;;;;;;;;;;3240:6;3191:55;;;;;19394:8:267;19382:21;;;19364:40;;19352:2;19337:18;3191:55:190;19220:190:267;4084:26:190;;;;;;;;;;-1:-1:-1;4084:26:190;;;;-1:-1:-1;;;;;4084:26:190;;;15479:967:166;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15582:857:166;;;;;;;;15632:4;15582:857;;;-1:-1:-1;15582:857:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15479:967;;;;;;;;:::i;12791:290:190:-;;;;;;;;;;-1:-1:-1;12791:290:190;;;;;:::i;:::-;;:::i;411:41:155:-;;;;;;;;;;;;;;;16779:171:166;;;;;;;;;;-1:-1:-1;16779:171:166;;;;;:::i;:::-;;:::i;2149:136:192:-;;;;;;;;;;-1:-1:-1;2149:136:192;;;;;:::i;:::-;;:::i;:::-;;;;22689:13:267;;22671:32;;22759:4;22747:17;;;22741:24;22719:20;;;22712:54;;;;22644:18;2149:136:192;22459:313:267;4386:29:190;;;;;;;;;;-1:-1:-1;4386:29:190;;;;-1:-1:-1;;;;;4386:29:190;;;35577:174:166;;;;;;;;;;-1:-1:-1;35577:174:166;;;;;:::i;:::-;;:::i;4301:26:190:-;;;;;;;;;;-1:-1:-1;4301:26:190;;;;-1:-1:-1;;;;;4301:26:190;;;34053:371:166;;;;;;;;;;-1:-1:-1;34053:371:166;;;;;:::i;:::-;;:::i;34555:175::-;;;;;;;;;;-1:-1:-1;34555:175:166;;;;;:::i;:::-;;:::i;10363:708:73:-;;;;;;:::i;:::-;;:::i;8348:349::-;;;;;;:::i;:::-;;:::i;11693:435::-;;;;;;;;;;-1:-1:-1;11693:435:73;;;;;:::i;:::-;11963:19;11957:4;11950:33;;;11812:14;11996:26;;;;12106:4;12090:21;;12084:28;;11693:435;34870:165:166;;;;;;;;;;-1:-1:-1;34870:165:166;;;;;:::i;:::-;;:::i;32143:486::-;32368:16;771:10:156;-1:-1:-1;;;;;793:11:156;771:34;;767:63;;814:16;;-1:-1:-1;;;814:16:156;;;;;;;;;;;767:63;32486:41:166::1;32506:11;:9;;::::0;;::::1;::::0;::::1;:4:::0;:9:::1;:::i;:::-;515:4:147::0;496:24;;;271:265;32506:11:166::1;32519:7;32486:19;:41::i;:::-;-1:-1:-1::0;;;;32585:37:166;32143:486;-1:-1:-1;;;;;32143:486:166:o;13224:542:190:-;13370:14;;-1:-1:-1;;;;;13370:14:190;13356:10;:28;13352:80;;13407:14;;-1:-1:-1;;;13407:14:190;;;;;;;;;;;13352:80;3240:6;13505:35;;;;13501:93;;;13563:20;;-1:-1:-1;;;13563:20:190;;;;;;;;;;;13501:93;13669:15;:36;;;;;-1:-1:-1;;;13669:36:190;-1:-1:-1;;;;13669:36:190;;;;;;13720:39;;-1:-1:-1;;;;;;;;;;;13720:39:190;;;23008:13:267;;23063:8;23048:24;;;23030:43;;23119:2;23115:18;;;23111:33;;23104:4;23089:20;;23082:63;23191:2;23187:18;;;23183:33;23176:4;23161:20;;23154:63;23277:2;23273:18;23293:4;23269:29;23262:37;23255:45;23248:4;23233:20;;23226:75;22978:3;22963:19;;22777:530;13720:39:190;;;;;;;;13224:542;:::o;9021:617:73:-;9114:15;7972:9;-1:-1:-1;;;;;9132:46:73;:15;:46;9114:64;;9346:19;9340:4;9333:33;9396:8;9390:4;9383:22;9452:7;9445:4;9439;9429:21;9422:38;9599:8;9552:45;9549:1;9546;9541:67;9248:374;9021:617::o;30238:443:166:-;30460:16;771:10:156;-1:-1:-1;;;;;793:11:156;771:34;;767:63;;814:16;;-1:-1:-1;;;814:16:156;;;;;;;;;;;767:63;30576:41:166::1;30596:11;:9;;::::0;;::::1;::::0;::::1;:4:::0;:9:::1;:::i;30576:41::-;-1:-1:-1::0;;;;30640:34:166;30238:443;-1:-1:-1;;;;;30238:443:166:o;15711:211:190:-;12517:13:73;:11;:13::i;:::-;15805:23:190::1;:40:::0;;-1:-1:-1;;;;;;15805:40:190::1;-1:-1:-1::0;;;;;15805:40:190;::::1;;::::0;;15860:55:::1;::::0;::::1;::::0;::::1;::::0;15805:40;;15860:55:::1;:::i;9736:4952:166:-:0;9975:15;;:32;;-1:-1:-1;;;9975:32:166;;9811:17;;;;;;-1:-1:-1;;;;;9975:15:166;;:23;;:32;;9999:7;;9975:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10090:11;;10221:273;;;;;;;;;9934:73;;-1:-1:-1;9934:73:166;;-1:-1:-1;9934:73:166;;-1:-1:-1;;;;;;10090:24:166;;;:11;;:24;;;;10067:20;;10221:273;;10268:42;;10301:9;10268:42;;;10287:11;;-1:-1:-1;;;;;10287:11:166;10268:42;-1:-1:-1;;;;;10221:273:166;;;;;10350:15;:41;;10382:9;10350:41;;;10368:11;;-1:-1:-1;;;;;10368:11:166;10350:41;-1:-1:-1;;;;;10221:273:166;;;;;10411:1;10221:273;;;;10439:2;10221:273;;;;;;;;10477:4;10221:273;;;;;;;10643:13;;10659:11;;10565:116;;-1:-1:-1;;;10565:116:166;;10195:299;;-1:-1:-1;10565:45:166;;;;;;:116;;10477:4;;10643:13;;;;10659:11;;10195:299;;10565:116;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;10730:20:166;;;;;;;:9;:20;;;;;;;;:31;;;;-1:-1:-1;;;;;;10730:31:166;;;;;;;;;;;;;;;;-1:-1:-1;10730:31:166;;;;;;;;;;;;;;;-1:-1:-1;;;;;;10730:31:166;;;;;;;-1:-1:-1;;;10730:31:166;;;;;;-1:-1:-1;;;;10730:31:166;-1:-1:-1;;;10730:31:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;515:4:147;496:24;;10771:31:166;-1:-1:-1;10938:28:166;;;;;;;;:::i;:::-;:33;;;10934:113;;11008:28;;;;;;;;:::i;:::-;10987:10;:18;;;;;;;;;;:49;;-1:-1:-1;;10987:49:166;;;;;;;;;;;;10934:113;11154:62;11180:6;11188:27;;;;:7;:27;:::i;:::-;11154:25;:62::i;:::-;11284:17;11304:11;-1:-1:-1;;;;;11304:22:166;;11340:8;11362:12;;;;;;;;;-1:-1:-1;;;;;11362:12:166;-1:-1:-1;;;;;11362:28:166;;11391:10;11403:15;11420:7;:26;;;;;;;;:::i;:::-;11362:85;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11304:153;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11284:173;-1:-1:-1;11559:15:166;11577:44;11594:26;;;;:7;:26;:::i;11577:44::-;11559:62;;11672:6;11637:280;11703:9;11745:16;11785:7;11824:15;11866:10;11899:7;11637:280;;;;;;;;;;;:::i;:::-;;;;;;;;12117:21;;;;:26;12113:164;;12159:17;12179:32;:7;:21;;;:30;:32::i;:::-;12159:52;;12251:13;12243:6;12236:29;12234:33;12113:164;12668:10;;12631:65;;-1:-1:-1;;;12631:65:166;;-1:-1:-1;;;;;12631:28:166;;;;;;:65;;12668:10;;;;-1:-1:-1;;12681:14:166;12631:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12959:10:166;;-1:-1:-1;;;;;12959:10:166;:25;13008:6;13042:11;13101:15;12959:10;13081:17;;;:35;:73;;13139:15;13081:73;;;13119:7;:17;;;13081:73;12959:336;;-1:-1:-1;;;;;;12959:336:166;;;;;;;;;;31034:25:267;;;;31106:1;31095:21;;;;31075:18;;;31068:49;31133:18;;;31126:34;13193:30:166;;;;31176:18:267;;;31169:34;13258:26:166;;;;31219:19:267;;;31212:35;31006:19;;12959:336:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13449:15;13429:7;:17;;;:35;13425:327;;;13480:19;;;;:11;:19;;;;;;;13502:17;;;;13480:39;;;;13538:40;;13492:6;;13538:40;;;;13136:25:267;;13124:2;13109:18;;12990:177;13538:40:166;;;;;;;;13425:327;;;13704:19;;;;:11;:19;;;;;13726:15;13704:37;;13425:327;13803:15;;13799:357;;13910:10;13898:9;:22;13894:113;;;13947:45;;-1:-1:-1;;;13947:45:166;;13970:9;13947:45;;;32792:25:267;32833:18;;;32826:34;;;32765:18;;13947:45:166;;;;;;;;13894:113;14112:20;;14080:65;;-1:-1:-1;;;;;14112:20:166;14134:10;14080:31;:65::i;:::-;14230:10;14218:9;:22;14214:120;;;14256:67;14288:10;14300:22;14312:10;14300:9;:22;:::i;:::-;14256:31;:67::i;:::-;14590:91;14611:6;14619:31;;;14663:7;14672;14652:28;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14590:20;:91::i;:::-;9830:4858;;;;;;;9736:4952;;;:::o;11382:827:190:-;11451:13;11466;11481:14;11576:43;11622:31;11645:7;11622:22;:31::i;:::-;11576:77;;11703:20;:29;;;:34;;11736:1;11703:34;11699:172;;3123:6;11775:20;:29;;;11765:39;;:7;:39;;;;:::i;:::-;:61;;;;:::i;:::-;11753:73;-1:-1:-1;11840:20:190;11753:73;11840:20;;:::i;:::-;;;11699:172;11929:18;11950:19;;;;;;;;;;;;;11983:16;;11979:134;;3123:6;12026:21;;;;:7;:21;:::i;:::-;:43;;;;:::i;:::-;12015:54;-1:-1:-1;12083:19:190;12015:54;12083:19;;:::i;:::-;;;11979:134;12195:7;12184:18;;11497:712;;11382:827;;;;;:::o;13983:336::-;12517:13:73;:11;:13::i;:::-;14099:42:190::1;14124:16;14099:24;:42::i;:::-;14197:28;::::0;;;:19:::1;:28;::::0;;;;;;;;:47;;;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;;-1:-1:-1::0;;;14197:47:190::1;-1:-1:-1::0;;;;14197:47:190::1;::::0;;::::1;-1:-1:-1::0;;;14197:47:190::1;::::0;-1:-1:-1;;;;14197:47:190;;::::1;::::0;::::1;-1:-1:-1::0;;14197:47:190;;;;;;::::1;::::0;;;;;;;::::1;::::0;;;;;::::1;::::0;;14259:53;14217:7;;14259:53:::1;::::0;::::1;::::0;14228:16;;14259:53:::1;:::i;:::-;;;;;;;;13983:336:::0;;:::o;9720:456:73:-;9922:19;9916:4;9909:33;9968:8;9962:4;9955:22;10020:1;10013:4;10007;9997:21;9990:32;10151:8;10105:44;10102:1;10099;10094:66;9720:456::o;17761:9084:166:-;17975:16;;;771:10:156;-1:-1:-1;;;;;793:11:156;771:34;;767:63;;814:16;;-1:-1:-1;;;814:16:156;;;;;;;;;;;767:63;18348:13:166::1;18364:11;:9;;::::0;;::::1;::::0;::::1;:4:::0;:9:::1;:::i;:11::-;18389:17;18409:19:::0;;;:11:::1;:19;::::0;;;;;18348:27;;-1:-1:-1;18446:17:166;;18442:1072:::1;;50371:11:::0;;18985:18;;;::::1;::::0;:62:::1;;;19034:13;19007:7;:23;;;:40;18985:62;18981:519;;;19088:6;19076:34;19096:13;19076:34;;;;13136:25:267::0;;13124:2;13109:18;;12990:177;19076:34:166::1;;;;;;;;18981:519;;;19251:15;19236:12;:30;19232:123;;;19301:31;::::0;-1:-1:-1;;;19301:31:166;;::::1;::::0;::::1;13136:25:267::0;;;13109:18;;19301:31:166::1;12990:177:267::0;19232:123:166::1;19462:19;::::0;;;:11:::1;:19;::::0;;;;19455:26;18981:519:::1;18465:1049;18442:1072;-1:-1:-1::0;;19667:10:166::1;::::0;19617:47:::1;::::0;-1:-1:-1;;;;;19667:10:166::1;:25;19693:11;:9;;::::0;;::::1;::::0;::::1;:4:::0;:9:::1;:::i;:11::-;19667:38;;;;;;;;;;;;;13136:25:267::0;;13124:2;13109:18;;12990:177;19667:38:166::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19617:88;;19720:14;:21;;;19715:4170;;19757:17;19808:14;;::::0;::::1;:4:::0;:14:::1;:::i;:::-;19777:11;::::0;-1:-1:-1;;;;;19777:11:166;;::::1;:46:::0;::::1;;::::0;-1:-1:-1;19777:11:166::1;20048;:9;;::::0;;::::1;::::0;::::1;:4:::0;:9:::1;:::i;:11::-;20032:27:::0;-1:-1:-1;50371:11:166;;20077:34;:76;::::1;;;-1:-1:-1::0;20116:10:166::1;::::0;:37:::1;::::0;-1:-1:-1;;;20116:37:166;;::::1;::::0;::::1;13136:25:267::0;;;-1:-1:-1;;;;;20116:10:166;;::::1;::::0;:29:::1;::::0;13109:18:267;;20116:37:166::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20115:38;20077:76;20073:3802;;;20193:21;::::0;::::1;::::0;20431:10:::1;::::0;20173:17:::1;20526::::0;;;:9:::1;:17;::::0;;;;;;20431:10;20526:25:::1;::::0;20431:188;;-1:-1:-1;;;20431:188:166;;-1:-1:-1;;;;;20431:10:166;;::::1;::::0;:24:::1;::::0;:188:::1;::::0;20488:4;;20526:25;20588:12;;20431:188:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;20696:17:166;;20692:229:::1;;20737:102;291:42:170;20826:12:166;20738;:46;;20770:14;;::::0;::::1;:4:::0;:14:::1;:::i;:::-;20738:46;;;20753:4;:14;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;20737:57:166::1;::::0;:102;:57:::1;:102::i;:::-;20881:6;20866:36;20889:12;20866:36;;;;13136:25:267::0;;13124:2;13109:18;;12990:177;20866:36:166::1;;;;;;;;20692:229;20155:780;20073:3802;;;21195:18:::0;;21179:34:::1;;::::0;::::1;;;21175:132;;21244:44;;-1:-1:-1::0;;;21244:44:166::1;;;;;;;;;;;21175:132;21849:10;::::0;21883:23:::1;::::0;::::1;::::0;21849:72:::1;::::0;-1:-1:-1;;;21849:72:166;;21741:32:::1;::::0;-1:-1:-1;;;;;21849:10:166::1;::::0;:27:::1;::::0;:72:::1;::::0;21877:4;;21908:12;;21849:72:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21791:130:::0;;-1:-1:-1;21791:130:166;;-1:-1:-1;21791:130:166;-1:-1:-1;22044:39:166::1;;;::::0;;::::1;::::0;::::1;22057:4:::0;22044:39:::1;:::i;:::-;22063:19;22044:12;:39::i;:::-;22405:12;22420:97;22443:4;22449:7;22458;22467:38;:16;1437:2:145::0;1426:21;;1257:206;22467:38:166::1;22507:9;;22420:22;:97::i;:::-;22405:112:::0;-1:-1:-1;22574:70:166::1;22588:7:::0;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;22627:16:166;22574:13:::1;:70::i;:::-;22662:62;22683:7:::0;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;22716:7:166;22662:20:::1;:62::i;:::-;22816:174;22855:36;:16;1108:3:145::0;1104:15;;941:194;22855:36:166::1;22954:18;:7;:16;:18::i;:::-;22913:38;:16;1437:2:145::0;1426:21;;1257:206;22913:38:166::1;:59;;;;:::i;:::-;-1:-1:-1::0;;;;;536:42:145;548:3;510:24;;;;507:72;;317:270;22816:174:166::1;22797:193;;23377:1;23350:7;:23;;;:28;;:44;;;;-1:-1:-1::0;23382:12:166;;::::1;23350:44;23346:144;;;23418:10;::::0;-1:-1:-1;;;;;23418:10:166::1;:24;23443:6:::0;23452:18:::1;:7:::0;:16:::1;:18::i;:::-;23451:19;;;:::i;:::-;23418:53;::::0;-1:-1:-1;;;;;;23418:53:166::1;::::0;;;;;;::::1;::::0;::::1;37555:25:267::0;;;;37627:2;37616:22;37596:18;;;37589:50;37528:18;;23418:53:166::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;23346:144;23588:14;:21;;;23613:1;23588:26:::0;23584:277:::1;;23638:10;;;;;;;;;-1:-1:-1::0;;;;;23638:10:166::1;-1:-1:-1::0;;;;;23638:24:166::1;;23699:4;23741:9;:17;23751:6;23741:17;;;;;;;;;;;:25;;;23807:12;23638:204;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;23584:277;20953:2922;;20073:3802;19743:4142;;19715:4170;24062:13;24078:11;:9;;::::0;;::::1;::::0;::::1;:4:::0;:9:::1;:::i;:11::-;24062:27;;24145:1;24137:6;24130:17;-1:-1:-1::0;24730:12:166::1;::::0;24761:89:::1;24775:11;24788:4:::0;24794:7;24834:14:::1;;::::0;::::1;24788:4:::0;24834:14:::1;:::i;:::-;24803:11;::::0;-1:-1:-1;;;;;24803:11:166;;::::1;:46:::0;::::1;;24761:13;:89::i;:::-;24729:121:::0;;-1:-1:-1;24729:121:166;-1:-1:-1;24864:18:166::1;24729:121:::0;;24864:18:::1;:::i;:::-;:23:::0;24860:1421:::1;;25084:39;25153:1:::0;25126:7:::1;:23;;;:28;;:184;;25251:59;25269:18;:7;:16;:18::i;:::-;25290:19;:8;:17;:19::i;:::-;25289:20;;;:::i;25251:59::-;25126:184;;;25173:59;25192:19;:8;:17;:19::i;:::-;25191:20;;;:::i;:::-;25213:18;:7;:16;:18::i;25173:59::-;25084:226;;25605:12;25620:104;25643:4;25649:7;25658;25667:45;:23;1437:2:145::0;1426:21;;1257:206;25620:104:166::1;25605:119:::0;-1:-1:-1;25773:79:166::1;25787:7:::0;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;25828:23:166;25773:13:::1;:79::i;:::-;25866:64;25887:7:::0;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;25922:7:166;25866:20:::1;:64::i;:::-;26014:256;26088:43;:23;1108:3:145::0;1104:15;;941:194;26088:43:166::1;26049:36;:16;1108:3:145::0;1104:15;;941:194;26049:36:166::1;:82;;;;:::i;:::-;26238:18;:7;:16;:18::i;:::-;26190:45;:23;1437:2:145::0;1426:21;;1257:206;26190:45:166::1;26149:38;:16;1437:2:145::0;1426:21;;1257:206;26149:38:166::1;:86;;;;:::i;26014:256::-;25995:275;;24889:1392;;24860:1421;26394:33;26415:11;:9;;::::0;;::::1;::::0;::::1;:4:::0;:9:::1;:::i;:11::-;-1:-1:-1::0;;;;;26394:11:166::1;:20;::::0;::::1;:33::i;:::-;-1:-1:-1::0;;26373:15:166::1;26370:57:::0;;-1:-1:-1;;;;26370:57:166::1;-1:-1:-1::0;;;26370:57:166::1;::::0;;;;;::::1;;::::0;;;;26570:7:::1;::::0;-1:-1:-1;;;;;26570:7:166::1;::::0;-1:-1:-1;26570:26:166::1;::::0;26621:4;;26653:15:::1;26370:57;26653:15;26728:14;;::::0;::::1;26621:4:::0;26728:14:::1;:::i;:::-;26697:11;::::0;26570:184:::1;::::0;-1:-1:-1;;;;;;26570:184:166::1;::::0;;;;;;::::1;::::0;;;-1:-1:-1;;;;;26697:11:166;;::::1;:46:::0;::::1;::::0;;;::::1;::::0;26570:184:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;26812:26;;;26800:38;;18056:8789;;;17761:9084:::0;;;;;;;;;:::o;33146:520::-;33420:16;;771:10:156;-1:-1:-1;;;;;793:11:156;771:34;;767:63;;814:16;;-1:-1:-1;;;814:16:156;;;;;;;;;;;767:63;-1:-1:-1;;;33474:36:166;-1:-1:-1;33572:87:166::1;33593:11;:9;;::::0;;::::1;::::0;::::1;:4:::0;:9:::1;:::i;:11::-;33606:9;33628:7;33637:6;33645:12;33617:41;;;;;;;;;;:::i;33572:87::-;33146:520:::0;;;;;;;;;;:::o;2615:146:157:-;2709:6;2734:20;;-1:-1:-1;;;2734:20:157;;;;;;;;;;;8762:100:73;12517:13;:11;:13::i;:::-;8834:21:::1;8852:1;8834:9;:21::i;:::-;8762:100::o:0;16905:254:190:-;16972:14;17002:13;:63;;;;-1:-1:-1;17027:23:190;;-1:-1:-1;;;;;17027:23:190;17019:46;;17002:63;16998:124;;;-1:-1:-1;;17088:23:190;;-1:-1:-1;;;;;17088:23:190;;16905:254::o;16998:124::-;-1:-1:-1;;17139:13:190;;-1:-1:-1;;;;;17139:13:190;;16905:254::o;15329:181::-;12517:13:73;:11;:13::i;:::-;15413::190::1;:30:::0;;-1:-1:-1;;;;;;15413:30:190::1;-1:-1:-1::0;;;;;15413:30:190;::::1;;::::0;;15458:45:::1;::::0;::::1;::::0;::::1;::::0;15413:30;;15458:45:::1;:::i;1005:138:156:-:0;1084:12;771:10;-1:-1:-1;;;;;793:11:156;771:34;;767:63;;814:16;;-1:-1:-1;;;814:16:156;;;;;;;;;;;767:63;1115:21:::1;1131:4;;1115:15;:21::i;:::-;1108:28;;840:1;1005:138:::0;;;;:::o;31340:538:166:-;31622:16;;771:10:156;-1:-1:-1;;;;;793:11:156;771:34;;767:63;;814:16;;-1:-1:-1;;;814:16:156;;;;;;;;;;;767:63;-1:-1:-1;;;31689:33:166;-1:-1:-1;31784:87:166::1;31805:11;:9;;::::0;;::::1;::::0;::::1;:4:::0;:9:::1;:::i;12386:242:190:-:0;12517:13:73;:11;:13::i;:::-;12520:14:190::1;:48:::0;;-1:-1:-1;;;;;;12520:48:190::1;-1:-1:-1::0;;;;;12520:48:190;::::1;;::::0;;12583:38:::1;::::0;::::1;::::0;::::1;::::0;12520:48;;12583:38:::1;:::i;35866:919:166:-:0;36029:7;;-1:-1:-1;;;;;36029:7:166;36007:10;:30;36003:63;;36046:20;;-1:-1:-1;;;36046:20:166;;;;;;;;;;;36003:63;36477:11;;36418:24;;36445:9;;36418:24;;36463:26;;:4;;-1:-1:-1;;;;;36477:11:166;36463:13;:26::i;:::-;-1:-1:-1;;;;;36445:46:166;;;;;;;;;;;;;;;;;-1:-1:-1;36445:46:166;36418:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;36418:73:166;;;;;;;;;;-1:-1:-1;;;36418:73:166;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;36505:37:166;;:102;;-1:-1:-1;515:4:147;496:24;;515:4;496:24;;36546:61:166;;36505:102;36501:164;;;515:4:147;496:24;;36630::166;;-1:-1:-1;;;36630:24:166;;;;;;13136:25:267;;13124:2;13109:18;;12990:177;36501:164:166;36742:11;-1:-1:-1;;;;;36742:18:166;;36772:4;36761:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;36742:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;36742:36:166;;;;;;;;;;;;:::i;:::-;;35916:869;35866:919;:::o;16282:232:190:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16422:28:190;;;;:19;:28;;;;;:35;-1:-1:-1;;;16422:35:190;;;;16421:86;;16492:15;16421:86;;;16461:28;;;;:19;:28;;;;;16421:86;16402:105;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16402:105:190;;;;;;;;;;-1:-1:-1;;;16402:105:190;;;;;;;;;;;;-1:-1:-1;;16282:232:190:o;27788:2092:166:-;28032:16;;771:10:156;-1:-1:-1;;;;;793:11:156;771:34;;767:63;;814:16;;-1:-1:-1;;;814:16:156;;;;;;;;;;;767:63;28361:14:166::1;28377::::0;28396:16:::1;:6;1108:3:145::0;1104:15;;941:194;28396:16:166::1;28414;:6;1437:2:145::0;1426:21;;1257:206;28414:16:166::1;28360:71:::0;;-1:-1:-1;28360:71:166;-1:-1:-1;28441:17:166::1;28492:18;;::::0;::::1;:7:::0;:18:::1;:::i;:::-;28461:49;;28487:1;28461:23;::::0;::::1;;:27;:49;:69;;28523:7;28461:69;;;28513:7;28461:69;28441:89:::0;-1:-1:-1;28615:12:166::1;28630:69;28653:4:::0;28630:69:::1;;::::0;;::::1;::::0;::::1;28659:7:::0;28630:69:::1;:::i;:::-;28668:7;28677:10;28689:9;;28630:22;:69::i;:::-;28615:84;;28786:7;-1:-1:-1::0;;;;;;;;;;;28763:31:166::1;28830:7;-1:-1:-1::0;;;;;;;;;;;28807:31:166::1;28858:64;;;::::0;;::::1;::::0;::::1;28879:7:::0;28858:64:::1;:::i;:::-;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;28914:7:166;28858:20:::1;:64::i;:::-;29033:21;;;::::0;;::::1;::::0;::::1;29049:4:::0;29033:21:::1;:::i;:::-;:15;:21::i;:::-;29211:13;29227:11;:9;;::::0;;::::1;::::0;::::1;:4:::0;:9:::1;:::i;:11::-;29312:10;::::0;:37:::1;::::0;-1:-1:-1;;;29312:37:166;;::::1;::::0;::::1;13136:25:267::0;;;29211:27:166;;-1:-1:-1;29263:29:166::1;::::0;29295:55:::1;::::0;-1:-1:-1;;;;;29312:10:166::1;::::0;:29:::1;::::0;13109:18:267;;29312:37:166::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;29295:55::-;29263:87:::0;-1:-1:-1;;;;;;29368:37:166;::::1;::::0;29364:143:::1;;29425:14;-1:-1:-1::0;;;;;29425:24:166::1;;29450:7;29459:4;29465:7;29474:6;29482:9;;29425:67;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;29364:143;29249:268;29586:18;:7;:16;:18::i;:::-;-1:-1:-1::0;;;29627:25:166;-1:-1:-1;29562:42:166;-1:-1:-1;29702:32:166::1;29718:6:::0;29726:7;29702:15:::1;:32::i;:::-;29796:77;29817:6;29825:9;29847:7;29856;29865:6;29836:36;;;;;;;;;;:::i;29796:77::-;28093:1787;;;;;27788:2092:::0;;;;;;;;;:::o;35201:124::-;12517:13:73;:11;:13::i;:::-;35274:15:166::1;:44:::0;;-1:-1:-1;;;;;;35274:44:166::1;-1:-1:-1::0;;;;;35274:44:166;;;::::1;::::0;;;::::1;::::0;;35201:124::o;12791:290:190:-;12517:13:73;:11;:13::i;:::-;12887:42:190::1;12912:16;12887:24;:42::i;:::-;12985:34:::0;;:15:::1;:34:::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;;-1:-1:-1::0;;;12985:34:190::1;-1:-1:-1::0;;;;12985:34:190::1;::::0;;::::1;-1:-1:-1::0;;;12985:34:190::1;::::0;-1:-1:-1;;;;12985:34:190;;::::1;::::0;::::1;-1:-1:-1::0;;12985:34:190;;;;;;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;::::1;::::0;;13034:40;-1:-1:-1;;;;;;;;;;;13034:40:190;::::1;::::0;13003:16;;13034:40:::1;:::i;16779:171:166:-:0;16889:6;771:10:156;-1:-1:-1;;;;;793:11:156;771:34;;767:63;;814:16;;-1:-1:-1;;;814:16:156;;;;;;;;;;;767:63;16914:29:166::1;;-1:-1:-1::0;;;16914:29:166::1;;;;;;;;;;;2149:136:192::0;-1:-1:-1;;;;;;;;;;;;;;;;;2252:9:192;:26;2262:15;:8;515:4:147;496:24;;;271:265;2262:15:192;2252:26;;;;;;;;;;;2245:33;;;;;;;;;;;;;;;;;;;;;;;;;;;2149:136;;;:::o;35577:174:166:-;12517:13:73;:11;:13::i;:::-;35652:12:166::1;:43:::0;;-1:-1:-1;;;;;;35652:43:166::1;-1:-1:-1::0;;;;;35652:43:166;::::1;;::::0;;35710:34:::1;::::0;::::1;::::0;::::1;::::0;35652:43;;35710:34:::1;:::i;34053:371::-:0;34203:16;771:10:156;-1:-1:-1;;;;;793:11:156;771:34;;767:63;;814:16;;-1:-1:-1;;;814:16:156;;;;;;;;;;;767:63;-1:-1:-1;;;;34332:85:166::1;34353:11;:9;;::::0;;::::1;::::0;::::1;:4:::0;:9:::1;:::i;:11::-;34366:9;34388:7;34397:8;34407;34377:39;;;;;;;;;;:::i;34332:85::-;34053:371:::0;;;;;;;;:::o;34555:175::-;34661:12;;:62;;-1:-1:-1;;;34661:62:166;;34638:4;;-1:-1:-1;;;;;34661:12:166;;:29;;:62;;34691:10;;34703:19;;;;34661:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;10363:708:73:-;12517:13;:11;:13::i;:::-;10597:19:::1;10591:4;10584:33;10643:12;10637:4;10630:26;10705:4;10699;10689:21;10811:12;10805:19;10792:11;10789:36;10786:157;;;10857:10;10851:4;10844:24;10924:4;10918;10911:18;10786:157;11020:1;10999:23:::0;;11041::::1;11051:12:::0;11041:9:::1;:23::i;:::-;10363:708:::0;:::o;8348:349::-;12517:13;:11;:13::i;:::-;8520:8:::1;8516:2;8512:17;8502:150;;8562:10;8556:4;8549:24;8633:4;8627;8620:18;8502:150;8671:19;8681:8;8671:9;:19::i;34870:165:166:-:0;34982:12;;:46;;-1:-1:-1;;;34982:46:166;;34959:4;;-1:-1:-1;;;;;34982:12:166;;:25;;:46;;35008:19;;;;34982:46;;;:::i;49471:491::-;49617:7;;-1:-1:-1;;;;;49598:27:166;;;49617:7;;49598:27;;:61;;-1:-1:-1;49648:10:166;;-1:-1:-1;;;;;49629:30:166;;;49648:10;;49629:30;49598:61;49594:98;;;49471:491;;:::o;49594:98::-;49764:10;;:38;;-1:-1:-1;;;49764:38:166;;;;;13136:25:267;;;-1:-1:-1;;;;;49764:10:166;;;;:29;;13109:18:267;;49764:38:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;49759:76;;49471:491;;:::o;49759:76::-;49905:50;;-1:-1:-1;;;49905:50:166;;;;;;;;;;;7292:355:73;-1:-1:-1;;7498:18:73;7488:8;7485:32;7475:156;;7550:10;7544:4;7537:24;7612:4;7606;7599:18;17420:925:190;17681:35;17719:22;17736:4;17719:16;:22::i;:::-;17681:60;-1:-1:-1;;;;;;17755:43:190;;;17751:142;;17814:68;;-1:-1:-1;;;17814:68:190;;-1:-1:-1;;;;;17814:37:190;;;;;:68;;17852:7;;17861:20;;;;17814:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17751:142;18113:33;18149:23;18166:5;18149:16;:23::i;:::-;18113:59;;18225:20;-1:-1:-1;;;;;18186:60:190;18194:18;-1:-1:-1;;;;;18186:60:190;;18182:157;;18262:66;;-1:-1:-1;;;18262:66:190;;-1:-1:-1;;;;;18262:35:190;;;;;:66;;18298:7;;18307:20;;;;18262:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18182:157;17517:828;;17420:925;;;:::o;1776:151:126:-;1859:1;1828:8;1875:5;;1871:49;;;1882:38;-1:-1:-1;;;1882:36:126;:38::i;:::-;1776:151;;;:::o;4176:342:84:-;4378:4;4366:10;4360:4;4348:10;4340:6;4336:2;4329:5;4324:59;4314:188;;4416:10;4410:4;4403:24;4483:4;4477;4470:18;4314:188;4176:342;;:::o;45791:452:166:-;45932:8;;:48;;-1:-1:-1;;;45932:48:166;;-1:-1:-1;;;;;45932:8:166;;;;:26;;:48;;45959:7;;45968:4;;45974:5;;45932:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46018:20;46040:10;46052:18;46072:14;46090:29;46111:7;46090:11;-1:-1:-1;;;;;46090:20:166;;;:29;;;;:::i;:::-;46017:102;;-1:-1:-1;46017:102:166;;-1:-1:-1;46017:102:166;-1:-1:-1;46017:102:166;-1:-1:-1;46151:7:166;46134:102;46017;;;;46202:33;-1:-1:-1;;;;;46202:11:166;:24;46151:7;46202:24;:33::i;:::-;46134:102;;;-1:-1:-1;;;;;43784:32:267;;;;43766:51;;43864:1;43853:21;;;;43848:2;43833:18;;43826:49;43923:8;43911:21;;;43891:18;;;43884:49;43969:21;;43964:2;43949:18;;43942:49;-1:-1:-1;;;;;44028:32:267;44048:3;44007:19;;44000:61;46134:102:166;;;;;43753:3:267;46134:102:166;;;45879:364;;;;45791:452;;;:::o;14572:581:190:-;3123:6;14720:16;:24;;;:46;;;14716:100;;;14789:16;;-1:-1:-1;;;14789:16:190;;;;;;;;;;;14716:100;3123:6;14879:16;:25;;;:47;;;14875:105;;;14949:20;;-1:-1:-1;;;14949:20:190;;;;;;;;;;;14875:105;3240:6;15042:51;;:16;:25;;;:51;;;15038:109;;;15116:20;;-1:-1:-1;;;15116:20:190;;;;;;;;;;;1472:2873:146;1743:12;1769:24;:8;-1:-1:-1;;;;;1769:22:146;;:24::i;:::-;1765:2574;;;1956:1;1953;1950;1947;1939:6;1935:2;1928:5;1923:35;1912:46;;2086:7;2081:127;;2113:80;2148:2;2159:1;-1:-1:-1;;;2113:34:146;:80::i;:::-;1765:2574;;;2352:4;2346:11;-1:-1:-1;;;2483:3:146;2476:79;-1:-1:-1;;;;;2596:2:146;2592:51;2588:1;2583:3;2579:11;2572:72;2720:6;2715:2;2710:3;2706:12;2699:28;3649:2;3646:1;3642:2;3637:3;3634:1;3624:8;3617:5;3612:40;3141:16;3134:24;3128:2;3110:16;3107:24;3103:1;3099;3093:8;3090:15;3086:46;3083:76;2859:815;2828:846;;3752:1;3747:3;3740:14;3853:1;3846:4;3841:3;3837:14;3830:25;3956:1;3949:4;3944:3;3940:14;3933:25;;4125:7;4120:209;;4152:162;4224:8;-1:-1:-1;;;;;;4152:34:146;:162::i;:::-;1546:2799;1472:2873;;;:::o;46557:659:166:-;46667:1;46648:16;:6;1108:3:145;1104:15;;941:194;46648:16:166;:20;;;46644:278;;;46684:90;46710:11;46731:4;46748:16;:6;1108:3:145;1104:15;;941:194;46748:16:166;46744:21;;46743:22;;;:::i;:::-;46684:18;;-1:-1:-1;;;;;46684:25:166;;:90;;46768:5;46684:25;:90::i;:::-;46644:278;;;46814:1;46795:16;:6;1108:3:145;1104:15;;941:194;46795:16:166;:20;;;46791:131;;;46831:11;-1:-1:-1;;;;;46831:16:166;;46848:8;:18;;;46876:4;46892:16;:6;1108:3:145;1104:15;;941:194;46892:16:166;46888:21;;46831:80;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46791:131;46955:1;46936:16;:6;1437:2:145;1426:21;;1257:206;46936:16:166;:20;;;46932:278;;;46972:90;46998:11;47019:4;47036:16;:6;1437:2:145;1426:21;;1257:206;47036:16:166;47032:21;;47031:22;;;:::i;:::-;46972:18;;;;-1:-1:-1;;;;;46972:25:166;;:90;;47056:5;46972:25;:90::i;46932:278::-;47102:1;47083:16;:6;1437:2:145;1426:21;;1257:206;47083:16:166;:20;;;47079:131;;;47119:11;-1:-1:-1;;;;;47119:16:166;;47136:8;:18;;;47164:4;47180:16;:6;1437:2:145;1426:21;;1257:206;47180:16:166;47176:21;;47119:80;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46557:659;;:::o;37897:1830::-;38114:13;38207:24;38265:7;:18;;;38234:49;;38260:1;38234:7;:23;;;:27;:49;;;:83;;38303:14;;;;:4;:14;:::i;:::-;38234:83;;;38286:14;;;;;;;;:::i;:::-;38536:10;;38207:110;;-1:-1:-1;38379:387:166;;38424:11;;38455:4;;38482:7;;38519:60;;-1:-1:-1;;;;;38536:10:166;:29;38566:11;:9;;;;;;;38455:4;38566:9;:::i;:11::-;38536:42;;;;;;;;;;;;;13136:25:267;;13124:2;13109:18;;12990:177;38519:60:166;38611:15;38670:1;38661:6;:10;;;:29;;38684:6;38661:29;;;38674:7;38675:6;38674:7;:::i;:::-;-1:-1:-1;;;;;38379:387:166;38720:13;;;;;;;;;-1:-1:-1;;;;;38720:13:166;-1:-1:-1;;;;;38720:26:166;;38747:7;38720:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;38379:16;:387::i;:::-;38368:398;;38849:8;38861:1;38849:13;38845:59;;38878:15;;;38845:59;38993:16;39012:172;39056:4;39092:15;39131:8;39164:9;;39012:23;:172::i;:::-;38993:191;-1:-1:-1;39500:220:166;;;;;;;;39526:4;39500:220;:::i;:::-;39580:11;;-1:-1:-1;;;;;39544:47:166;;;39580:11;;39544:47;:76;;39619:1;39544:76;;;39594:22;39605:11;39594:8;:22;:::i;:::-;39670:11;;-1:-1:-1;;;;;39634:47:166;;;39670:11;;39634:47;:76;;39688:22;39699:11;39688:8;:22;:::i;:::-;39500:12;:220::i;39634:76::-;39684:1;39500:12;:220::i;:::-;38129:1598;;37897:1830;;;;;;;;:::o;47625:562::-;47814:10;47826;47871:7;:18;;;47840:49;;47866:1;47840:7;:23;;;:27;:49;;;:199;;47981:28;:6;1437:2:145;1426:21;;1257:206;47981:28:166;47980:29;;;:::i;:::-;48012:26;:6;1108:3:145;1104:15;;941:194;48012:26:166;48011:27;;;:::i;:::-;47840:199;;;47906:26;:6;1108:3:145;1104:15;;941:194;47906:26:166;47905:27;;;:::i;:::-;47935:28;:6;1437:2:145;1426:21;;1257:206;47935:28:166;47934:29;;;:::i;:::-;47813:226;;;;;;;;48123:6;48109:12;48102:28;48164:6;48150:12;48143:28;48088:93;;47625:562;;;;:::o;48538:588::-;48772:9;48784:12;48789:6;48784:12;:::i;:::-;48842:18;;48811:23;;;;48772:24;;-1:-1:-1;48811:49:166;;48842:18;48811:27;;;:49;48807:313;;48921:1;48910:9;48903:20;48958:5;48947:9;48940:24;48807:313;;;49053:5;49042:9;49035:24;49094:1;49083:9;49076:20;48706:420;48538:588;;;;:::o;2098:168:126:-;2150:6;-1:-1:-1;;;2172:1:126;:13;2168:57;;2187:38;-1:-1:-1;;;2187:36:126;:38::i;:::-;-1:-1:-1;2256:1:126;2098:168::o;3889:4020:192:-;4087:11;;;4155;:9;;;;;;;:4;:9;:::i;:11::-;4264:37;4304:17;;;:9;:17;;;;;4335:23;;;;4139:27;;-1:-1:-1;4304:17:192;4335:28;;4331:85;;4379:26;;;;4331:85;4627:18;;4610:35;;;;;;4606:92;;4661:26;;;;4606:92;4755:20;4782:29;-1:-1:-1;;;;;4782:21:192;;4804:6;4782:21;:29::i;:::-;4754:57;;;;;4994:1;4967:7;:23;;;:28;4963:2074;;5105:20;5161:15;:23;;;5134:7;:23;;;5129:55;5128:147;;5251:7;:23;;;5128:147;;;5204:15;:23;;;5128:147;5105:170;;5496:299;5560:12;5610:7;:25;;;5664:33;5690:6;5664:12;-1:-1:-1;;;;;5664:25:192;;;:33;;;;:::i;:::-;5736:15;5779:1;5496:24;:299::i;:::-;-1:-1:-1;5470:325:192;;-1:-1:-1;5470:325:192;-1:-1:-1;4963:2074:192;;-1:-1:-1;;4963:2074:192;;6309:361;6373:12;6423:7;:18;;;:78;;6474:27;1862:10:131;6500:1:192;6474:27;:::i;:::-;6423:78;;;6444:27;6470:1;2042:49:131;6444:27:192;:::i;:::-;6530:33;-1:-1:-1;;;;;6530:25:192;;6556:6;6530:25;:33::i;:::-;6603:7;:23;;;6602:24;;;:::i;:::-;6654:1;6309:24;:361::i;:::-;-1:-1:-1;6861:23:192;;;;6283:387;;-1:-1:-1;6283:387:192;;-1:-1:-1;6849:35:192;;6845:182;;-1:-1:-1;6845:182:192;;6950:9;6940:6;6914:15;:23;;;:32;;;;:::i;:::-;6913:46;;;;:::i;:::-;6904:55;;6989:15;:23;;;6977:35;;6845:182;7099:11;;:29;;;;-1:-1:-1;7114:14:192;;7099:29;7095:86;;;7144:26;;;;;7095:86;7334:6;7307:15;:23;;;:33;;;;;;;:::i;:::-;;;;;;;;7377:9;7350:15;:23;;;:36;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;7556:17:192;;;7574:14;;:48;;7608:14;;;;:4;:14;:::i;:::-;7574:48;;;7591:14;;;;;;;;:::i;:::-;7632:4;7639:6;7556:90;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7656:104;7714:12;7736:4;7743:9;7754:5;7658:13;7657:14;:48;;7691:14;;;;;;;;:::i;:::-;7657:48;;;7674:14;;;;:4;:14;:::i;:::-;-1:-1:-1;;;;;7656:57:192;;:104;;;:57;:104::i;:::-;7864:18;;7840:62;;;45949:14:267;;45942:22;45924:41;;45996:2;45981:18;;45974:34;;;46024:18;;46017:34;;;7856:6:192;;7840:62;;45912:2:267;45897:18;7840:62:192;;;;;;;4129:3780;;;3889:4020;;;;;;;;:::o;1580:996:128:-;1682:20;1704:10;1716:18;1736:12;1821:17;1841:25;1859:6;1841:17;:25::i;:::-;1892:27;;-1:-1:-1;;;1892:27:128;;;;;13136:25:267;;;1821:45:128;;-1:-1:-1;1877:12:128;;-1:-1:-1;;;;;1892:16:128;;;;;13109:18:267;;1892:27:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1877:42;;-1:-1:-1;;;;;2245:4:128;2241:53;2225:69;;2374:4;2369:3;2365:14;2362:1;2351:29;2343:37;;2464:8;2457:4;2452:3;2448:14;2444:29;2429:44;;2551:8;2544:4;2539:3;2535:14;2531:29;2522:38;;2172:398;;1580:996;;;;;;;:::o;6145:1089:73:-;-1:-1:-1;;6579:16:73;;-1:-1:-1;;;;;6427:26:73;;;;;;6539:38;6536:1;;6528:78;6703:16;;6698:3;6694:26;6681:40;;6663:59;;10363:708;:::o;37117:155:166:-;37215:7;;37191:12;;-1:-1:-1;;;;;37215:7:166;:20;37236:28;;;;37247:5;37236:28;:::i;:::-;37215:50;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37117:155;;;;:::o;712:278:232:-;911:14;;796:9;;-1:-1:-1;;;;;448:51:146;;;;;;880:79:232;;945:14;;880:79;;;-1:-1:-1;;928:14:232;;;;712:278::o;40233:3379:166:-;515:4:147;496:24;;40302:13:166;40438:17;;;:9;:17;;;;;:25;174:11:170;40546:60:166;;40542:73;;;40608:7;;40233:3379;:::o;40542:73::-;40703:1;40675:17;;;:9;:17;;;;;:29;;;40703:1;;41001:34;40685:6;41018:16;41001:8;:34::i;:::-;41186:11;;40946:89;;-1:-1:-1;40946:89:166;;-1:-1:-1;40946:89:166;-1:-1:-1;41045:16:166;;;;41168:30;;:8;;-1:-1:-1;;;;;41186:11:166;41168:17;:30::i;:::-;41147:51;;41311:19;41333:8;-1:-1:-1;;;;;41333:16:166;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;41311:40;-1:-1:-1;;;;;;41386:25:166;;;41426:15;;41422:482;;41560:17;41555:339;;41597:46;41611:6;41619:11;41632:10;41597:13;:46::i;:::-;41555:339;;;41823:24;41837:10;41823:24;;:::i;:::-;;;41878:1;41865:14;;41555:339;41918:15;;41914:965;;42309:7;;:32;;-1:-1:-1;;;42309:32:166;;;;;13136:25:267;;;-1:-1:-1;;;;;42309:7:166;;;;:24;;13109:18:267;;42309:32:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:74;;;;-1:-1:-1;42346:10:166;;:37;;-1:-1:-1;;;42346:37:166;;;;;13136:25:267;;;-1:-1:-1;;;;;42346:10:166;;;;:29;;13109:18:267;;42346:37:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;42345:38;42309:74;42305:564;;;42558:7;;;;;;;;;-1:-1:-1;;;;;42558:7:166;-1:-1:-1;;;;;42558:15:166;;42574:8;42584:10;42596:15;;;;;;;;;;;42644:8;:18;;;-1:-1:-1;;;;;42613:50:166;:11;;;;;;;;;-1:-1:-1;;;;;42613:11:166;-1:-1:-1;;;;;42613:50:166;;42558:106;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42305:564;;;42797:25;42812:10;42797:25;;:::i;:::-;;;42853:1;42840:14;;42305:564;42893:16;;42889:444;;43032:17;43027:296;;43069:55;43083:6;43091:8;-1:-1:-1;;;;;43091:17:166;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;43112:11;43069:13;:55::i;:::-;43027:296;;;43249:26;43264:11;43249:26;;:::i;:::-;;;43307:1;43293:15;;43027:296;43396:16;;43392:103;;43450:20;;43428:56;;43442:6;;-1:-1:-1;;;;;43450:20:166;43472:11;43428:13;:56::i;:::-;43510:95;;;47703:25:267;;;47759:2;47744:18;;47737:34;;;47787:18;;;47780:34;;;47845:2;47830:18;;47823:34;;;47888:3;47873:19;;47866:35;;;43530:6:166;;43510:95;;47690:3:267;47675:19;43510:95:166;;;;;;;40292:3320;;;;;;;;;40233:3379;:::o;43896:1581::-;44024:341;;;-1:-1:-1;;;;;;;;;;;50371:11:166;48345:25:267;;-1:-1:-1;;;;;;;;;;;50371:11:166;48401:2:267;48386:18;;48379:34;-1:-1:-1;;;;;;;;;;;50371:11:166;48429:18:267;;;48422:34;-1:-1:-1;;;;;;;;;;;50371:11:166;48487:2:267;48472:18;;48465:34;-1:-1:-1;;;;;;;;;;;50371:11:166;48530:3:267;48515:19;;48508:35;-1:-1:-1;;;;;;;;;;;50371:11:166;48574:3:267;48559:19;;48552:35;-1:-1:-1;;;;;;;;;;;50371:11:166;48618:3:267;48603:19;;48596:35;-1:-1:-1;;;;;;;;;;;50371:11:166;48662:3:267;48647:19;;48640:35;-1:-1:-1;;;;;;;;;;;50371:11:166;48706:3:267;48691:19;;48684:35;-1:-1:-1;;;;;;;;;;;50371:11:166;48750:3:267;48735:19;;48728:35;-1:-1:-1;;;;;;;;;;;50371:11:166;48794:3:267;48779:19;;48772:36;-1:-1:-1;;;;;;;;;;;50371:11:166;48839:3:267;48824:19;;48817:36;44024:341:166;;44046:7;;44024:341;;;;;;48332:3:267;44024:341:166;;;44426:369;44485:7;44515;44546:46;-1:-1:-1;;;;;;;;;;;50371:11:166;-1:-1:-1;;;;;;;;;;;50371:11:166;44546:46;:::i;:::-;44616;-1:-1:-1;;;;;;;;;;;50371:11:166;-1:-1:-1;;;;;;;;;;;50371:11:166;44616:46;:::i;:::-;44683:40;-1:-1:-1;;;;;;;;;;;50371:11:166;-1:-1:-1;;;;;;;;;;;50371:11:166;44683:40;:::i;:::-;44744;-1:-1:-1;;;;;;;;;;;50371:11:166;-1:-1:-1;;;;;;;;;;;50371:11:166;44744:40;:::i;:::-;44426:35;:369::i;:::-;45062:1;-1:-1:-1;;;;;;;;;;;45040:24:166;45099:1;-1:-1:-1;;;;;;;;;;;45077:24:166;45133:1;-1:-1:-1;;;;;;;;;;;45114:21:166;45167:1;-1:-1:-1;;;;;;;;;;;45148:21:166;45205:1;-1:-1:-1;;;;;;;;;;;45182:25:166;45243:1;-1:-1:-1;;;;;;;;;;;45220:25:166;45278:1;-1:-1:-1;;;;;;;;;;;45258:22:166;45313:1;-1:-1:-1;;;;;;;;;;;45293:22:166;45351:1;-1:-1:-1;;;;;;;;;;;45328:25:166;45389:1;-1:-1:-1;;;;;;;;;;;45366:25:166;45424:1;-1:-1:-1;;;;;;;;;;;45404:22:166;45459:1;-1:-1:-1;;;;;;;;;;;45439:22:166;43896:1581;;:::o;753:163:113:-;863:8;860:1;853:19;895:4;892:1;885:15;8183:398:128;8265:17;8351;8371:25;8389:6;8371:17;:25::i;:::-;8351:45;-1:-1:-1;8450:12:128;8473:37;690:1;8351:45;8473:37;:::i;:::-;8550:22;;-1:-1:-1;;;8550:22:128;;;;;13136:25:267;;;8465:46:128;;-1:-1:-1;;;;;;8550:16:128;;;;;13109:18:267;;8550:22:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8542:31;8183:398;-1:-1:-1;;;;;8183:398:128:o;4910:153:146:-;-1:-1:-1;;;;;4998:58:146;;;4910:153::o;3508:1663:113:-;3953:4;3947:11;-1:-1:-1;;;4094:33:113;;;-1:-1:-1;;;;;4163:66:113;;4156:4;4147:14;;4140:90;-1:-1:-1;;;;;;4299:98:113;;4276:4;4267:14;;4243:168;4483:4;4476;4467:14;;4460:28;3919:2;3909;3891:16;3887:25;3883:34;;;3879:43;4569:4;4565:26;;4558:4;4549:14;;4542:50;4662:16;4655:4;4646:14;;4639:40;3710:21;;4755:16;-1:-1:-1;4745:4:113;4736:14;;4721:51;4869:4;4850:15;4844:4;4840:26;4835:3;4831:36;4824:50;-1:-1:-1;;;;;;5003:17:113;4999:90;4964:15;4958:4;4954:26;4949:3;4945:36;4921:182;5138:15;5132:4;5128:26;5123:3;5116:39;1027:807:194;1304:4;1300:528;;;1324:7;-1:-1:-1;;;;;1324:12:194;;1337:5;1344:15;:8;-1:-1:-1;;;;;1344:13:194;-1:-1:-1;;;;;5144:41:146;;5069:123;1344:15:194;1361:6;1324:44;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1300:528;;;1389:24;:8;-1:-1:-1;;;;;1389:22:194;;:24::i;:::-;1385:443;;;1429:7;-1:-1:-1;;;;;1429:14:194;;1451:6;1429:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1385:443;;;1491:22;;-1:-1:-1;;;1491:22:194;;-1:-1:-1;;;;;1491:12:194;;;;;:22;;1504:8;;1491:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;1531:22:194;;1548:4;1531:22;1527:261;;1573:86;;-1:-1:-1;;;1573:86:194;;-1:-1:-1;;;;;1573:53:194;;;;;:86;;1627:5;;1642:7;;1652:6;;1573:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1527:261;;;1698:75;;-1:-1:-1;;;1698:75:194;;-1:-1:-1;;;;;1698:49:194;;;;;:75;;1756:7;;1766:6;;1698:75;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1527:261;1801:7;-1:-1:-1;;;;;1801:14:194;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6768:1609:190:-;7098:13;7193:62;;7229:15;7193:62;7410:18;7431:35;7454:11;:9;;;;;;;:4;:9;:::i;7431:35::-;:43;;-1:-1:-1;;;;;;7565:37:190;;;7561:141;;7632:59;;-1:-1:-1;;;7632:59:190;;-1:-1:-1;;;;;7632:31:190;;;;;:59;;7664:4;;7670:7;;7679:11;;7632:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7618:73;;7561:141;7870:13;:21;;;:60;;;;-1:-1:-1;7895:21:190;;:35;;;;;;;7870:60;7866:126;;;-1:-1:-1;7960:21:190;;7866:126;8084:11;:16;;8099:1;8084:16;8080:62;;8116:15;;;8080:62;3123:6;8199:25;;;;:11;:25;:::i;:::-;:47;;;;:::i;:::-;8310:60;;-1:-1:-1;;;8310:60:190;;8188:58;;-1:-1:-1;;;;;;8310:17:190;;;;;:60;;8328:16;;8354:4;;8188:58;;8310:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7118:1259;6768:1609;;;;;;;;;;:::o;9004:1827::-;9184:17;9283:71;;9324:19;9283:71;9457:13;9473:11;:9;;;;;;;:4;:9;:::i;:11::-;9457:27;;9494:20;9517:30;9540:6;9517:22;:30::i;:::-;:39;;;9494:62;;9652:13;:18;;9669:1;9652:18;9648:68;;9686:19;;;;9648:68;9766:16;9786:32;;;;9797:9;9786:32;:::i;:::-;9765:53;-1:-1:-1;;;;;;9903:22:190;;9899:72;;9941:19;;;;;9899:72;10088:15;:24;3123:6;;10077:35;;10088:24;;;;;10077:8;:35;:::i;:::-;:57;;;;:::i;:::-;10313:14;;10062:72;;-1:-1:-1;;;;;;10313:14:190;10301:524;;10358:49;-1:-1:-1;;;;;10358:25:190;;10384:8;10394:12;10358:25;:49::i;:::-;10442:6;10426:82;10450:8;10476:16;10495:12;10426:82;;;;;;;;:::i;:::-;;;;;;;;10301:524;;;10676:14;;10642:64;;-1:-1:-1;;;;;10642:25:190;;;;10676:14;10693:12;10642:25;:64::i;:::-;10720:14;;;:94;;-1:-1:-1;;;10720:94:190;;;;;50865:25:267;;;-1:-1:-1;;;;;50926:32:267;;;50906:18;;;50899:60;50995:32;;;50975:18;;;50968:60;51044:18;;;51037:34;;;10720:14:190;;:27;;50837:19:267;;10720:94:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10301:524;9203:1628;;;9004:1827;;;;;;;:::o;2824:293:192:-;515:4:147;496:24;;2920:14:192;2963:18;;;:9;:18;;;;;:38;;2993:8;;2920:14;2963:38;;2993:8;;2963:38;:::i;:::-;;;;-1:-1:-1;;3011:18:192;;;;:9;:18;;;;;:26;;:38;;3041:8;;3011:18;:38;;3041:8;;3011:38;:::i;:::-;;;;-1:-1:-1;;3065:45:192;;;32792:25:267;;;32848:2;32833:18;;32826:34;;;3082:7:192;;3065:45;;32765:18:267;3065:45:192;;;;;;;2910:207;2824:293;;;:::o;3514:3451:129:-;3724:24;;;;3840:26;;;-1:-1:-1;;;;;3923:41:129;;;;;;;;3993:19;;;4027:2922;;;;4058:30;4111:81;4136:15;4135:16;;4169:8;563:3;4154:23;563:3;4111:15;:81::i;:::-;4058:134;;4221:10;:230;;4364:87;4394:19;4415:18;4435:9;4446:4;4364:29;:87::i;:::-;4221:230;;;4254:87;4284:18;4304:19;4325:9;4336:4;4254:29;:87::i;:::-;4210:241;;4499:8;4473:22;:34;4469:969;;4614:18;4595:37;;563:3;4666:8;:24;:256;;4852:70;4878:8;4888;4913;563:3;4898:23;4852:25;:70::i;:::-;4666:256;;;4717:8;4666:256;4654:268;;4469:969;;;5032:22;5021:33;;5095:153;5160:19;5181:9;5192:22;5216:10;5095:39;:153::i;:::-;5076:172;;5411:8;5392:15;5391:16;;5383:36;5371:48;;4469:969;5467:10;:228;;5609:86;5639:19;5660:16;5678:9;5689:5;5609:29;:86::i;:::-;5467:228;;;5500:86;5530:16;5548:19;5569:9;5580:5;5500:29;:86::i;:::-;5455:240;;4040:1670;4027:2922;;;5746:10;:232;;5890:88;5920:19;5941:18;5961:9;5972:5;5890:29;:88::i;:::-;5746:232;;;5779:88;5809:18;5829:19;5850:9;5861:5;5779:29;:88::i;:::-;5734:244;;6028:9;6008:15;6000:37;5996:516;;6145:18;6126:37;;5996:516;;;6317:15;6297:36;;6398:95;6439:19;6460:9;6471;6482:10;6398:40;:95::i;:::-;6355:138;;5996:516;6540:10;:226;;6681:85;6711:19;6732:16;6750:9;6761:4;6681:29;:85::i;:::-;6540:226;;;6573:85;6603:16;6621:19;6642:9;6653:4;6573:29;:85::i;:::-;6529:237;;6864:70;6890:8;6900;6925;563:3;6910:23;6864:25;:70::i;:::-;6852:82;;4027:2922;3816:3143;;;3514:3451;;;;;;;;;;:::o;14852:160:128:-;14953:51;;14917:7;;14953:51;;14984:6;;414:1;;14953:51;;51239:19:267;;;51283:2;51274:12;;51267:28;51320:2;51311:12;;51082:247;14953:51:128;;;;;;;;;;;;;14943:62;;;;;;14936:69;;14852:160;;;:::o;5734:432:190:-;5900:11;;5943:9;;5893:61;;-1:-1:-1;;;5893:61:190;;5923:10;5893:61;;;51508:51:267;-1:-1:-1;;;;;5943:9:190;;;51575:18:267;;;51568:60;5957:7:190;;5900:11;;;;;5893:29;;51481:18:267;;5893:61:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:71;5889:165;;;5987:11;;6016:9;;5980:63;;-1:-1:-1;;;5980:63:190;;-1:-1:-1;;;;;5987:11:190;;;;5980:27;;:63;;6016:9;;;-1:-1:-1;;6028:14:190;5980:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5889:165;6107:9;;:52;;-1:-1:-1;;;6107:52:190;;;;;51869:25:267;;;-1:-1:-1;;;;;51930:32:267;;;51910:18;;;51903:60;51979:18;;;51972:34;;;6107:9:190;;;;:22;;51842:18:267;;6107:52:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5734:432;;;:::o;910:878:200:-;1111:13;;;;:30;;-1:-1:-1;1128:13:200;;;1111:30;1107:333;;;1241:7;-1:-1:-1;;;;;1162:267:200;1207:7;1162:267;1275:19;:8;:17;:19::i;:::-;1321;:8;:17;:19::i;:::-;1162:267;;;52289:2:267;52278:22;;;52260:41;;52337:22;;;;52332:2;52317:18;;52310:50;-1:-1:-1;52376:18:267;;;52369:60;;;52460:2;52445:18;;52438:60;1162:267:200;;;;;;52247:3:267;1162:267:200;;;1107:333;1518:10;;;;:24;;-1:-1:-1;1532:10:200;;;1518:24;1514:268;;;-1:-1:-1;;;;;1563:208:200;;1607:7;1563:208;1678:24;1683:6;1684:5;1683:6;:::i;:::-;1678:22;:24::i;:::-;1732;1737:6;1738:5;1737:6;:::i;1732:24::-;1563:208;;;-1:-1:-1;;;;;52701:32:267;;;52683:51;;52770:32;;;;52765:2;52750:18;;52743:60;52656:18;1563:208:200;;;;;;;910:878;;;;;;:::o;741:4141:116:-;823:14;1212:5;;;823:14;-1:-1:-1;;1216:1:116;1212;1400:20;1473:5;1469:2;1466:13;1458:5;1454:2;1450:14;1446:34;1437:43;;;1633:5;1619:11;:19;1611:28;;;;;;1720:5;1729:1;1720:10;1716:177;;-1:-1:-1;1807:23:116;;;;-1:-1:-1;1865:13:116;;1716:177;2193:17;2293:11;2290:1;2287;2280:25;2701:12;2717:15;;;2716:31;;2869:22;;;;;3776:1;3757;:15;;3756:21;;4019:17;;;4015:21;;4008:28;4081:17;;;4077:21;;4070:28;4144:17;;;4140:21;;4133:28;4207:17;;;4203:21;;4196:28;4270:17;;;4266:21;;4259:28;4334:17;;;4330:21;;;4323:28;3313:12;;;;3309:23;;;3334:1;3305:31;2454:20;;;2443:32;;;3372:12;;;;2501:21;;;;3029:16;;;;3363:21;;;;4827:11;;;;;-1:-1:-1;;741:4141:116;;;;;;:::o;11589:938:127:-;11740:15;-1:-1:-1;;;;;10718:50:127;;;10666;;;10662:107;10849:3;10845:14;;;11099:15;;;11089:26;-1:-1:-1;;;;;;;;11907:18:127;;12323:51;11907:18;11089:26;335:27:115;12323:15:127;:51::i;:::-;12313:61;;12502:7;12498:1;12484:11;12473:9;12461:10;12454:42;12451:49;12447:63;12438:7;12434:77;12423:88;;12409:112;;;11589:938;;;;;;:::o;9398:1050::-;9549:7;9616:13;-1:-1:-1;;;;;9600:29:127;:13;-1:-1:-1;;;;;9600:29:127;;9596:98;;;9665:13;;9680;9596:98;-1:-1:-1;;;;;9840:13:127;9836:62;9826:205;;9932:10;9929:1;9922:21;10008:4;10002;9995:18;9826:205;-1:-1:-1;;;;;;;295:2:115;10080:45:127;;;;-1:-1:-1;;;;;10160:29:127;;;10139:50;10211:7;:220;;10418:13;-1:-1:-1;;;;;10361:70:127;:54;10377:10;10389;10401:13;-1:-1:-1;;;;;10361:54:127;:15;:54::i;:::-;:70;;;;;:::i;:::-;;10211:220;;;10237:105;10262:64;10288:10;10300;10312:13;-1:-1:-1;;;;;10262:64:127;:25;:64::i;:::-;10328:13;-1:-1:-1;;;;;10237:105:127;606:9:133;;;620;;617:16;;602:32;;469:181;10237:105:127;10204:227;;;;9398:1050;;;;;;;:::o;5164:296:116:-;5256:14;5315:25;5322:1;5325;5328:11;5315:6;:25::i;:::-;5306:34;;5371:11;5358:25;;;;;:::i;:::-;5368:1;5365;5358:25;:30;5354:90;;5416:8;;:12;5408:21;;;;;6460:909:127;6614:7;-1:-1:-1;;;;;6887:9:127;6883:50;6876:58;-1:-1:-1;;;;;6804:8:127;6800:57;6793:65;6773:175;6770:309;;;6977:10;6974:1;6967:21;7060:4;7054;7047:18;6770:309;7172:10;:190;;7286:76;7326:8;7336:9;7347:8;7357:4;7286:39;:76::i;:::-;7172:190;;;7197:74;7235:8;7245:9;7256:8;7266:4;7197:37;:74::i;7938:909::-;8094:7;-1:-1:-1;;;;;8367:9:127;8363:50;8356:58;-1:-1:-1;;;;;8284:8:127;8280:57;8273:65;8253:175;8250:309;;;8457:10;8454:1;8447:21;8540:4;8534;8527:18;8250:309;8646:10;:194;;8764:76;8802:8;8812:9;8823;8834:5;8764:37;:76::i;8646:194::-;8671:78;8711:8;8721:9;8732;8743:5;8671:39;:78::i;1460:151:126:-;1542:1;1558:6;;;;;;1554:50;;1566:38;-1:-1:-1;;;1566:36:126;:38::i;790:155::-;876:1;-1:-1:-1;;;;;892:6:126;;;;888:50;;900:38;-1:-1:-1;;;900:36:126;:38::i;4438:1450:127:-;4597:7;4778:3;4774:1108;;;4797:16;-1:-1:-1;;;;;4834:27:127;;;:172;;4954:52;4970:6;-1:-1:-1;;;4996:9:127;-1:-1:-1;;;;;4954:52:127;:15;:52::i;:::-;4834:172;;;4884:47;-1:-1:-1;;;;;4884:47:127;;295:2:115;4885:33:127;;;4884:47;:::i;:::-;4797:223;-1:-1:-1;5042:42:127;5043:28;4797:223;-1:-1:-1;;;;;5043:17:127;;:28;:::i;:::-;5042:40;:42::i;:::-;5035:49;;;;;4774:1108;5115:16;-1:-1:-1;;;;;5152:27:127;;;:205;;5295:62;5321:6;-1:-1:-1;;;5347:9:127;-1:-1:-1;;;;;5295:62:127;:25;:62::i;:::-;5152:205;;;5202:70;295:2:115;5227:33:127;;;-1:-1:-1;;;;;5202:70:127;;606:9:133;;;620;;617:16;;602:32;;469:181;5202:70:127;5115:256;;5583:8;-1:-1:-1;;;;;5528:8:127;5524:57;5521:71;5511:220;;5626:10;5623:1;5616:21;5708:4;5702;5695:18;5511:220;-1:-1:-1;;;;;5837:19:127;;;;-1:-1:-1;5822:35:127;;1535:2065;1692:7;1831:6;1841:1;1831:11;1827:32;;-1:-1:-1;1851:8:127;1844:15;;1827:32;-1:-1:-1;;;;;;;295:2:115;1890:45:127;;;;1946:1648;;;;-1:-1:-1;;;;;2015:17:127;;;;;;:6;:17;:6;2054:16;;;;:::i;:::-;;:28;2050:345;;2128:20;;;2174:25;;;2170:207;;2293:60;2319:10;2331:8;-1:-1:-1;;;;;2293:60:127;2341:11;2293:25;:60::i;:::-;2278:76;;;;;;;2170:207;2084:311;2050:345;-1:-1:-1;2488:70:127;2513:10;2551:6;2526:21;-1:-1:-1;;;;;2526:21:127;;2513:10;2526:21;:::i;:::-;2525:32;;;;:::i;:::-;606:9:133;;;620;;617:16;;602:32;;469:181;1946:1648:127;-1:-1:-1;;;;;2636:17:127;;;;;;3069:20;;;3066:83;3179:23;;;3033:195;2998:397;;3287:10;3284:1;3277:21;3368:4;3362;3355:18;2998:397;3452:20;;;3497:72;:60;3452:10;-1:-1:-1;;;;;3497:60:127;;3452:20;3497:25;:60::i;460:155:126:-;546:1;-1:-1:-1;;;;;562:6:126;;;;558:50;;570:38;-1:-1:-1;;;570:36:126;:38::i;138:227:267:-;-1:-1:-1;;;;;326:32:267;;;;308:51;;296:2;281:18;;138:227::o;829:131::-;-1:-1:-1;;;;;904:31:267;;894:42;;884:70;;950:1;947;940:12;965:134;1033:20;;1062:31;1033:20;1062:31;:::i;1104:156::-;1164:5;1209:3;1200:6;1195:3;1191:16;1187:26;1184:46;;;1226:1;1223;1216:12;1184:46;-1:-1:-1;1248:6:267;1104:156;-1:-1:-1;1104:156:267:o;1265:170::-;1339:5;1384:3;1375:6;1370:3;1366:16;1362:26;1359:46;;;1401:1;1398;1391:12;1440:347;1491:8;1501:6;1555:3;1548:4;1540:6;1536:17;1532:27;1522:55;;1573:1;1570;1563:12;1522:55;-1:-1:-1;1596:20:267;;-1:-1:-1;;;;;1628:30:267;;1625:50;;;1671:1;1668;1661:12;1625:50;1708:4;1700:6;1696:17;1684:29;;1760:3;1753:4;1744:6;1736;1732:19;1728:30;1725:39;1722:59;;;1777:1;1774;1767:12;1722:59;1440:347;;;;;:::o;1792:829::-;1959:6;1967;1975;1983;1991;2044:3;2032:9;2023:7;2019:23;2015:33;2012:53;;;2061:1;2058;2051:12;2012:53;2100:9;2087:23;2119:31;2144:5;2119:31;:::i;:::-;2169:5;-1:-1:-1;2193:63:267;2248:7;2243:2;2228:18;;2193:63;:::i;:::-;2183:73;;2275:78;2345:7;2339:3;2328:9;2324:19;2275:78;:::i;:::-;2265:88;-1:-1:-1;2404:3:267;2389:19;;2376:33;-1:-1:-1;;;;;2421:30:267;;2418:50;;;2464:1;2461;2454:12;2418:50;2503:58;2553:7;2544:6;2533:9;2529:22;2503:58;:::i;:::-;1792:829;;;;-1:-1:-1;1792:829:267;;-1:-1:-1;2580:8:267;;2477:84;1792:829;-1:-1:-1;;;1792:829:267:o;2833:119::-;2918:8;2911:5;2907:20;2900:5;2897:31;2887:59;;2942:1;2939;2932:12;2957:132;3024:20;;3053:30;3024:20;3053:30;:::i;3094:245::-;3152:6;3205:2;3193:9;3184:7;3180:23;3176:32;3173:52;;;3221:1;3218;3211:12;3173:52;3260:9;3247:23;3279:30;3303:5;3279:30;:::i;3344:272::-;3428:6;3481:2;3469:9;3460:7;3456:23;3452:32;3449:52;;;3497:1;3494;3487:12;3449:52;3536:9;3523:23;3555:31;3580:5;3555:31;:::i;3621:394::-;3714:6;3767:2;3755:9;3746:7;3742:23;3738:32;3735:52;;;3783:1;3780;3773:12;3735:52;3810:23;;-1:-1:-1;;;;;3845:30:267;;3842:50;;;3888:1;3885;3878:12;3842:50;3911:22;;3967:3;3949:16;;;3945:26;3942:46;;;3984:1;3981;3974:12;4228:374;4324:6;4332;4385:2;4373:9;4364:7;4360:23;4356:32;4353:52;;;4401:1;4398;4391:12;4353:52;-1:-1:-1;;4446:23:267;;;4566:2;4551:18;;;4538:32;;-1:-1:-1;4228:374:267:o;4931:127::-;4992:10;4987:3;4983:20;4980:1;4973:31;5023:4;5020:1;5013:15;5047:4;5044:1;5037:15;5063:275;5134:2;5128:9;5199:2;5180:13;;-1:-1:-1;;5176:27:267;5164:40;;-1:-1:-1;;;;;5219:34:267;;5255:22;;;5216:62;5213:88;;;5281:18;;:::i;:::-;5317:2;5310:22;5063:275;;-1:-1:-1;5063:275:267:o;5343:118::-;5429:5;5422:13;5415:21;5408:5;5405:32;5395:60;;5451:1;5448;5441:12;5466:918;5528:5;5576:4;5564:9;5559:3;5555:19;5551:30;5548:50;;;5594:1;5591;5584:12;5548:50;5647:2;5641:9;5689:4;5677:17;;-1:-1:-1;;;;;5709:34:267;;5745:22;;;5706:62;5703:88;;;5771:18;;:::i;:::-;5807:2;5800:22;5840:6;-1:-1:-1;5840:6:267;5870:23;;5902:32;5870:23;5902:32;:::i;:::-;5943:23;;6018:2;6003:18;;5990:32;6031;5990;6031;:::i;:::-;6091:2;6079:15;;6072:32;6156:2;6141:18;;6128:32;6169;6128;6169;:::i;:::-;6229:2;6217:15;;6210:32;6294:2;6279:18;;6266:32;6307:30;6266:32;6307:30;:::i;:::-;6365:2;6353:15;;;;6346:32;5466:918;;-1:-1:-1;;5466:918:267:o;6389:388::-;6520:6;6528;6581:3;6569:9;6560:7;6556:23;6552:33;6549:53;;;6598:1;6595;6588:12;6549:53;6643:23;;;-1:-1:-1;6709:62:267;6763:7;6758:2;6743:18;;6709:62;:::i;:::-;6699:72;;6389:388;;;;;:::o;7131:424::-;7208:12;;-1:-1:-1;;;;;7204:38:267;;;7192:51;;7296:4;7285:16;;;7279:23;7275:49;;7259:14;;;7252:73;7378:4;7367:16;;;7361:23;7386:8;7357:38;7341:14;;;7334:62;7459:4;7448:16;;;7442:23;7439:1;7428:38;7412:14;;;7405:62;7520:4;7509:16;;;7503:23;7499:49;7483:14;;7476:73;7131:424::o;7560:249::-;7746:3;7731:19;;7759:44;7735:9;7785:6;7759:44;:::i;7814:756::-;7871:5;7919:4;7907:9;7902:3;7898:19;7894:30;7891:50;;;7937:1;7934;7927:12;7891:50;7990:2;7984:9;8032:4;8020:17;;-1:-1:-1;;;;;8052:34:267;;8088:22;;;8049:62;8046:88;;;8114:18;;:::i;:::-;8150:2;8143:22;8183:6;-1:-1:-1;8183:6:267;8213:23;;8245:30;8213:23;8245:30;:::i;:::-;8284:23;;8380:2;8365:18;;;8352:32;8400:15;;;8393:32;8477:2;8462:18;;8449:32;8490:33;8449:32;8490:33;:::i;:::-;8551:2;8539:15;;;;8532:32;7814:756;;-1:-1:-1;;7814:756:267:o;8575:796::-;8729:6;8737;8745;8753;8761;8814:3;8802:9;8793:7;8789:23;8785:33;8782:53;;;8831:1;8828;8821:12;8782:53;8870:9;8857:23;8889:31;8914:5;8889:31;:::i;:::-;8939:5;-1:-1:-1;8963:63:267;9018:7;9013:2;8998:18;;8963:63;:::i;:::-;8953:73;;9045:58;9095:7;9089:3;9078:9;9074:19;9045:58;:::i;:::-;9035:68;-1:-1:-1;9154:3:267;9139:19;;9126:33;-1:-1:-1;;;;;9171:30:267;;9168:50;;;9214:1;9211;9204:12;9774:1139;10027:6;10035;10043;10051;10059;10067;10075;10128:3;10116:9;10107:7;10103:23;10099:33;10096:53;;;10145:1;10142;10135:12;10096:53;10184:9;10171:23;10203:31;10228:5;10203:31;:::i;:::-;10253:5;-1:-1:-1;10277:63:267;10332:7;10327:2;10312:18;;10277:63;:::i;:::-;10267:73;;10359:78;10429:7;10423:3;10412:9;10408:19;10359:78;:::i;:::-;10349:88;-1:-1:-1;10510:3:267;10495:19;;10482:33;;-1:-1:-1;10614:3:267;10599:19;;10586:33;;-1:-1:-1;10696:3:267;10681:19;;10668:33;-1:-1:-1;;;;;10713:30:267;;10710:50;;;10756:1;10753;10746:12;10710:50;10795:58;10845:7;10836:6;10825:9;10821:22;10795:58;:::i;:::-;9774:1139;;;;-1:-1:-1;9774:1139:267;;-1:-1:-1;9774:1139:267;;;;10769:84;;-1:-1:-1;;;9774:1139:267:o;11229:118::-;11316:5;11313:1;11302:20;11295:5;11292:31;11282:59;;11337:1;11334;11327:12;11352:655;11464:6;11472;11480;11488;11541:3;11529:9;11520:7;11516:23;11512:33;11509:53;;;11558:1;11555;11548:12;11509:53;11597:9;11584:23;11616:31;11641:5;11616:31;:::i;:::-;11666:5;-1:-1:-1;11690:63:267;11745:7;11740:2;11725:18;;11690:63;:::i;:::-;11680:73;;11805:3;11794:9;11790:19;11777:33;11819;11844:7;11819:33;:::i;:::-;11871:7;-1:-1:-1;11930:3:267;11915:19;;11902:33;11944:31;11902:33;11944:31;:::i;:::-;11352:655;;;;-1:-1:-1;11352:655:267;;-1:-1:-1;;11352:655:267:o;12012:241::-;12068:6;12121:2;12109:9;12100:7;12096:23;12092:32;12089:52;;;12137:1;12134;12127:12;12089:52;12176:9;12163:23;12195:28;12217:5;12195:28;:::i;12731:254::-;12818:6;12871:2;12859:9;12850:7;12846:23;12842:32;12839:52;;;12887:1;12884;12877:12;12839:52;-1:-1:-1;12932:23:267;;12731:254;-1:-1:-1;12731:254:267:o;13639:409::-;13709:6;13717;13770:2;13758:9;13749:7;13745:23;13741:32;13738:52;;;13786:1;13783;13776:12;13738:52;13813:23;;-1:-1:-1;;;;;13848:30:267;;13845:50;;;13891:1;13888;13881:12;13845:50;13930:58;13980:7;13971:6;13960:9;13956:22;13930:58;:::i;:::-;14007:8;;13904:84;;-1:-1:-1;13639:409:267;-1:-1:-1;;;;13639:409:267:o;14053:288::-;14094:3;14132:5;14126:12;14159:6;14154:3;14147:19;14215:6;14208:4;14201:5;14197:16;14190:4;14185:3;14181:14;14175:47;14267:1;14260:4;14251:6;14246:3;14242:16;14238:27;14231:38;14330:4;14323:2;14319:7;14314:2;14306:6;14302:15;14298:29;14293:3;14289:39;14285:50;14278:57;;;14053:288;;;;:::o;14346:217::-;14493:2;14482:9;14475:21;14456:4;14513:44;14553:2;14542:9;14538:18;14530:6;14513:44;:::i;15057:1120::-;15142:6;15202:3;15190:9;15181:7;15177:23;15173:33;15218:2;15215:22;;;15233:1;15230;15223:12;15215:22;-1:-1:-1;15302:2:267;15296:9;15344:3;15332:16;;-1:-1:-1;;;;;15363:34:267;;15399:22;;;15360:62;15357:88;;;15425:18;;:::i;:::-;15461:2;15454:22;15498:23;;15530:31;15498:23;15530:31;:::i;:::-;15570:21;;15643:2;15628:18;;15615:32;15656:33;15615:32;15656:33;:::i;:::-;15717:2;15705:15;;15698:32;15782:2;15767:18;;15754:32;15795;15754;15795;:::i;:::-;15855:2;15843:15;;15836:32;15920:2;15905:18;;15892:32;15933:31;15892:32;15933:31;:::i;:::-;15992:2;15980:15;;15973:32;16057:3;16042:19;;16029:33;16071;16029;16071;:::i;:::-;16132:3;16120:16;;16113:33;16124:6;15057:1120;-1:-1:-1;;;15057:1120:267:o;16278:505::-;16440:4;16482:3;16471:9;16467:19;16459:27;;16532:8;16523:6;16517:13;16513:28;16502:9;16495:47;16610:8;16602:4;16594:6;16590:17;16584:24;16580:39;16573:4;16562:9;16558:20;16551:69;16688:8;16680:4;16672:6;16668:17;16662:24;16658:39;16651:4;16640:9;16636:20;16629:69;16768:4;16760:6;16756:17;16750:24;16743:32;16736:40;16729:4;16718:9;16714:20;16707:70;16278:505;;;;:::o;16788:990::-;16987:6;16995;17003;17011;17019;17027;17071:9;17062:7;17058:23;17101:3;17097:2;17093:12;17090:32;;;17118:1;17115;17108:12;17090:32;17157:9;17144:23;17176:31;17201:5;17176:31;:::i;:::-;17226:5;-1:-1:-1;17250:63:267;17305:7;17300:2;17285:18;;17250:63;:::i;:::-;17240:73;-1:-1:-1;17348:2:267;-1:-1:-1;;17329:17:267;;17325:26;17322:46;;;17364:1;17361;17354:12;17322:46;-1:-1:-1;17402:3:267;17387:19;;;-1:-1:-1;17479:3:267;17464:19;;17451:33;;-1:-1:-1;17561:3:267;17546:19;;17533:33;-1:-1:-1;;;;;17578:30:267;;17575:50;;;17621:1;17618;17611:12;17575:50;17660:58;17710:7;17701:6;17690:9;17686:22;17660:58;:::i;:::-;16788:990;;;;-1:-1:-1;16788:990:267;;-1:-1:-1;16788:990:267;;17737:8;;16788:990;-1:-1:-1;;;16788:990:267:o;18075:915::-;18209:6;18217;18225;18233;18241;18249;18302:3;18290:9;18281:7;18277:23;18273:33;18270:53;;;18319:1;18316;18309:12;18270:53;18358:9;18345:23;18377:31;18402:5;18377:31;:::i;:::-;18427:5;-1:-1:-1;18451:63:267;18506:7;18501:2;18486:18;;18451:63;:::i;:::-;18441:73;-1:-1:-1;18587:3:267;18572:19;;18559:33;;-1:-1:-1;18691:3:267;18676:19;;18663:33;;-1:-1:-1;18773:3:267;18758:19;;18745:33;-1:-1:-1;;;;;18790:30:267;;18787:50;;;18833:1;18830;18823:12;19650:1801;19873:13;;16252;16245:21;16233:34;;19844:3;19829:19;;19945:4;19937:6;19933:17;19927:24;19960:51;20005:4;19994:9;19990:20;19976:12;16252:13;16245:21;16233:34;;16182:91;19960:51;;20060:4;20052:6;20048:17;20042:24;20075:53;20122:4;20111:9;20107:20;20091:14;16252:13;16245:21;16233:34;;16182:91;20075:53;;20177:4;20169:6;20165:17;20159:24;20192:53;20239:4;20228:9;20224:20;20208:14;16252:13;16245:21;16233:34;;16182:91;20192:53;;20294:4;20286:6;20282:17;20276:24;20309:53;20356:4;20345:9;20341:20;20325:14;16252:13;16245:21;16233:34;;16182:91;20309:53;;20411:4;20403:6;20399:17;20393:24;20426:53;20473:4;20462:9;20458:20;20442:14;16252:13;16245:21;16233:34;;16182:91;20426:53;;20528:4;20520:6;20516:17;20510:24;20543:53;20590:4;20579:9;20575:20;20559:14;16252:13;16245:21;16233:34;;16182:91;20543:53;;20645:4;20637:6;20633:17;20627:24;20660:53;20707:4;20696:9;20692:20;20676:14;16252:13;16245:21;16233:34;;16182:91;20660:53;;20762:6;20754;20750:19;20744:26;20779:55;20826:6;20815:9;20811:22;20795:14;16252:13;16245:21;16233:34;;16182:91;20779:55;;20883:6;20875;20871:19;20865:26;20900:55;20947:6;20936:9;20932:22;20916:14;16252:13;16245:21;16233:34;;16182:91;20900:55;;21004:6;20996;20992:19;20986:26;21021:55;21068:6;21057:9;21053:22;21037:14;16252:13;16245:21;16233:34;;16182:91;21021:55;;21126:6;21118;21114:19;21108:26;21143:56;21191:6;21180:9;21176:22;21159:15;16252:13;16245:21;16233:34;;16182:91;21143:56;;21249:6;21241;21237:19;21231:26;21266:56;21314:6;21303:9;21299:22;21282:15;16252:13;16245:21;16233:34;;16182:91;21266:56;;21372:6;21364;21360:19;21354:26;21389:56;21437:6;21426:9;21422:22;21405:15;16252:13;16245:21;16233:34;;16182:91;21389:56;;19650:1801;;;;:::o;21456:246::-;21550:6;21603:3;21591:9;21582:7;21578:23;21574:33;21571:53;;;21620:1;21617;21610:12;21571:53;21643;21688:7;21677:9;21643:53;:::i;21937:517::-;22042:6;22050;22058;22111:3;22099:9;22090:7;22086:23;22082:33;22079:53;;;22128:1;22125;22118:12;22079:53;22167:9;22154:23;22186:31;22211:5;22186:31;:::i;:::-;22236:5;-1:-1:-1;22260:63:267;22315:7;22310:2;22295:18;;22260:63;:::i;:::-;22250:73;;22375:3;22364:9;22360:19;22347:33;22389;22414:7;22389:33;:::i;:::-;22441:7;22431:17;;;21937:517;;;;;:::o;23312:501::-;23371:5;23378:6;23438:3;23425:17;23524:2;23520:7;23509:8;23493:14;23489:29;23485:43;23465:18;23461:68;23451:96;;23543:1;23540;23533:12;23451:96;23571:33;;23675:4;23662:18;;;-1:-1:-1;23623:21:267;;-1:-1:-1;;;;;;23692:30:267;;23689:50;;;23735:1;23732;23725:12;23689:50;23782:6;23766:14;23762:27;23755:5;23751:39;23748:59;;;23803:1;23800;23793:12;23818:267;23907:6;23902:3;23895:19;23959:6;23952:5;23945:4;23940:3;23936:14;23923:43;-1:-1:-1;24011:1:267;23986:16;;;24004:4;23982:27;;;23975:38;;;;24067:2;24046:15;;;-1:-1:-1;;24042:29:267;24033:39;;;24029:50;;23818:267::o;24090:2224::-;24155:3;24207:45;24246:5;24239;24207:45;:::i;:::-;24273:6;24268:3;24261:19;24301:72;24365:6;24360:3;24356:16;24342:12;24328;24301:72;:::i;:::-;24289:84;;;24420:56;24470:4;24463:5;24459:16;24452:5;24420:56;:::i;:::-;24518:3;24512:4;24508:14;24501:4;24496:3;24492:14;24485:38;24546:64;24605:4;24589:14;24573;24546:64;:::i;:::-;24532:78;;;;24657:56;24707:4;24700:5;24696:16;24689:5;24657:56;:::i;:::-;24757:3;24749:6;24745:16;24738:4;24733:3;24729:14;24722:40;24785:66;24844:6;24828:14;24812;24785:66;:::i;:::-;24920:4;24909:16;;;24896:30;24942:14;;;24935:31;25035:4;25024:16;;;25011:30;25057:14;;;25050:31;25150:4;25139:16;;;25126:30;25172:14;;;25165:31;24771:80;-1:-1:-1;25227:36:267;;-1:-1:-1;;25257:4:267;25246:16;;25227:36;:::i;:::-;-1:-1:-1;;;;;95:31:267;25331:4;25322:14;;83:44;25368:35;25397:4;25386:16;;25368:35;:::i;:::-;7110:8;7099:20;25455:4;25446:14;;7087:33;25530:6;25519:18;;;25506:32;25554:16;;;25547:33;25627:58;25677:6;25666:18;;25519;25627:58;:::i;:::-;25731:3;25723:6;25719:16;25710:6;25705:3;25701:16;25694:42;25759:66;25818:6;25802:14;25786;25759:66;:::i;:::-;25745:80;;;;25872:58;25922:6;25915:5;25911:18;25904:5;25872:58;:::i;:::-;25976:3;25968:6;25964:16;25955:6;25950:3;25946:16;25939:42;26004:66;26063:6;26047:14;26031;26004:66;:::i;:::-;25990:80;;;;26117:58;26167:6;26160:5;26156:18;26149:5;26117:58;:::i;:::-;26221:3;26213:6;26209:16;26200:6;26195:3;26191:16;26184:42;26242:66;26301:6;26285:14;26269;26242:66;:::i;26319:289::-;26514:2;26503:9;26496:21;26477:4;26534:68;26598:2;26587:9;26583:18;26575:6;26534:68;:::i;26613:506::-;26709:6;26717;26725;26778:2;26766:9;26757:7;26753:23;26749:32;26746:52;;;26794:1;26791;26784:12;26746:52;26826:9;26820:16;26845:31;26870:5;26845:31;:::i;:::-;26945:2;26930:18;;26924:25;26895:5;;-1:-1:-1;26958:33:267;26924:25;26958:33;:::i;:::-;27083:2;27068:18;;;;27062:25;26613:506;;27010:7;;-1:-1:-1;27062:25:267;;26613:506;-1:-1:-1;;26613:506:267:o;27124:556::-;-1:-1:-1;;;;;27441:32:267;;;27423:51;;27510:32;;;27505:2;27490:18;;27483:60;27579:32;;27574:2;27559:18;;27552:60;27410:3;27395:19;;27621:53;27670:2;27655:18;;27647:6;27621:53;:::i;27685:521::-;27762:4;27768:6;27828:11;27815:25;27922:2;27918:7;27907:8;27891:14;27887:29;27883:43;27863:18;27859:68;27849:96;;27941:1;27938;27931:12;27849:96;27968:33;;28020:20;;;-1:-1:-1;;;;;;28052:30:267;;28049:50;;;28095:1;28092;28085:12;28049:50;28128:4;28116:17;;-1:-1:-1;28159:14:267;28155:27;;;28145:38;;28142:58;;;28196:1;28193;28186:12;28211:423;-1:-1:-1;;;;;28418:32:267;;28400:51;;28494:14;;28487:22;28482:2;28467:18;;28460:50;28546:2;28541;28526:18;;28519:30;;;-1:-1:-1;;28566:62:267;;28609:18;;28601:6;28593;28566:62;:::i;28639:251::-;28709:6;28762:2;28750:9;28741:7;28737:23;28733:32;28730:52;;;28778:1;28775;28768:12;28730:52;28810:9;28804:16;28829:31;28854:5;28829:31;:::i;28895:347::-;29109:3;29094:19;;29122:44;29098:9;29148:6;29122:44;:::i;:::-;-1:-1:-1;;;;;29203:32:267;;;;29223:3;29182:19;;;;29175:61;28895:347;;-1:-1:-1;28895:347:267:o;29247:247::-;29315:6;29368:2;29356:9;29347:7;29343:23;29339:32;29336:52;;;29384:1;29381;29374:12;29336:52;29416:9;29410:16;29435:29;29458:5;29435:29;:::i;29499:718::-;-1:-1:-1;;;;;29836:32:267;;;29818:51;;29905:32;;29900:2;29885:18;;29878:60;29969:2;29954:18;;29947:34;;;30024:14;;30017:22;30012:2;29997:18;;29990:50;30071:3;30056:19;;30049:35;;;30121:3;29856;30100:19;;30093:32;;;-1:-1:-1;;30142:69:267;;30191:19;;30183:6;30142:69;:::i;:::-;30134:77;29499:718;-1:-1:-1;;;;;;;;29499:718:267:o;30222:274::-;-1:-1:-1;;;;;30414:32:267;;;;30396:51;;30478:2;30463:18;;30456:34;30384:2;30369:18;;30222:274::o;30501:245::-;30568:6;30621:2;30609:9;30600:7;30596:23;30592:32;30589:52;;;30637:1;30634;30627:12;30589:52;30669:9;30663:16;30688:28;30710:5;30688:28;:::i;31258:1085::-;31330:5;31378:4;31366:9;31361:3;31357:19;31353:30;31350:50;;;31396:1;31393;31386:12;31350:50;31449:2;31443:9;31491:4;31479:17;;-1:-1:-1;;;;;31511:34:267;;31547:22;;;31508:62;31505:88;;;31573:18;;:::i;:::-;31609:2;31602:22;;;31693:16;;31718:23;;31807:2;31792:18;;;31786:25;31827:15;;;31820:32;31882:18;;31876:25;31642:6;;-1:-1:-1;31642:6:267;;31910:31;31876:25;31910:31;:::i;:::-;31969:2;31957:15;;31950:32;32048:2;32033:18;;;32027:25;32068:15;;;32061:32;32159:3;32144:19;;;32138:26;32180:16;;;32173:33;32251:3;32236:19;;32230:26;32265:30;32230:26;32265:30;:::i;:::-;32323:3;32311:16;;;;32304:33;31258:1085;;-1:-1:-1;;31258:1085:267:o;32348:265::-;32451:6;32504:3;32492:9;32483:7;32479:23;32475:33;32472:53;;;32521:1;32518;32511:12;32472:53;32544:63;32599:7;32588:9;32544:63;:::i;32871:127::-;32932:10;32927:3;32923:20;32920:1;32913:31;32963:4;32960:1;32953:15;32987:4;32984:1;32977:15;33003:128;33070:9;;;33091:11;;;33088:37;;;33105:18;;:::i;33136:360::-;33359:6;33348:9;33341:25;33402:2;33397;33386:9;33382:18;33375:30;33322:4;33422:68;33486:2;33475:9;33471:18;33463:6;33422:68;:::i;33501:168::-;33574:9;;;33605;;33622:15;;;33616:22;;33602:37;33592:71;;33643:18;;:::i;33674:127::-;33735:10;33730:3;33726:20;33723:1;33716:31;33766:4;33763:1;33756:15;33790:4;33787:1;33780:15;33806:217;33846:1;33872;33862:132;;33916:10;33911:3;33907:20;33904:1;33897:31;33951:4;33948:1;33941:15;33979:4;33976:1;33969:15;33862:132;-1:-1:-1;34008:9:267;;33806:217::o;34700:830::-;34798:5;34785:19;34813:33;34838:7;34813:33;:::i;:::-;-1:-1:-1;;;;;34867:33:267;34855:46;;34949:4;34938:16;;34925:30;34964:33;34925:30;34964:33;:::i;:::-;-1:-1:-1;;;;;35029:33:267;35022:4;35013:14;;35006:57;35111:4;35100:16;;35087:30;35126:32;35087:30;35126:32;:::i;:::-;35203:8;35190:22;35183:4;35174:14;;35167:46;35261:4;35250:16;;35237:30;35276:31;35237:30;35276:31;:::i;:::-;35350:1;35339:22;35332:4;35323:14;;35316:46;35410:4;35399:16;;35386:30;35425:33;35386:30;35425:33;:::i;:::-;-1:-1:-1;;;;;35490:33:267;35483:4;35474:14;;;;35467:57;;;;-1:-1:-1;34700:830:267:o;35535:414::-;35773:3;35758:19;;35786:53;35762:9;35821:6;35786:53;:::i;:::-;35876:6;35870:3;35859:9;35855:19;35848:35;35934:6;35927:14;35920:22;35914:3;35903:9;35899:19;35892:51;35535:414;;;;;;:::o;36371:556::-;36563:6;36571;36579;36632:3;36620:9;36611:7;36607:23;36603:33;36600:53;;;36649:1;36646;36639:12;36600:53;36694:16;;36800:2;36785:18;;36779:25;36694:16;;-1:-1:-1;36779:25:267;-1:-1:-1;36849:72:267;36913:7;36908:2;36893:18;;36849:72;:::i;:::-;36839:82;;36371:556;;;;;:::o;36932:215::-;37030:2;37000:17;;;37019;;;;36996:41;-1:-1:-1;;;;;37052:29:267;;-1:-1:-1;;;;;;37083:34:267;;37049:69;37046:95;;;37121:18;;:::i;37152:198::-;37187:3;37231:2;37220:21;;;-1:-1:-1;;;37253:37:267;;37250:63;;37293:18;;:::i;:::-;37333:1;37329:15;;37152:198;-1:-1:-1;;37152:198:267:o;37650:125::-;37715:9;;;37736:10;;;37733:36;;;37749:18;;:::i;37780:425::-;38014:3;37999:19;;38027:53;38003:9;38062:6;38027:53;:::i;:::-;38131:6;38128:1;38117:21;38111:3;38100:9;38096:19;38089:50;38190:6;38183:14;38176:22;38170:3;38159:9;38155:19;38148:51;37780:425;;;;;;:::o;38210:411::-;-1:-1:-1;;;;;38496:32:267;;;;38478:51;;38560:2;38545:18;;38538:34;;;;38603:2;38588:18;;38581:34;38466:2;38451:18;;38210:411::o;38842:755::-;38921:6;38974:2;38962:9;38953:7;38949:23;38945:32;38942:52;;;38990:1;38987;38980:12;38942:52;39017:16;;-1:-1:-1;;;;;39045:30:267;;39042:50;;;39088:1;39085;39078:12;39042:50;39111:22;;39164:4;39156:13;;39152:27;-1:-1:-1;39142:55:267;;39193:1;39190;39183:12;39142:55;39220:9;;-1:-1:-1;;;;;39241:30:267;;39238:56;;;39274:18;;:::i;:::-;39316:57;39363:2;39340:17;;-1:-1:-1;;39336:31:267;39369:2;39332:40;39316:57;:::i;:::-;39396:6;39389:5;39382:21;39444:7;39439:2;39430:6;39426:2;39422:15;39418:24;39415:37;39412:57;;;39465:1;39462;39455:12;39412:57;39513:6;39508:2;39504;39500:11;39495:2;39488:5;39484:14;39478:42;39565:1;39540:18;;;39560:2;39536:27;39529:38;;;;39544:5;38842:755;-1:-1:-1;;;;38842:755:267:o;39602:234::-;39690:6;39743:2;39731:9;39722:7;39718:23;39714:32;39711:52;;;39759:1;39756;39749:12;39711:52;39782:48;39822:7;39811:9;39782:48;:::i;39841:474::-;39942:5;39929:19;39957:30;39979:7;39957:30;:::i;:::-;40015:15;40008:23;39996:36;;40101:4;40090:16;;;40077:30;40123:14;;;40116:31;40195:4;40184:16;;40171:30;40210:33;40171:30;40210:33;:::i;:::-;-1:-1:-1;;;;;40275:33:267;40268:4;40259:14;;;;40252:57;;;;-1:-1:-1;39841:474:267:o;40320:766::-;-1:-1:-1;;;;;40736:32:267;;40718:51;;40778:62;40836:2;40821:18;;40813:6;40778:62;:::i;:::-;40849:66;40910:3;40899:9;40895:19;40887:6;40849:66;:::i;:::-;40952:6;40946:3;40935:9;40931:19;40924:35;40996:3;40990;40979:9;40975:19;40968:32;40699:4;41017:63;41075:3;41064:9;41060:19;41052:6;41044;41017:63;:::i;41091:471::-;-1:-1:-1;;;;;41405:32:267;;41387:51;;41374:3;41359:19;;41447:65;41508:2;41493:18;;41485:6;41447:65;:::i;:::-;41549:6;41543:3;41532:9;41528:19;41521:35;41091:471;;;;;;:::o;41917:342::-;-1:-1:-1;;;;;42102:32:267;;42084:51;;42171:2;42166;42151:18;;42144:30;;;-1:-1:-1;;42191:62:267;;42234:18;;42226:6;42218;42191:62;:::i;42264:230::-;42334:6;42387:2;42375:9;42366:7;42362:23;42358:32;42355:52;;;42403:1;42400;42393:12;42355:52;-1:-1:-1;42448:16:267;;42264:230;-1:-1:-1;42264:230:267:o;42499:245::-;42656:2;42645:9;42638:21;42619:4;42676:62;42734:2;42723:9;42719:18;42711:6;42703;42676:62;:::i;42749:344::-;42962:6;42951:9;42944:25;43005:2;43000;42989:9;42985:18;42978:30;42925:4;43025:62;43083:2;43072:9;43068:18;43060:6;43052;43025:62;:::i;43098:412::-;43327:6;43316:9;43309:25;43391:10;43386:3;43382:20;43374:6;43370:33;43365:2;43354:9;43350:18;43343:61;43440:2;43435;43424:9;43420:18;43413:30;43290:4;43460:44;43500:2;43489:9;43485:18;43477:6;43460:44;:::i;44072:136::-;44107:3;-1:-1:-1;;;44128:22:267;;44125:48;;44153:18;;:::i;:::-;-1:-1:-1;44193:1:267;44189:13;;44072:136::o;44213:401::-;-1:-1:-1;;;;;44463:32:267;;;44445:51;;44532:32;;;;44527:2;44512:18;;44505:60;44596:2;44581:18;;44574:34;;;;44433:2;44418:18;;44213:401::o;44619:701::-;44721:6;44781:2;44769:9;44760:7;44756:23;44752:32;44796:2;44793:22;;;44811:1;44808;44801:12;44793:22;-1:-1:-1;44880:2:267;44874:9;;;44910:15;;-1:-1:-1;;;;;44940:34:267;;44976:22;;;44937:62;44934:88;;;45002:18;;:::i;:::-;45038:2;45031:22;45075:16;;45100:30;45075:16;45100:30;:::i;:::-;45139:21;;45205:2;45190:18;;45184:25;45218:30;45184:25;45218:30;:::i;:::-;45276:2;45264:15;;45257:32;45268:6;44619:701;-1:-1:-1;;;44619:701:267:o;45325:195::-;-1:-1:-1;;;;;45394:27:267;;;45423;;;45390:61;;45463:28;;45460:54;;;45494:18;;:::i;45525:198::-;-1:-1:-1;;;;;45625:27:267;;;45596;;;45592:61;;45665:29;;45662:55;;;45697:18;;:::i;46689:486::-;46949:3;46934:19;;46962:44;46938:9;46988:6;46962:44;:::i;:::-;47043:6;47037:3;47026:9;47022:19;47015:35;47101:6;47098:1;47087:21;47081:3;47070:9;47066:19;47059:50;47160:6;47153:14;47146:22;47140:3;47129:9;47125:19;47118:51;46689:486;;;;;;;:::o;48864:216::-;48928:9;;;48956:11;;;48903:3;48986:9;;49014:10;;49010:19;;49039:10;;49031:19;;49007:44;49004:70;;;49054:18;;:::i;:::-;49004:70;;48864:216;;;;:::o;49699:648::-;49999:3;49984:19;;50012:53;49988:9;50047:6;50012:53;:::i;:::-;50116:13;;50109:21;50102:29;50096:3;50081:19;;50074:58;50187:4;50175:17;;50169:24;50163:3;50148:19;;50141:53;50253:4;50241:17;;;50235:24;-1:-1:-1;;;;;50231:50:267;50225:3;50210:19;;50203:79;50331:8;50319:21;;;;50313:3;50298:19;;;50291:50;49699:648;;-1:-1:-1;49699:648:267:o;50352:249::-;50421:6;50474:2;50462:9;50453:7;50449:23;50445:32;50442:52;;;50490:1;50487;50480:12;50442:52;50522:9;50516:16;50541:30;50565:5;50541:30;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "82483": [
        {
          "start": 2396,
          "length": 32
        },
        {
          "start": 2804,
          "length": 32
        },
        {
          "start": 3204,
          "length": 32
        },
        {
          "start": 4008,
          "length": 32
        },
        {
          "start": 5410,
          "length": 32
        },
        {
          "start": 6952,
          "length": 32
        },
        {
          "start": 7323,
          "length": 32
        },
        {
          "start": 7572,
          "length": 32
        },
        {
          "start": 7903,
          "length": 32
        },
        {
          "start": 7997,
          "length": 32
        },
        {
          "start": 8415,
          "length": 32
        },
        {
          "start": 8761,
          "length": 32
        },
        {
          "start": 9550,
          "length": 32
        },
        {
          "start": 9815,
          "length": 32
        },
        {
          "start": 10844,
          "length": 32
        },
        {
          "start": 10959,
          "length": 32
        },
        {
          "start": 11412,
          "length": 32
        },
        {
          "start": 11513,
          "length": 32
        },
        {
          "start": 11677,
          "length": 32
        },
        {
          "start": 11776,
          "length": 32
        },
        {
          "start": 11987,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "MAX_PROTOCOL_ALLOCATION()": "c29c945b",
    "actionManager()": "75d252a5",
    "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": "9f063efc",
    "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "e1b4af69",
    "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)": "6fe7e6eb",
    "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": "6c2bbe7e",
    "afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": "b47b2fb1",
    "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "259982e5",
    "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "b6a8b0fa",
    "beforeInitialize(address,(address,address,uint24,int24,address),uint160)": "dc98354e",
    "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": "21d0ee70",
    "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": "575e24b4",
    "bidWall()": "ba3e69b7",
    "cancelOwnershipHandover()": "54d1f13d",
    "closeBidWall((address,address,uint24,int24,address))": "ad49d66e",
    "completeOwnershipHandover(address)": "f04e283e",
    "fairLaunch()": "94e1cf96",
    "fairLaunchFeeCalculator()": "a1dd2d91",
    "feeCalculator()": "b00eb9fe",
    "feeEscrow()": "c4b7de97",
    "feeExemptions()": "01a2cae8",
    "feeSplit(bytes32,uint256)": "4875cbb8",
    "flaunch((string,string,string,uint256,uint256,uint256,address,uint24,uint256,bytes,bytes,bytes))": "3fa4d957",
    "flaunchContract()": "84aa1da0",
    "flaunchesAt(bytes32)": "7907addf",
    "flayGovernance()": "dddfecf5",
    "getFeeCalculator(bool)": "71c4ddb0",
    "getFlaunchingFee(bytes)": "ec876d71",
    "getFlaunchingMarketCap(bytes)": "ff3575e4",
    "getHookPermissions()": "c4e833ce",
    "getPoolFeeDistribution(bytes32)": "b3b42795",
    "initialPrice()": "1d0806ae",
    "nativeToken()": "e1758bd8",
    "notifier()": "09276ea4",
    "owner()": "8da5cb5b",
    "ownershipHandoverExpiresAt(address)": "fee81cf4",
    "poolFees((address,address,uint24,int24,address))": "ddb475d5",
    "poolKey(address)": "55d1cb60",
    "poolManager()": "dc4c90d3",
    "referralEscrow()": "8f2bdf75",
    "renounceOwnership()": "715018a6",
    "requestOwnershipHandover()": "25692962",
    "setFairLaunchFeeCalculator(address)": "38b1e700",
    "setFeeCalculator(address)": "8c66d04f",
    "setFeeDistribution((uint24,uint24,uint24,bool))": "d3bff717",
    "setFlaunch(address)": "be721505",
    "setInitialPrice(address)": "df81740e",
    "setPoolFeeDistribution(bytes32,(uint24,uint24,uint24,bool))": "4ed0f0f5",
    "setProtocolFeeDistribution(uint24)": "2423028c",
    "setReferralEscrow(address)": "a87277dd",
    "transferOwnership(address)": "f2fde38b",
    "unlockCallback(bytes)": "91dd7346"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nativeToken\",\"type\":\"address\"},{\"internalType\":\"contract IPoolManager\",\"name\":\"poolManager\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint24\",\"name\":\"swapFee\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"referrer\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"protocol\",\"type\":\"uint24\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct FeeDistributor.FeeDistribution\",\"name\":\"feeDistribution\",\"type\":\"tuple\"},{\"internalType\":\"contract IInitialPrice\",\"name\":\"initialPrice\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flayGovernance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeEscrow\",\"type\":\"address\"},{\"internalType\":\"contract FeeExemptions\",\"name\":\"feeExemptions\",\"type\":\"address\"},{\"internalType\":\"contract TreasuryActionManager\",\"name\":\"actionManager\",\"type\":\"address\"},{\"internalType\":\"contract BidWall\",\"name\":\"bidWall\",\"type\":\"address\"},{\"internalType\":\"contract FairLaunch\",\"name\":\"fairLaunch\",\"type\":\"address\"}],\"internalType\":\"struct PositionManager.ConstructorParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CallerIsNotBidWall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"CallerNotCreator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotBeInitializedDirectly\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotModifyLiquidityDuringFairLaunch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotSellTokenDuringFairLaunch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HookNotImplemented\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_required\",\"type\":\"uint256\"}],\"name\":\"InsufficientFlaunchFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LockFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NewOwnerIsZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoHandoverRequest\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPoolManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolFeeInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RecipientZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReferrerFeeInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapFeeInvalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_flaunchesAt\",\"type\":\"uint256\"}],\"name\":\"TokenNotFlaunched\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"_poolId\",\"type\":\"bytes32\"}],\"name\":\"UnknownPool\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"_poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"_allocation\",\"type\":\"uint24\"}],\"name\":\"CreatorFeeAllocationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"_poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_unsoldSupply\",\"type\":\"uint256\"}],\"name\":\"FairLaunchBurn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_feeCalculator\",\"type\":\"address\"}],\"name\":\"FairLaunchFeeCalculatorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_feeCalculator\",\"type\":\"address\"}],\"name\":\"FeeCalculatorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint24\",\"name\":\"swapFee\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"referrer\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"protocol\",\"type\":\"uint24\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct FeeDistributor.FeeDistribution\",\"name\":\"_feeDistribution\",\"type\":\"tuple\"}],\"name\":\"FeeDistributionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"feeAmount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"feeAmount1\",\"type\":\"uint128\"}],\"name\":\"HookFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"amount0\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"amount1\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"hookLPfeeAmount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"hookLPfeeAmount1\",\"type\":\"uint128\"}],\"name\":\"HookSwap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_initialPrice\",\"type\":\"address\"}],\"name\":\"InitialPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"OwnershipHandoverCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"OwnershipHandoverRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"_poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_memecoin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_memecoinTreasury\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_currencyFlipped\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_flaunchFee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenUri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialTokenFairLaunch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fairLaunchDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premineAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"creatorFeeAllocation\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"flaunchAt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initialPriceParams\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"feeCalculatorParams\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"creatorVestingParams\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct PositionManager.FlaunchParams\",\"name\":\"_params\",\"type\":\"tuple\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"_poolId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint24\",\"name\":\"swapFee\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"referrer\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"protocol\",\"type\":\"uint24\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct FeeDistributor.FeeDistribution\",\"name\":\"_feeDistribution\",\"type\":\"tuple\"}],\"name\":\"PoolFeeDistributionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"_poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_donateAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_creatorAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_bidWallAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_governanceAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_protocolAmount\",\"type\":\"uint256\"}],\"name\":\"PoolFeesDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"_poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"}],\"name\":\"PoolFeesReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"_poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"}],\"name\":\"PoolFeesSwapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"_poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"_premineAmount\",\"type\":\"int256\"}],\"name\":\"PoolPremine\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"_poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_flaunchesAt\",\"type\":\"uint256\"}],\"name\":\"PoolScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"_poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"_sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"_tick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"_protocolFee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"_swapFee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"}],\"name\":\"PoolStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"flAmount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"flAmount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"flFee0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"flFee1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"ispAmount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"ispAmount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"ispFee0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"ispFee1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"uniAmount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"uniAmount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"uniFee0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"uniFee1\",\"type\":\"int256\"}],\"name\":\"PoolSwap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_referralEscrow\",\"type\":\"address\"}],\"name\":\"ReferralEscrowUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"_poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ReferrerFeePaid\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_PROTOCOL_ALLOCATION\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"actionManager\",\"outputs\":[{\"internalType\":\"contract TreasuryActionManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"_key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"_delta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"_feesAccrued\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector_\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"_key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector_\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"name\":\"afterInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"_key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"_delta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"_feesAccrued\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector_\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"_key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"_params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"_delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"_hookData\",\"type\":\"bytes\"}],\"name\":\"afterSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector_\",\"type\":\"bytes4\"},{\"internalType\":\"int128\",\"name\":\"hookDeltaUnspecified_\",\"type\":\"int128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"_key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector_\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"}],\"name\":\"beforeInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"_key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPoolManager.ModifyLiquidityParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector_\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"_key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"_params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_hookData\",\"type\":\"bytes\"}],\"name\":\"beforeSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector_\",\"type\":\"bytes4\"},{\"internalType\":\"BeforeSwapDelta\",\"name\":\"beforeSwapDelta_\",\"type\":\"int256\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bidWall\",\"outputs\":[{\"internalType\":\"contract BidWall\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelOwnershipHandover\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"_key\",\"type\":\"tuple\"}],\"name\":\"closeBidWall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"completeOwnershipHandover\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fairLaunch\",\"outputs\":[{\"internalType\":\"contract FairLaunch\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fairLaunchFeeCalculator\",\"outputs\":[{\"internalType\":\"contract IFeeCalculator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeCalculator\",\"outputs\":[{\"internalType\":\"contract IFeeCalculator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeEscrow\",\"outputs\":[{\"internalType\":\"contract FeeEscrow\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeExemptions\",\"outputs\":[{\"internalType\":\"contract FeeExemptions\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"_poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"feeSplit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bidWall_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creator_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocol_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenUri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialTokenFairLaunch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fairLaunchDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premineAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"creatorFeeAllocation\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"flaunchAt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initialPriceParams\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"feeCalculatorParams\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"creatorVestingParams\",\"type\":\"bytes\"}],\"internalType\":\"struct PositionManager.FlaunchParams\",\"name\":\"_params\",\"type\":\"tuple\"}],\"name\":\"flaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"memecoin_\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flaunchContract\",\"outputs\":[{\"internalType\":\"contract IFlaunch\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"_poolId\",\"type\":\"bytes32\"}],\"name\":\"flaunchesAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_flaunchTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flayGovernance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isFairLaunch\",\"type\":\"bool\"}],\"name\":\"getFeeCalculator\",\"outputs\":[{\"internalType\":\"contract IFeeCalculator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_initialPriceParams\",\"type\":\"bytes\"}],\"name\":\"getFlaunchingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_initialPriceParams\",\"type\":\"bytes\"}],\"name\":\"getFlaunchingMarketCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHookPermissions\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"beforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwapReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwapReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterAddLiquidityReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterRemoveLiquidityReturnDelta\",\"type\":\"bool\"}],\"internalType\":\"struct Hooks.Permissions\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"_poolId\",\"type\":\"bytes32\"}],\"name\":\"getPoolFeeDistribution\",\"outputs\":[{\"components\":[{\"internalType\":\"uint24\",\"name\":\"swapFee\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"referrer\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"protocol\",\"type\":\"uint24\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct FeeDistributor.FeeDistribution\",\"name\":\"feeDistribution_\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialPrice\",\"outputs\":[{\"internalType\":\"contract IInitialPrice\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"notifier\",\"outputs\":[{\"internalType\":\"contract Notifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"result\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"ownershipHandoverExpiresAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"_poolKey\",\"type\":\"tuple\"}],\"name\":\"poolFees\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"internalType\":\"struct InternalSwapPool.ClaimableFees\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"poolKey\",\"outputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referralEscrow\",\"outputs\":[{\"internalType\":\"contract ReferralEscrow\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestOwnershipHandover\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFeeCalculator\",\"name\":\"_feeCalculator\",\"type\":\"address\"}],\"name\":\"setFairLaunchFeeCalculator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFeeCalculator\",\"name\":\"_feeCalculator\",\"type\":\"address\"}],\"name\":\"setFeeCalculator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint24\",\"name\":\"swapFee\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"referrer\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"protocol\",\"type\":\"uint24\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct FeeDistributor.FeeDistribution\",\"name\":\"_feeDistribution\",\"type\":\"tuple\"}],\"name\":\"setFeeDistribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_flaunchContract\",\"type\":\"address\"}],\"name\":\"setFlaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialPrice\",\"type\":\"address\"}],\"name\":\"setInitialPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"_poolId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint24\",\"name\":\"swapFee\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"referrer\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"protocol\",\"type\":\"uint24\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct FeeDistributor.FeeDistribution\",\"name\":\"_feeDistribution\",\"type\":\"tuple\"}],\"name\":\"setPoolFeeDistribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_protocol\",\"type\":\"uint24\"}],\"name\":\"setProtocolFeeDistribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_referralEscrow\",\"type\":\"address\"}],\"name\":\"setReferralEscrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unlockCallback\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AlreadyInitialized()\":[{\"details\":\"Cannot double-initialize.\"}],\"NewOwnerIsZeroAddress()\":[{\"details\":\"The `newOwner` cannot be the zero address.\"}],\"NoHandoverRequest()\":[{\"details\":\"The `pendingOwner` does not have a valid handover request.\"}],\"Unauthorized()\":[{\"details\":\"The caller is not authorized to call the function.\"}]},\"events\":{\"OwnershipHandoverCanceled(address)\":{\"details\":\"The ownership handover to `pendingOwner` has been canceled.\"},\"OwnershipHandoverRequested(address)\":{\"details\":\"An ownership handover to `pendingOwner` has been requested.\"},\"OwnershipTransferred(address,address)\":{\"details\":\"The ownership is transferred from `oldOwner` to `newOwner`. This event is intentionally kept the same as OpenZeppelin's Ownable to be compatible with indexers and [EIP-173](https://eips.ethereum.org/EIPS/eip-173), despite it not being as lightweight as a single argument event.\"}},\"kind\":\"dev\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"_delta\":\"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\",\"_feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"_key\":\"The key for the pool\",\"_sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\",\"selector_\":\"The function selector for the hook\"}},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"_amount0\":\"The amount of token0 being donated\",\"_amount1\":\"The amount of token1 being donated\",\"_key\":\"The key for the pool\",\"_sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"selector_\":\"The function selector for the hook\"}},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)\":{\"params\":{\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\",\"tick\":\"The current tick after the state of a pool is initialized\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"_delta\":\"The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta\",\"_feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"_key\":\"The key for the pool\",\"_sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"selector_\":\"The function selector for the hook\"}},\"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)\":{\"params\":{\"_delta\":\"The amount owed to the caller (positive) or owed to the pool (negative)\",\"_hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"_key\":\"The key for the pool\",\"_params\":\"The parameters for the swap\",\"_sender\":\"The sender (or swap contract) making the call\"},\"returns\":{\"hookDeltaUnspecified_\":\"The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\",\"selector_\":\"The function selector for the hook\"}},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"_key\":\"The key for the pool\"},\"returns\":{\"selector_\":\"The function selector for the hook\"}},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160)\":{\"details\":\"As we call `poolManager.initialize` from the IHooks contract itself, we bypass this hook call as therefore bypass the prevention.\"},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"_key\":\"The key for the pool\"},\"returns\":{\"selector_\":\"The function selector for the hook\"}},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"params\":{\"_hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"_key\":\"The key for the pool\",\"_params\":\"The parameters for the swap\",\"_sender\":\"The address calling the swap\"},\"returns\":{\"_2\":\"swapFee_ The percentage fee applied to our swap\",\"beforeSwapDelta_\":\"The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\",\"selector_\":\"The function selector for the hook\"}},\"cancelOwnershipHandover()\":{\"details\":\"Cancels the two-step ownership handover to the caller, if any.\"},\"completeOwnershipHandover(address)\":{\"details\":\"Allows the owner to complete the two-step ownership handover to `pendingOwner`. Reverts if there is no existing ownership handover requested by `pendingOwner`.\"},\"feeSplit(bytes32,uint256)\":{\"details\":\"Fee priority: swapfee -> referrer -> || protocol -> creator -> bidwall ||\",\"params\":{\"_amount\":\"The amount of token being passed in\",\"_poolId\":\"The PoolId that is having the fee split calculated\"},\"returns\":{\"bidWall_\":\"The amount that the PBW will receive\",\"creator_\":\"The amount that the token creator will receive\",\"protocol_\":\"The amount that the protocol will receive\"}},\"flaunch((string,string,string,uint256,uint256,uint256,address,uint24,uint256,bytes,bytes,bytes))\":{\"returns\":{\"memecoin_\":\"The created ERC20 token address\"}},\"getFeeCalculator(bool)\":{\"details\":\"This could return a zero address if no fee calculators have been set\",\"params\":{\"_isFairLaunch\":\"If the pool is currently in FairLaunch\"},\"returns\":{\"_0\":\"IFeeCalculator The IFeeCalculator to use\"}},\"getFlaunchingFee(bytes)\":{\"returns\":{\"_0\":\"The ETH value of the fee\"}},\"getFlaunchingMarketCap(bytes)\":{\"returns\":{\"_0\":\"The ETH market cap value\"}},\"getHookPermissions()\":{\"details\":\"1011 1111 0111 00 == 2FDC\"},\"getPoolFeeDistribution(bytes32)\":{\"params\":{\"_poolId\":\"The PoolId being updated\"},\"returns\":{\"feeDistribution_\":\"The FeeDistribution applied to the pool\"}},\"owner()\":{\"details\":\"Returns the owner of the contract.\"},\"ownershipHandoverExpiresAt(address)\":{\"details\":\"Returns the expiry timestamp for the two-step ownership handover to `pendingOwner`.\"},\"poolFees((address,address,uint24,int24,address))\":{\"params\":{\"_poolKey\":\"The PoolKey to check\"},\"returns\":{\"_0\":\"The {ClaimableFees} for the PoolKey\"}},\"poolKey(address)\":{\"details\":\"The easiest way to check for an empty response is `tickSpacing = 0`\",\"params\":{\"_token\":\"The address of the ERC20 token\"},\"returns\":{\"_0\":\"The corresponding {PoolKey} for the token\"}},\"renounceOwnership()\":{\"details\":\"Allows the owner to renounce their ownership.\"},\"requestOwnershipHandover()\":{\"details\":\"Request a two-step ownership handover to the caller. The request will automatically expire in 48 hours (172800 seconds) by default.\"},\"setFairLaunchFeeCalculator(address)\":{\"params\":{\"_feeCalculator\":\"The new {IFeeCalculator} to use\"}},\"setFeeCalculator(address)\":{\"params\":{\"_feeCalculator\":\"The new {IFeeCalculator} to use\"}},\"setFeeDistribution((uint24,uint24,uint24,bool))\":{\"params\":{\"_feeDistribution\":\"The new FeeDistribution value\"}},\"setFlaunch(address)\":{\"params\":{\"_flaunchContract\":\"The new {IFlaunch} contract address\"}},\"setInitialPrice(address)\":{\"params\":{\"_initialPrice\":\"The contract address for the `IInitialPrice` contract\"}},\"setPoolFeeDistribution(bytes32,(uint24,uint24,uint24,bool))\":{\"params\":{\"_feeDistribution\":\"The new FeeDistribution value\",\"_poolId\":\"The PoolId being updated\"}},\"setProtocolFeeDistribution(uint24)\":{\"params\":{\"_protocol\":\"New protocol fee\"}},\"setReferralEscrow(address)\":{\"params\":{\"_referralEscrow\":\"The new {ReferralEscrow} contract address\"}},\"transferOwnership(address)\":{\"details\":\"Allows the owner to transfer the ownership to `newOwner`.\"},\"unlockCallback(bytes)\":{\"details\":\"We force the onlyPoolManager modifier by exposing a virtual function after the onlyPoolManager check.\",\"params\":{\"data\":\"The data that was passed to the call to unlock\"},\"returns\":{\"_0\":\"Any data that you want to be returned from the unlock call\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"NotPoolManager()\":[{\"notice\":\"Thrown when calling unlockCallback where the caller is not PoolManager\"}]},\"events\":{\"CreatorFeeAllocationUpdated(bytes32,uint24)\":{\"notice\":\"Emitted when a pool's creator fee allocation is updated\"},\"FairLaunchBurn(bytes32,uint256)\":{\"notice\":\"Emitted when the `FairLaunch` contract has burned unsold fair launch supply\"},\"FairLaunchFeeCalculatorUpdated(address)\":{\"notice\":\"Emitted when our FairLaunch {FeeCalculator} contract is updated\"},\"FeeCalculatorUpdated(address)\":{\"notice\":\"Emitted when our {FeeCalculator} contract is updated\"},\"FeeDistributionUpdated((uint24,uint24,uint24,bool))\":{\"notice\":\"Emitted when our `FeeDistribution` struct is modified\"},\"InitialPriceUpdated(address)\":{\"notice\":\"Emitted when the `IInitialPrice` contract has been updated\"},\"PoolCreated(bytes32,address,address,uint256,bool,uint256,(string,string,string,uint256,uint256,uint256,address,uint24,uint256,bytes,bytes,bytes))\":{\"notice\":\"Emitted when a Flaunch pool is created\"},\"PoolFeeDistributionUpdated(bytes32,(uint24,uint24,uint24,bool))\":{\"notice\":\"Emitted when our `FeeDistribution` struct is modified for a pool\"},\"PoolFeesDistributed(bytes32,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted when a pool fees have been distributed to stakers\"},\"PoolFeesReceived(bytes32,uint256,uint256)\":{\"notice\":\"Emitted when a pool has been allocated fees on either side of the position\"},\"PoolFeesSwapped(bytes32,bool,uint256,uint256)\":{\"notice\":\"Emitted when pool fees have been internally swapped\"},\"PoolPremine(bytes32,int256)\":{\"notice\":\"Emitted when a user successfully premines their token\"},\"PoolScheduled(bytes32,uint256)\":{\"notice\":\"Emitted when a Flaunch pool is scheduled\"},\"PoolStateUpdated(bytes32,uint160,int24,uint24,uint24,uint128)\":{\"notice\":\"Emitted after any transaction to share pool state\"},\"PoolSwap(bytes32,int256,int256,int256,int256,int256,int256,int256,int256,int256,int256,int256,int256)\":{\"notice\":\"Emitted when a pool swap occurs\"},\"ReferralEscrowUpdated(address)\":{\"notice\":\"Emitted when the {ReferralEscrow} contract is updated\"},\"ReferrerFeePaid(bytes32,address,address,uint256)\":{\"notice\":\"Emitted when a referrer fee has been paid out\"}},\"kind\":\"user\",\"methods\":{\"MAX_PROTOCOL_ALLOCATION()\":{\"notice\":\"The maximum value of a protocol fee allocation\"},\"actionManager()\":{\"notice\":\"The contract that handles the token Treasury actions\"},\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"Once a liquidity has been added, we emit our price update event.\"},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called after donate, emitting our price update event.\"},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)\":{\"notice\":\"The hook called after the state of a pool is initialized\"},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"Once liquidity has been removed, we emit our price update event.\"},\"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)\":{\"notice\":\"[FD] Captures fees from the swap to either distribute or send to ISP [ISP] Once a swap has been made, we distribute fees to our LPs and emit our price update event. [FD] Tracks the swap for future fee calculations [FL][BW] If Fair Launch ended then we may have an ETH to deposit into the BidWall\"},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"[FL] Prevent liquidity modification during FairLaunch period [FD] Before a liquidity position is modified, we distribute fees before they can come in to take a share of fees that they have not earned.\"},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called before donate\"},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160)\":{\"notice\":\"The hook called before the state of a pool is initialized. Prevents external contracts from initializing pools using our contract as a hook.\"},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"[FL] Prevent liquidity modification during FairLaunch period [FD] Before liquidity is removed, we distribute fees.\"},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"notice\":\"[FL] Handles swaps during the FairLaunch and closure of the position when it expires [ISP] Checks if we can process an internal swap ahead of the Uniswap swap. [FD] Captures fees from the internal swap pool\"},\"bidWall()\":{\"notice\":\"Store the contract that will manage our Bidwall interactions\"},\"closeBidWall((address,address,uint24,int24,address))\":{\"notice\":\"Calls for the BidWall to be closed, as this requires callback from the {PoolManager}.\"},\"constructor\":{\"notice\":\"Initializes our {BaseHook} contract and initializes all implemented hooks.\"},\"fairLaunch()\":{\"notice\":\"The contract that handles the FairLaunch flow\"},\"feeCalculator()\":{\"notice\":\"The {IFeeCalculator} used to calculate swap fees\"},\"feeEscrow()\":{\"notice\":\"The {FeeEscrow} contract that will be used\"},\"feeExemptions()\":{\"notice\":\"Store the contract that will manage fee exemptions\"},\"feeSplit(bytes32,uint256)\":{\"notice\":\"Taking an amount, show the split that each of the different recipients will receive.\"},\"flaunch((string,string,string,uint256,uint256,uint256,address,uint24,uint256,bytes,bytes,bytes))\":{\"notice\":\"Creates a new ERC20 memecoin token creating and an ERC721 that signifies ownership of the flaunched collection. The token is then initialized into a UV4 pool. The FairLaunch period will start in this call, as soon as the pool is initialized.\"},\"flaunchContract()\":{\"notice\":\"The contract that will be used for flaunching tokens\"},\"flaunchesAt(bytes32)\":{\"notice\":\"Store the block timestamp when a poolId is set to launch\"},\"flayGovernance()\":{\"notice\":\"The address of the $FLAY token's governance\"},\"getFeeCalculator(bool)\":{\"notice\":\"Gets the {IFeeCalculator} contract that should be used based on which are set, and if the pool is currently in FairLaunch or not.\"},\"getFlaunchingFee(bytes)\":{\"notice\":\"Gets the ETH fee that must be paid to flaunch a token.\"},\"getFlaunchingMarketCap(bytes)\":{\"notice\":\"Gets the ETH market cap for a new token that will be flaunched.\"},\"getHookPermissions()\":{\"notice\":\"Defines the Uniswap V4 hooks that are used by our implementation. This will determine the address that our contract **must** be deployed to for Uniswap V4. This address suffix is shown in the dev comments for this function call.\"},\"getPoolFeeDistribution(bytes32)\":{\"notice\":\"Gets the distribution for a pool by checking to see if a pool has it's own FeeDistribution. If it does then this is used, but if it isn't then it will fallback on the global FeeDistribution.\"},\"initialPrice()\":{\"notice\":\"Our starting token sqrtPriceX96\"},\"nativeToken()\":{\"notice\":\"Our internal native token\"},\"notifier()\":{\"notice\":\"Store our {Notifier} contract\"},\"poolFees((address,address,uint24,int24,address))\":{\"notice\":\"Provides the {ClaimableFees} for a pool key.\"},\"poolKey(address)\":{\"notice\":\"Returns the PoolKey mapped to the token address. If none is set then a zero value will be returned for the fields.\"},\"poolManager()\":{\"notice\":\"The Uniswap v4 PoolManager contract\"},\"referralEscrow()\":{\"notice\":\"The {ReferralEscrow} contract that will be used\"},\"setFairLaunchFeeCalculator(address)\":{\"notice\":\"Allows an owner to update the {IFeeCalculator} used during FairLaunch to determine the swap fee.\"},\"setFeeCalculator(address)\":{\"notice\":\"Allows an owner to update the {IFeeCalculator} used to determine the swap fee.\"},\"setFeeDistribution((uint24,uint24,uint24,bool))\":{\"notice\":\"Allows the governing contract to make global changes to the fees.\"},\"setFlaunch(address)\":{\"notice\":\"Allows the contract used to flaunch a new token to be updated.\"},\"setInitialPrice(address)\":{\"notice\":\"Updates the `IInitialPrice` contract address that is used during `flaunch` to calculate the initial tick / sqrtPriceX96 value.\"},\"setPoolFeeDistribution(bytes32,(uint24,uint24,uint24,bool))\":{\"notice\":\"Allows the governing contract to make pool specific changes to the fees.\"},\"setProtocolFeeDistribution(uint24)\":{\"notice\":\"Allows the $FLAY token governance to set the global protocol fee.\"},\"setReferralEscrow(address)\":{\"notice\":\"Updates the {ReferralEscrow} contract that will store referrer fees.\"},\"unlockCallback(bytes)\":{\"notice\":\"Called by the pool manager on `msg.sender` when the manager is unlocked\"}},\"notice\":\"The PositionManager is a Uniswap V4 hook that controls the user journey from token creation, to fair launch, to ongoing swaps. The creator of the pool will receive an ERC721 representation of the token. The holder of this token will be the recipient of any creator fees generated by the token in the pool. Hook interactions have aimed to be abstracted into inherited contracts to simplify both functionality and readability. Specific use of each of these contracts has been denoted within comments using square brackets where possible.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/PositionManager.sol\":\"PositionManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@flaunch-interfaces/=src/interfaces/\",\":@flaunch/=src/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@optimism/=lib/optimism/packages/contracts-bedrock/\",\":@solady/=lib/solady/src/\",\":@uniswap-periphery/=lib/v4-periphery/src/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v4-core/=lib/v4-core/\",\":ds-test/=lib/vulcan/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/v4-core/node_modules/hardhat/\",\":kontrol-cheatcodes/=lib/optimism/packages/contracts-bedrock/lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/optimism/packages/contracts-bedrock/lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v5/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts-v5/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":optimism/=lib/optimism/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":safe-contracts/=lib/optimism/packages/contracts-bedrock/lib/safe-contracts/contracts/\",\":solady-v0.0.245/=lib/optimism/packages/contracts-bedrock/lib/solady-v0.0.245/src/\",\":solady/=lib/solady/src/\",\":solmate/=lib/v4-core/lib/solmate/\",\":v3-core/=lib/v3-core/\",\":v4-core/=lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\",\":vulcan/=lib/vulcan/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xd0e967bcd2ad6fd4231951e744b121e4cb428ce9d38e1c99350db6bb4a5207f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f454d107c23bd052c0bdb26dcdbb64ea203fd01b5dabb08f185f4c096beb0c8\",\"dweb:/ipfs/QmSNAV8u7TLKWTKmoQhWbBiyTKVZVQTqi9NvnmNSvnWn2D\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xccb9b54747f3733f9ca435191745881587b2b48a12d6903358b59bc8ae39ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://021b637b39bddc68e1beed71677cb52919d27880804b1c7160d53064342786bc\",\"dweb:/ipfs/QmV3wgNQmoi9d6U3P7xwHAEKDoaQzGqGGjcSXsyWMf9rsK\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x6dd0cb67846da3fa1241c520faaa215d6bec8226e37beac6056c51e8af44d24e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://650e533e62b30dcc6edea2b6c91358d5659da3bde42e56adf7316c493b916a15\",\"dweb:/ipfs/QmYkmK2vPE6FjdAoQVpZSJxamTLGno9wzGS495TcMNFViV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"lib/openzeppelin-contracts/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xb4d040e2cc1d4a66d08b174b97332aa3dbf330bc74f91c725d7ff653efca7eb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da205f459aac15cadd00538691b525eef81f098a95bc3eedea12968bcb70706\",\"dweb:/ipfs/QmcqTJET3rNsXMGT3UvqLgFS3RrKaHe5x97m4dcfUCWMoW\"]},\"lib/openzeppelin-contracts/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x91832f9744a308318ef3344caf2122345d6a949e25017461322d13a4ede53f10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77f5fa6ce1145a3637406a77940cd1ab50523187c8ac7281805b3fc2bd6ffd5e\",\"dweb:/ipfs/QmewJyTg2SoBee1bKwks3vktT2wTQhB7TtzZg9xKvzvfUf\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xc240f71206795cead02e49f999b3523414c230cec53423298d8457a7ce9d3ea4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d5813c665d5ea1b73e27844800eb45831b9ba608b2a9216ead318e246fd5e8f\",\"dweb:/ipfs/QmNStA3tbwHZm1tXgdmY4wB3NbYKJtzYWADjKmDMhYHjyA\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x804753930b59f27c3a6747a4cf58b4d291f2c942a2a76edd43d4571a5f6b02bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f05286cf2babfc5bf1c347c447477ca24147bea09bb4f5ba01fe9afd98ab409\",\"dweb:/ipfs/QmUcTFzF4y2U9VoBbv7kx3PDTACdNMoYQuTe89ot2pAqqA\"]},\"lib/optimism/packages/contracts-bedrock/interfaces/L2/IL2ToL2CrossDomainMessenger.sol\":{\"keccak256\":\"0x8ee3b6c749dc02a562c563e7990a0bac1da24bb32e89a1c0a78342ddd53b13be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e29cc32d34d1907f6167956c99c210a94bed0c170cc28ada80a84bfbe294ac0\",\"dweb:/ipfs/QmTbcCVQg6pa2okfUNsig3PTH99zgoyoNJD2PWrFZVnnQa\"]},\"lib/optimism/packages/contracts-bedrock/src/libraries/Predeploys.sol\":{\"keccak256\":\"0x57983e9aaf75c3fefc61c08cb8cf34c0b18716cdb0a0b11623a7db501adaa62d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbab15fa0831e68b7c29dabaaa195632dda6af6bbb6e22e95e0d6a448e565f3e\",\"dweb:/ipfs/QmXANzeLX6ggEhyCTYQG26M3njch66xSaKo91XZAxwCVwc\"]},\"lib/solady/src/auth/Ownable.sol\":{\"keccak256\":\"0xc208cdd9de02bbf4b5edad18b88e23a2be7ff56d2287d5649329dc7cda64b9a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fba079cc7230c617f7493a2e97873f88e59a53a5018fcb2e2b6ac42d8aa5a3\",\"dweb:/ipfs/QmTXg8GSt8hsK2cZhbPFrund1mrwVdkLQmEPoQaFy4fhjs\"]},\"lib/solady/src/tokens/ERC721.sol\":{\"keccak256\":\"0x7ee665c5f70c388430cd7af42a5b1c2ff0e11ab45e46ab7ba02a6aad29f5cc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14433fac4ec7393908c97a874fd735e6f80fb81d286d76bd83d7d6159ec9cc6f\",\"dweb:/ipfs/Qmc9nE2q5HrFSQDt9oKXxs5mbgnNNfYnnr7KhfForCERzv\"]},\"lib/solady/src/utils/Initializable.sol\":{\"keccak256\":\"0x58ee7b2e966232ca1ca9e9e705d8afcefa83fe29d37d6f8361d73015a9db1fe4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59f134cb038e0a547f0a3dbfe9c9b6939f7b39dff64646a79e8cf2dd6ba14f80\",\"dweb:/ipfs/QmfXt149JQEWsYbLUkS9iLP6kGZqzHYyMg7SsLUUPgafEb\"]},\"lib/solady/src/utils/LibBytes.sol\":{\"keccak256\":\"0x561dd29e4abd6feb7800e97a68f73ed100714296c42e444d1029f9e944ea4f5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a76e216f6d36e1c1c7434195cd7dcf4a94d09f494a0e2beebb5714c75ad1d4c1\",\"dweb:/ipfs/QmeFHgUHSBg4cRZTeCD7nt5uMRZhgpzquzcYC9L9vyqBcn\"]},\"lib/solady/src/utils/LibClone.sol\":{\"keccak256\":\"0x1b96fd03a3948155bd2fe95dc4980930c759b174026e18f11bc8e88d55ae030e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64998d16472a127031ee6a796ed9afcf13dd662afd30eb4d3e2a42c2bc9fd204\",\"dweb:/ipfs/QmTXHGy9t8YTW96tjiZ8RBqmijXUTqc1JznEBqHv8Duc4A\"]},\"lib/solady/src/utils/LibString.sol\":{\"keccak256\":\"0xe0427faa09ff8439d820147a7485148c1eadd353d11f097755ed60cad80c3785\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60d45e30ddb233e745b5de17c6c6cbc1149ca016655ad229d14141bb67aa4d05\",\"dweb:/ipfs/QmWWdczKjEKnU19qCcjAKosv1TtXMxnZd9oRsDkLaussv2\"]},\"lib/solady/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xdb28f318ec45197a6c7cc2abebed67d7cb8b965838ef962e3844423256a9ddb8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://873cd46b77a2aeb781e7a0d131e7299151323ed884c330101a51d0727e218d98\",\"dweb:/ipfs/QmddadCjyedztvdSgLZEyKWoRes2SqtpviSjhEbSNrkUoi\"]},\"lib/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xf1a06ea1cce6a233b18a2b16d36195bf1ab7c7a721b51a172c7b493386c4825b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c54e268d1344503a360d99b9f25c1ff18685fba4f94fedcd9fa6277ea73554d7\",\"dweb:/ipfs/QmdYp5AP8rNLwBthb9gTyeNZdJGRaNUKpDz9bMRoPaY2oK\"]},\"lib/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"lib/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"lib/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0x4c9571aed0c2b6ef11832545554fc11ffdb03746daaf5c73683c00600bfc7ec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e78b34b58ce9de91b91943b4f3cc3ce121d0b151e123e8a600ac5ef64d91db6c\",\"dweb:/ipfs/QmRkaQnPCYwLrXgbpGujJTx32PaZK63KSPJJV1XmnQuCMb\"]},\"lib/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x3534f00531038e77ab8a7fc4d0a6e0993ee53fb7a396b1324ad917318ea46cea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a4a7e771828dc40848485b568a1cf514f553ace6653f4f4d1ad3f3e9cdb6c27\",\"dweb:/ipfs/QmTjzQ7KVYnrEWtxPER2E4MXzycgcznfzSDsZtd5turk5V\"]},\"lib/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"lib/v4-core/src/interfaces/callback/IUnlockCallback.sol\":{\"keccak256\":\"0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b\",\"dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK\"]},\"lib/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"lib/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"lib/v4-core/src/libraries/BitMath.sol\":{\"keccak256\":\"0x51b9be4f5c4fd3e80cbc9631a65244a2eb2be250b6b7f128a2035080e18aee8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe98bbd5498e912146b9319827fc63621eb66ff55d5baae0fa02a7a972ab8d1e\",\"dweb:/ipfs/QmY5hCuyrtgsJtk4AavrxcvBkRrChfr4N6ZnhdC8roPpNi\"]},\"lib/v4-core/src/libraries/CurrencyReserves.sol\":{\"keccak256\":\"0x1576616129933fcdf3b684cea33cffd9c95e18fafbd2832a8c48ac3d8526d4c3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://33b050efb9b81803b18f562271e7cca2ec5362c4d505860d6419b4a345636725\",\"dweb:/ipfs/QmQtFtTwKZ5pFVGD2ENDUXvp7ECFvzqeCuJ1miJcUHdmiX\"]},\"lib/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"lib/v4-core/src/libraries/FixedPoint128.sol\":{\"keccak256\":\"0xad236e10853f4b4b20a35a9bb52b857c4fc79874846b7e444e06ead7f2630542\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0de1f9a06520b1a689660943faa14fc0b8344ab41fab9e6012ea34bff4b9b3eb\",\"dweb:/ipfs/QmRNMPTyko7W6d6KxuTsnDBa9oZgDK4xiwRRq3H9ASTbwy\"]},\"lib/v4-core/src/libraries/FixedPoint96.sol\":{\"keccak256\":\"0xef5c3fd41aee26bb12aa1c32873cfee88e67eddfe7c2b32283786265ac669741\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4de298d02f662a1c36c7be0a150f18c2a161408a5d3e48432e707efd01fac9a4\",\"dweb:/ipfs/QmSiM4oeMmLVKmAtJXz2feYkv4R9ZcyBpkTRW5Nhw5KDyJ\"]},\"lib/v4-core/src/libraries/FullMath.sol\":{\"keccak256\":\"0x4fc73a00817193fd3cac1cc03d8167d21af97d75f1815a070ee31a90c702b4c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3b2d66d36b1ad56b1ab6e2eb8a816740877b40b461c93f125e88621c8378e52\",\"dweb:/ipfs/QmPGvMZzKQvNiWKd8aRzzdW7oAizwrMgcMtnaworDkVHFC\"]},\"lib/v4-core/src/libraries/Hooks.sol\":{\"keccak256\":\"0x27b1c3b8aa3d07d8e3123970695745929315685a5ffaa7342c3ba3582f37fecb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa3bb092dc205eaa1b9defc93e9bbad5f4c5c44e1c4aa531dfca2574c2aba9ba\",\"dweb:/ipfs/QmR1soxkepHNkbGxAMaK4XqhQ4VxWn69dewzGkQJNx5byM\"]},\"lib/v4-core/src/libraries/LPFeeLibrary.sol\":{\"keccak256\":\"0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475\",\"dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J\"]},\"lib/v4-core/src/libraries/LiquidityMath.sol\":{\"keccak256\":\"0x000ef2eadcc1eb7b2c18a77655f94e76e0e860f605783484657ef65fd6eda353\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a766b620a7a22798b43c6c1f23b5c6cff0ebf588deb89842bad05208d448cd99\",\"dweb:/ipfs/QmVKjaFJdzkqA3ey2Byum8iTCMssWVD8MmVC8rw62Tj5WD\"]},\"lib/v4-core/src/libraries/Lock.sol\":{\"keccak256\":\"0x9338be4b5695f1da5f3d3f7a3eeaf7a356c1045458289586ac0cbe9cef77c6d5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://485ec42ed6155469d612a9a0c18068ebfbad74448792a338a435503de3ef1b2c\",\"dweb:/ipfs/QmVnnv5u74MYatfRmBgrcfFYQcsMAJMG9jQ6ju8UiydKNF\"]},\"lib/v4-core/src/libraries/NonzeroDeltaCount.sol\":{\"keccak256\":\"0x0666ebd5d3528d7d52c48538296367a4cff97a578cf13365c51983fae3219b87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d27f1be3bd09d85c53d3e6a539dd6529ddd8b2b764ccb47fd7765fc81f9add59\",\"dweb:/ipfs/QmQdZujNXhKEXQBkKtF5jbdvo1yXMqPDUoBBaF9S5u3Kpm\"]},\"lib/v4-core/src/libraries/ParseBytes.sol\":{\"keccak256\":\"0x7533b13f53ee2c2c55500100b22ffd6e37e7523c27874edc98663d53a8672b15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82449058634fde28a085f3c59a6a5f412550c02181590593fd84c3e8b329aa17\",\"dweb:/ipfs/Qmev4E9Au6SsE4wsArChCwfg94KhHc5gYsEsZUnjF5sRLa\"]},\"lib/v4-core/src/libraries/Position.sol\":{\"keccak256\":\"0xddab2a831f1befb6abf5567e77c4582169ca8156cf69eb4f22d8e87f7226a3f9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c79fe61b50f3b70cff503abfa6f5643fcbefb9b794855bee1019b1e6d9c083b2\",\"dweb:/ipfs/QmbKmYNQesaMz8bo1b7TMHQcAwaDd3eDPrE5pAdPPZTtk5\"]},\"lib/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"lib/v4-core/src/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0xf8079fe6e3460db495451d06b1705e18f1c4075c1af96a31ad313545f7082982\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://582fc51546723a0a8acccf782f69b530bacf9b3ef929458e82569b7121f0b138\",\"dweb:/ipfs/QmSBXcmqZdFsM7M4sRaiyQAxykCeMNFKyKgBcwSMTw1bcF\"]},\"lib/v4-core/src/libraries/StateLibrary.sol\":{\"keccak256\":\"0x96db333ee126a841dd959e38e452cc59d73583cb0437a1d48b2052e33a74f952\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8672bba1eb69608299b0904f4ff305238eb18479d371c26518f278c9ee184cd0\",\"dweb:/ipfs/QmTLu3s6ECvsEDHStQv8HTVHYtvkviBbdjPrFJd4SpVRFY\"]},\"lib/v4-core/src/libraries/SwapMath.sol\":{\"keccak256\":\"0x6baa782ae523269c079cc763639a9b91a25fcfa1743c049c76e43741ef494bd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://035c337e62e05262a5bd5d3bc85bc9a383c1013001216b429f49cf1e129a0812\",\"dweb:/ipfs/QmU7s4h58Fh2A6mM8yeorZ2ygwEJMQw8zdZLLkHeDoSWxD\"]},\"lib/v4-core/src/libraries/TickMath.sol\":{\"keccak256\":\"0x4e1a11e154eb06106cb1c4598f06cca5f5ca16eaa33494ba2f0e74981123eca8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a79a57f7b240783b045168d1c4f774ac1812caf8f9a83cb6959a86b0b07b6c70\",\"dweb:/ipfs/QmTb5kvxwDNW8jDuQaqdJ445cCFejNkUqEB17Bjo8UBiva\"]},\"lib/v4-core/src/libraries/TransientStateLibrary.sol\":{\"keccak256\":\"0x7d1e0875747bd89b32c25f1a48da2766e5f4aff1f671ad5f3c0c07ebbbcb946a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d76cfeb1cb60595b41ecc51c8a12fb4bf63a7fc733d0b1a2e3adb55abeb1f9d5\",\"dweb:/ipfs/Qmb8oX7DtsRpw3tTtdWZwGhauj1evq43d3PLwe4nSDAKkV\"]},\"lib/v4-core/src/libraries/UnsafeMath.sol\":{\"keccak256\":\"0xa6e55e0a43a15df2df471d9972cd48f613d07c663ecb8bbeaf7623f6f99bcce4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02ea6e13879fc5a5f35149a2f1cd8af3a1f0877ff69101dad53841d16f515572\",\"dweb:/ipfs/QmcpL4gdG6hL2w1wqs2Vw4J1EFCwBs9T1Qd4p16CtECQkn\"]},\"lib/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"lib/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"lib/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"lib/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"lib/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"lib/v4-core/test/utils/LiquidityAmounts.sol\":{\"keccak256\":\"0x3ec40b1ddf34a1b33fe3934a2f1e4f66dbcf4378a4c672d0d6ce845ccf8bcae2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6fc4a4688f272d4b55c1d0440ee5ebdc951e5299ff23ae79a4b52cc83e978b8a\",\"dweb:/ipfs/QmYJogZFeyaVeSFbYLCMdwEZtL8sWB8Ndx5AuepWdHsHGY\"]},\"lib/v4-periphery/src/base/ImmutableState.sol\":{\"keccak256\":\"0x2b4d3e76d118c351e3bba4b6d5761844a67c138631d2d6c30a30a343d4021631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://119f8888a7ba7e8aa13fcfb6ce58e974b72d617851986c7b62e86b327e5a058b\",\"dweb:/ipfs/QmfZPZcGh8UeSCY4PqNyhnunN1FC938rZaxKTKYssNZGCt\"]},\"lib/v4-periphery/src/base/SafeCallback.sol\":{\"keccak256\":\"0xd00fd50f780bc9189e79adba6f0bff93b2e993df7049aca638f356807ab086a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://353e27536510b0cc38ebe3f5617999a8f87bed3cab118f8faa84fd6a487cfcbc\",\"dweb:/ipfs/QmQywaAkX4Rmq1vzQPsJvty7pctUiDsRE7QebPwj7p8ibn\"]},\"lib/v4-periphery/src/base/hooks/BaseHook.sol\":{\"keccak256\":\"0xcc005378e3c7b6677f7dfb18947ba0a8070f9a16a324389b532926f855665125\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9c03164794e2fe55d06d112967507243b7b44798eb493277327128fbed1a199\",\"dweb:/ipfs/QmVQZ7NUeaWrs3f3WeLj7rA5xDyj3P3uE48aH71hU4GLsQ\"]},\"lib/v4-periphery/src/interfaces/IImmutableState.sol\":{\"keccak256\":\"0x36ab3100e87457ecf04887f4f540e34fd7f21d8e3b83880cb679239e60b7b06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f290c7ce8e4832608d637a51b13dff95abecf6549485448e647a11c8ed01341\",\"dweb:/ipfs/QmfD1R6mTp8j4EjQXmQZW3vCh11EYFjnvoaw8rXRP27mMq\"]},\"src/contracts/Flaunch.sol\":{\"keccak256\":\"0x1c22280e0e3808accdf31a128e7aa05edf2bf7d58cc7be1934911d5c432256eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e3d4aa9c660181ffd052d0b0c140d2e8d108e0e38b45410db82408b7572c3a2\",\"dweb:/ipfs/QmQCCzotuDsE35p6E8X5VLrqvutsRcJNJAXKVq47T1hNtG\"]},\"src/contracts/PositionManager.sol\":{\"keccak256\":\"0xbaed796836da9506b5935d7043770f0b97c8c2cf80e92f8b768e5dbe4d65ccb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4e5762e3537bbbaff86bc6a813e79c2e911796818ada7a0a343499c57551ec1\",\"dweb:/ipfs/QmUrhGDVjnbtKETFC25NHLPZZZ2kNRkrssX8enT2Vs2UWK\"]},\"src/contracts/bidwall/BidWall.sol\":{\"keccak256\":\"0x01276a42d85198a1ec83d1668e4be8c8f9ff07b1ddaf486fb6b3e3e471ab5b32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3734cf40fe7f3b92c6fc558cbe49cca210b61f3b4971b90b9709cb2bda0afad0\",\"dweb:/ipfs/QmX9Dfy7NNFNZeFAcUNtZvQ1UocZLKyzwDqrgfPoSUXB5E\"]},\"src/contracts/contants.sol\":{\"keccak256\":\"0x5ae6f584c76437cccc319f2cce96e8d51e2c38bbc550010282c47d4b23fc43eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08890ac7a1510bc13508b6164310314a2cae5ea94b3898de8fdc06f68edb9216\",\"dweb:/ipfs/QmSqNM8wEuKgCbc9q83NSNHGdwKA2SS3rksaQr9eNbrRwY\"]},\"src/contracts/escrows/FeeEscrow.sol\":{\"keccak256\":\"0xb631600012a6df77c835249d61f12aeb0d636b5ec44ce69657c4d9a40fe8bd51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adf86e86af20ef4980b6f87a1c555e59d215914df76f1b322125c170d4b56c5e\",\"dweb:/ipfs/QmYw1riuJ7Pri7FDAyyGRUbDyaYPRQmtsBorRWcefQezyJ\"]},\"src/contracts/escrows/ReferralEscrow.sol\":{\"keccak256\":\"0xcd04f4016b830ac35dadc329f93ed3d97655062bcd1a03d875be05136631afdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f69143b495cf29515f823d8061d7e240188395c129de0ce5ce83d4c1f3d410d8\",\"dweb:/ipfs/QmeTJA984BBbjp6GeGCFsQy3fBQZWRbvpyPdqfXHJUBsuC\"]},\"src/contracts/hooks/FairLaunch.sol\":{\"keccak256\":\"0x5ae679b9ca3da408a8a55ee0a91ea69cfc86a2eec309694191efad9707d27687\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c4061dd462f85b85a4e6d800de010822189c5f8bd3b8c6ccc1d2a73f45868e\",\"dweb:/ipfs/QmVP98PRk5UiFtRCu5T4VLnCJ5z9BpageYoYkjVgXHYxSN\"]},\"src/contracts/hooks/FeeDistributor.sol\":{\"keccak256\":\"0x27216feec5a5cd5cdbfcd7f0cd753a8368c22df8cd2a821dd813feb8334a4438\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42ad7e327628115dbf9428197352b90afa8003f90a784943727c1b2e5520aa4f\",\"dweb:/ipfs/QmY9r4ywP4pycABVK1VDUcajBaUoGdMmBMSVbvt3g3Cc9X\"]},\"src/contracts/hooks/FeeExemptions.sol\":{\"keccak256\":\"0xd014c6d17a996bc7402ceb3852cda5def88d5d5507bbbdb68cb997f6452e1383\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://641437d2ce67496fe880cd7cb3fdc8c20093bf0a1d6cbe8a98e2d77f2b37e48b\",\"dweb:/ipfs/QmQ4JuYLhk8wzMnKwViKD3kzphYSDnoMJ231pzs8s3b7RP\"]},\"src/contracts/hooks/InternalSwapPool.sol\":{\"keccak256\":\"0xa493412443fb32edc59d17152fd02694793a183fe6710177312f70e80fde758d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899412b7256955fdf4a97bd0e936c871924d394386f27a131bda6d66765c2a45\",\"dweb:/ipfs/Qme6yUcFmTNCpnD945WSgyssS9qpLWJH4Q7i9Zs8AfJoBb\"]},\"src/contracts/hooks/Notifier.sol\":{\"keccak256\":\"0x1c64833a18020b18d80eb2b6fac5034f52f5baba905ff89e027d65f9b1be06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e04f39d3da4d4a37ce48cc10f1707d11cff5639e34e676bdfd1bb62dbbf6f2a\",\"dweb:/ipfs/QmYnswohkXfwKLcMdoquAQvbWz8Wasxze2s193BgdnYaZE\"]},\"src/contracts/libraries/CurrencySettler.sol\":{\"keccak256\":\"0x1947908d65887002ba48d984b18a4136f4894f0753e7effc4af74b78b8891637\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://448fd2c63df6d77d50b8cd747b61fda967baa6fc159eb4fdffe499951c0897fb\",\"dweb:/ipfs/QmRd8WL4Mg1YJoz8VNXLdN9xUCsXtxf1CxjG4LSXShW83S\"]},\"src/contracts/libraries/ProtocolRoles.sol\":{\"keccak256\":\"0xc3ecb32c87d15b5a149d23aa0143ca772e921e62f3c11482c05b9aad511c6037\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b520151fbf6a72a86fc2cc370fc7afa92e4b6273b77a52e840dbff3d462087fe\",\"dweb:/ipfs/QmNvcuY6ag66mdFYAgcXY25qqukQTmFvYGi5UeGMpWxFCh\"]},\"src/contracts/libraries/TokenSupply.sol\":{\"keccak256\":\"0xbed223c0987d967e260a66bcdd283ba631f1b42c93c52d4a5afec735f7cd83e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3ce9b8c73cf13ae9c73ee3ceb575b6401762180f4afabc196cac4eca43ee21b\",\"dweb:/ipfs/Qmes76ZFHxqusfg9NwY6tL5SYxcchkiW6aGorpMWXXxAvV\"]},\"src/contracts/libraries/UniswapHookEvents.sol\":{\"keccak256\":\"0x124e75c5d2853da58681498ba5afff2380779d6e21f5b0f658c44066ab93a616\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58276dce40ddf1675f0bcce9d56d6cdeb8e6d2a973bd0ad5298e2f11513e11e7\",\"dweb:/ipfs/QmRetjzoNXvJD5QkQuSQMcGLEuEdQyd2PPewxpcgv1bxDR\"]},\"src/contracts/price/FlaunchFeeExemption.sol\":{\"keccak256\":\"0xe5a256a583afa7ccd229d091310dcf774c7d1dcb9894dc5d1c9306981476694a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee7abb576861805a6669c1542cb9cadb045c3d88a4aab6c4563d70fe947c764d\",\"dweb:/ipfs/Qmdyv6y3HsWnzTznaG9H8TSwdG7CMA5oxXizRf7iuuzkt7\"]},\"src/contracts/subscribers/Indexer.sol\":{\"keccak256\":\"0x59bfca4d99bae3beebf1581ed93f569319f5f5c6b0d49f06b140b46a58509916\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90b8876e25e6b2708cf5e4a075f2625b451c84778bf4d05d141ae419d41c9101\",\"dweb:/ipfs/QmYetyrsqFcqvAjem9KUxDnYRPP7EsXxVdMT7MWVu4H79g\"]},\"src/contracts/treasury/ActionManager.sol\":{\"keccak256\":\"0xbf83cfec82315dc4a3ec031a869984e1e754f92b41f474e86cf6088ae486e0b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad69c078fb563ac05d43063b37c826b388092521783cfa496ba57f743aa0c7c8\",\"dweb:/ipfs/QmWxvidGyn3zsnbRPARJZ88tvz7yYh4QQYV8AN1NmGVxDz\"]},\"src/contracts/treasury/MemecoinTreasury.sol\":{\"keccak256\":\"0x20629bd593397b351e9a3af1e7d573cca0d755af61b7312cca42565f900f1363\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://712598571d05445c0bfe64f5dd17bff24705eb7e6f66a3ebfa4acf3d2c733694\",\"dweb:/ipfs/QmTtZYNB7DTdpBVxZi36hsm9f7PouVKGiArsgttTRJXKkF\"]},\"src/contracts/types/MemecoinFinder.sol\":{\"keccak256\":\"0xfb797765334db24b80ce274dadddf2d02ae6e1bcc5b21ddc71e31ebe6a16a9bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ee3018fca8abded6d53a4464e19c545b93a0c275b3f6563198d72f4f7cda4a\",\"dweb:/ipfs/QmPCXvvzNCTafgtun4Dgi4oB2rCUaLPq6tzcBDXR32mN6A\"]},\"src/contracts/types/StoreKeys.sol\":{\"keccak256\":\"0x24a45a523b389f1e8e7c6dcb7d401458a67ad519b879eb2eb6f0501b3b2e4041\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c83f401837cbf0fbc57aefdb2fb09faed9a6c94025b98ee1ea8e0ab3020201c\",\"dweb:/ipfs/QmXCTEBxfBmUjYqiLUxnSuRnJ47KuRCJ8pifPrBmnbxAY3\"]},\"src/contracts/types/TickFinder.sol\":{\"keccak256\":\"0xd0520af45af21e3e21959edf440bf91a5c7008bba27f19a37157b068f15577a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c00788c51797b6536f3a63ab3bf5eab0075b9311bc0607a474685a95c6dc97\",\"dweb:/ipfs/QmT5QQRMSdmZivyvK5pJxGxh6ueBFZLHFCmpMkqFwbqp5Z\"]},\"src/contracts/vesting/CreatorVesting.sol\":{\"keccak256\":\"0x1dd7fbdca1fece583b9db8a30d052d4c81b5be520e23b73e5dc99be26bc1ccdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71f86832c84587c0d91a968e7e591e458599166be90a6e215ae943849ab11228\",\"dweb:/ipfs/QmYiqphd7TiGnjvC2Je1rNf2eWLBLExMvgBxDddDJ4pzzu\"]},\"src/contracts/zaps/PoolSwap.sol\":{\"keccak256\":\"0xc76373ac0ae07e02b01080b6f4f8784f23ad63759353f3e0c652e5765ea419e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23aece61b14a38f729ad3f471dd2c7e928db1f34ca1df34a08f80dd248dad13c\",\"dweb:/ipfs/QmZwypsxv3SjVVexvfZom6QDYSCqDNJ8YmHtpBzNiEkKnj\"]},\"src/interfaces/IFLETH.sol\":{\"keccak256\":\"0x76d5a68a2aa36d96b5e686df7a390ed2dd6142979b538e0e0e889b45ce2fcbbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50cd7e6979a1af1345a993ca9a4ec3ea8803d5e429d2dc585b7b74d723e0a0c\",\"dweb:/ipfs/QmW7ptGGwi8BCi8V9BrNwqFxdzG8WFtqNzMmLrFvQkWdK9\"]},\"src/interfaces/IFeeCalculator.sol\":{\"keccak256\":\"0x7fb44228009865a432793863a419d98511bfb4f777286f41a098747327d0b26d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://490c1bcd8fef48aa6bc7cb481e814631025738700caa8b93ef2b3d7e70d34267\",\"dweb:/ipfs/QmUcuzY5wtAwwGssDCLMCr8G6tWRGD2P4RYav3yw7qYXAc\"]},\"src/interfaces/IFlaunch.sol\":{\"keccak256\":\"0x673e7120c0573e3dd881535af90a9c36edf53fa5c96e11d1609d50a1e82d06eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5637b5dd2c7774f7ddbc20b2ed875020f9b5c978c886d23257aa79ebc997d632\",\"dweb:/ipfs/Qmb3FUnRYUQVaww7p5uqMuhK1c562dro5bkb7geierd44Q\"]},\"src/interfaces/IInitialPrice.sol\":{\"keccak256\":\"0x9ba8d9c572577512288872bff08302298851224b75ef5803c694d244a1d87ad9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6c596953c3c0ffdd2841d8288eaf94129c94bfb4b776cc476e361851af06d20\",\"dweb:/ipfs/QmRi1NxTpsxMEYxZH7cVEkAUSw6fUJX1ZQ224NeHa3E6AB\"]},\"src/interfaces/IMemecoin.sol\":{\"keccak256\":\"0x5552714add1c5e2d86b6287585da5be78b4c52583ba59a15d090eb24e11bc882\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19a42e80cf7f356ad7c1616879464c31624d6c6922aec343e76ebae1474660ef\",\"dweb:/ipfs/QmUS7sNX9QPuUc6wZxVzXhRzWqVyVrrycpxWmY273bFmeT\"]},\"src/interfaces/ISubscriber.sol\":{\"keccak256\":\"0x9e66782ee2129d3f7f43be7d22455d50baf0c872b072a24d2ed385ccea49c30e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bb37831e1c71192ecb3dfc1e0272d2c9e0b6afe1867059747140ec83b8aa993c\",\"dweb:/ipfs/QmSgCjT9MRbrB5RmdbFBx8P2KtuwPUZUuD8bDDFGfF3mbZ\"]},\"src/interfaces/ITreasuryAction.sol\":{\"keccak256\":\"0x57d93df0946a294dd050aa5ca5c6b0d18c3280f323bc5adc21a114ce7ad60dbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51217a2625d02bf841082c5322e1de047edd60f9235e238de0deed51fc919edb\",\"dweb:/ipfs/QmdnF6VnjX7yVpPWDT5CRhJzfarqb2LctrzowG5LHuXDbo\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.26+commit.8a97fa7a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct PositionManager.ConstructorParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "nativeToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IPoolManager",
                  "name": "poolManager",
                  "type": "address"
                },
                {
                  "internalType": "struct FeeDistributor.FeeDistribution",
                  "name": "feeDistribution",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint24",
                      "name": "swapFee",
                      "type": "uint24"
                    },
                    {
                      "internalType": "uint24",
                      "name": "referrer",
                      "type": "uint24"
                    },
                    {
                      "internalType": "uint24",
                      "name": "protocol",
                      "type": "uint24"
                    },
                    {
                      "internalType": "bool",
                      "name": "active",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "contract IInitialPrice",
                  "name": "initialPrice",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "protocolOwner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "protocolFeeRecipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "flayGovernance",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "feeEscrow",
                  "type": "address"
                },
                {
                  "internalType": "contract FeeExemptions",
                  "name": "feeExemptions",
                  "type": "address"
                },
                {
                  "internalType": "contract TreasuryActionManager",
                  "name": "actionManager",
                  "type": "address"
                },
                {
                  "internalType": "contract BidWall",
                  "name": "bidWall",
                  "type": "address"
                },
                {
                  "internalType": "contract FairLaunch",
                  "name": "fairLaunch",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyInitialized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerIsNotBidWall"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_caller",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "CallerNotCreator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotBeInitializedDirectly"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotModifyLiquidityDuringFairLaunch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotSellTokenDuringFairLaunch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "HookNotImplemented"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_paid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_required",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InsufficientFlaunchFee"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPool"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LockFailure"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NewOwnerIsZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoHandoverRequest"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotPoolManager"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotSelf"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ProtocolFeeInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RecipientZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReferrerFeeInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SwapFeeInvalid"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_flaunchesAt",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "TokenNotFlaunched"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "_poolId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "UnknownPool"
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "_poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint24",
              "name": "_allocation",
              "type": "uint24",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CreatorFeeAllocationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "_poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_unsoldSupply",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FairLaunchBurn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_feeCalculator",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FairLaunchFeeCalculatorUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_feeCalculator",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FeeCalculatorUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct FeeDistributor.FeeDistribution",
              "name": "_feeDistribution",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint24",
                  "name": "swapFee",
                  "type": "uint24"
                },
                {
                  "internalType": "uint24",
                  "name": "referrer",
                  "type": "uint24"
                },
                {
                  "internalType": "uint24",
                  "name": "protocol",
                  "type": "uint24"
                },
                {
                  "internalType": "bool",
                  "name": "active",
                  "type": "bool"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FeeDistributionUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint128",
              "name": "feeAmount0",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "feeAmount1",
              "type": "uint128",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "HookFee",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int128",
              "name": "amount0",
              "type": "int128",
              "indexed": false
            },
            {
              "internalType": "int128",
              "name": "amount1",
              "type": "int128",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "hookLPfeeAmount0",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "hookLPfeeAmount1",
              "type": "uint128",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "HookSwap",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_initialPrice",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InitialPriceUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pendingOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipHandoverCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pendingOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipHandoverRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "_poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_memecoin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_memecoinTreasury",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "_currencyFlipped",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_flaunchFee",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "struct PositionManager.FlaunchParams",
              "name": "_params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "tokenUri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "initialTokenFairLaunch",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fairLaunchDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "premineAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creator",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "creatorFeeAllocation",
                  "type": "uint24"
                },
                {
                  "internalType": "uint256",
                  "name": "flaunchAt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initialPriceParams",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "feeCalculatorParams",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "creatorVestingParams",
                  "type": "bytes"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "_poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "struct FeeDistributor.FeeDistribution",
              "name": "_feeDistribution",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint24",
                  "name": "swapFee",
                  "type": "uint24"
                },
                {
                  "internalType": "uint24",
                  "name": "referrer",
                  "type": "uint24"
                },
                {
                  "internalType": "uint24",
                  "name": "protocol",
                  "type": "uint24"
                },
                {
                  "internalType": "bool",
                  "name": "active",
                  "type": "bool"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolFeeDistributionUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "_poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_donateAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_creatorAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_bidWallAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_governanceAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_protocolAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolFeesDistributed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "_poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amount0",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amount1",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolFeesReceived",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "_poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "zeroForOne",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amount0",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amount1",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolFeesSwapped",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "_poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "_premineAmount",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolPremine",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "_poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_flaunchesAt",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolScheduled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "_poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint160",
              "name": "_sqrtPriceX96",
              "type": "uint160",
              "indexed": false
            },
            {
              "internalType": "int24",
              "name": "_tick",
              "type": "int24",
              "indexed": false
            },
            {
              "internalType": "uint24",
              "name": "_protocolFee",
              "type": "uint24",
              "indexed": false
            },
            {
              "internalType": "uint24",
              "name": "_swapFee",
              "type": "uint24",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "_liquidity",
              "type": "uint128",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolStateUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "flAmount0",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "flAmount1",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "flFee0",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "flFee1",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "ispAmount0",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "ispAmount1",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "ispFee0",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "ispFee1",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "uniAmount0",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "uniAmount1",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "uniFee0",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "uniFee1",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolSwap",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_referralEscrow",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ReferralEscrowUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "_poolId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ReferrerFeePaid",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_PROTOCOL_ALLOCATION",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "actionManager",
          "outputs": [
            {
              "internalType": "contract TreasuryActionManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "_key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPoolManager.ModifyLiquidityParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "int256",
                  "name": "liquidityDelta",
                  "type": "int256"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "BalanceDelta",
              "name": "_delta",
              "type": "int256"
            },
            {
              "internalType": "BalanceDelta",
              "name": "_feesAccrued",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "afterAddLiquidity",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "selector_",
              "type": "bytes4"
            },
            {
              "internalType": "BalanceDelta",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "_key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "_amount0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amount1",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "afterDonate",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "selector_",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint160",
              "name": "",
              "type": "uint160"
            },
            {
              "internalType": "int24",
              "name": "",
              "type": "int24"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "afterInitialize",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "_key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPoolManager.ModifyLiquidityParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "int256",
                  "name": "liquidityDelta",
                  "type": "int256"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "BalanceDelta",
              "name": "_delta",
              "type": "int256"
            },
            {
              "internalType": "BalanceDelta",
              "name": "_feesAccrued",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "afterRemoveLiquidity",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "selector_",
              "type": "bytes4"
            },
            {
              "internalType": "BalanceDelta",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "_key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPoolManager.SwapParams",
              "name": "_params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "zeroForOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            },
            {
              "internalType": "BalanceDelta",
              "name": "_delta",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "_hookData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "afterSwap",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "selector_",
              "type": "bytes4"
            },
            {
              "internalType": "int128",
              "name": "hookDeltaUnspecified_",
              "type": "int128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "_key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPoolManager.ModifyLiquidityParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "int256",
                  "name": "liquidityDelta",
                  "type": "int256"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "beforeAddLiquidity",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "selector_",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beforeDonate",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint160",
              "name": "",
              "type": "uint160"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "beforeInitialize",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "_key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPoolManager.ModifyLiquidityParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "int256",
                  "name": "liquidityDelta",
                  "type": "int256"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "beforeRemoveLiquidity",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "selector_",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "_key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPoolManager.SwapParams",
              "name": "_params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "zeroForOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_hookData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beforeSwap",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "selector_",
              "type": "bytes4"
            },
            {
              "internalType": "BeforeSwapDelta",
              "name": "beforeSwapDelta_",
              "type": "int256"
            },
            {
              "internalType": "uint24",
              "name": "",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bidWall",
          "outputs": [
            {
              "internalType": "contract BidWall",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "cancelOwnershipHandover"
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "_key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "closeBidWall"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pendingOwner",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "completeOwnershipHandover"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fairLaunch",
          "outputs": [
            {
              "internalType": "contract FairLaunch",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fairLaunchFeeCalculator",
          "outputs": [
            {
              "internalType": "contract IFeeCalculator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeCalculator",
          "outputs": [
            {
              "internalType": "contract IFeeCalculator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeEscrow",
          "outputs": [
            {
              "internalType": "contract FeeEscrow",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeExemptions",
          "outputs": [
            {
              "internalType": "contract FeeExemptions",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "_poolId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "feeSplit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "bidWall_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "creator_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protocol_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PositionManager.FlaunchParams",
              "name": "_params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "tokenUri",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "initialTokenFairLaunch",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fairLaunchDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "premineAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creator",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "creatorFeeAllocation",
                  "type": "uint24"
                },
                {
                  "internalType": "uint256",
                  "name": "flaunchAt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initialPriceParams",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "feeCalculatorParams",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "creatorVestingParams",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "flaunch",
          "outputs": [
            {
              "internalType": "address",
              "name": "memecoin_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "flaunchContract",
          "outputs": [
            {
              "internalType": "contract IFlaunch",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "_poolId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "flaunchesAt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_flaunchTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "flayGovernance",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_isFairLaunch",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFeeCalculator",
          "outputs": [
            {
              "internalType": "contract IFeeCalculator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_initialPriceParams",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFlaunchingFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_initialPriceParams",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFlaunchingMarketCap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getHookPermissions",
          "outputs": [
            {
              "internalType": "struct Hooks.Permissions",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "beforeInitialize",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterInitialize",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "beforeAddLiquidity",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterAddLiquidity",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "beforeRemoveLiquidity",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterRemoveLiquidity",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "beforeSwap",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterSwap",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "beforeDonate",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterDonate",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "beforeSwapReturnDelta",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterSwapReturnDelta",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterAddLiquidityReturnDelta",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterRemoveLiquidityReturnDelta",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "_poolId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolFeeDistribution",
          "outputs": [
            {
              "internalType": "struct FeeDistributor.FeeDistribution",
              "name": "feeDistribution_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint24",
                  "name": "swapFee",
                  "type": "uint24"
                },
                {
                  "internalType": "uint24",
                  "name": "referrer",
                  "type": "uint24"
                },
                {
                  "internalType": "uint24",
                  "name": "protocol",
                  "type": "uint24"
                },
                {
                  "internalType": "bool",
                  "name": "active",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "initialPrice",
          "outputs": [
            {
              "internalType": "contract IInitialPrice",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nativeToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "notifier",
          "outputs": [
            {
              "internalType": "contract Notifier",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "result",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pendingOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownershipHandoverExpiresAt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "result",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PoolKey",
              "name": "_poolKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "poolFees",
          "outputs": [
            {
              "internalType": "struct InternalSwapPool.ClaimableFees",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "poolKey",
          "outputs": [
            {
              "internalType": "struct PoolKey",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "poolManager",
          "outputs": [
            {
              "internalType": "contract IPoolManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "referralEscrow",
          "outputs": [
            {
              "internalType": "contract ReferralEscrow",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "requestOwnershipHandover"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFeeCalculator",
              "name": "_feeCalculator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFairLaunchFeeCalculator"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFeeCalculator",
              "name": "_feeCalculator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFeeCalculator"
        },
        {
          "inputs": [
            {
              "internalType": "struct FeeDistributor.FeeDistribution",
              "name": "_feeDistribution",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint24",
                  "name": "swapFee",
                  "type": "uint24"
                },
                {
                  "internalType": "uint24",
                  "name": "referrer",
                  "type": "uint24"
                },
                {
                  "internalType": "uint24",
                  "name": "protocol",
                  "type": "uint24"
                },
                {
                  "internalType": "bool",
                  "name": "active",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFeeDistribution"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_flaunchContract",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFlaunch"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_initialPrice",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setInitialPrice"
        },
        {
          "inputs": [
            {
              "internalType": "PoolId",
              "name": "_poolId",
              "type": "bytes32"
            },
            {
              "internalType": "struct FeeDistributor.FeeDistribution",
              "name": "_feeDistribution",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint24",
                  "name": "swapFee",
                  "type": "uint24"
                },
                {
                  "internalType": "uint24",
                  "name": "referrer",
                  "type": "uint24"
                },
                {
                  "internalType": "uint24",
                  "name": "protocol",
                  "type": "uint24"
                },
                {
                  "internalType": "bool",
                  "name": "active",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPoolFeeDistribution"
        },
        {
          "inputs": [
            {
              "internalType": "uint24",
              "name": "_protocol",
              "type": "uint24"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProtocolFeeDistribution"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "_referralEscrow",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setReferralEscrow"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlockCallback",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
            "params": {
              "_delta": "The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta",
              "_feesAccrued": "The fees accrued since the last time fees were collected from this position",
              "_key": "The key for the pool",
              "_sender": "The initial msg.sender for the add liquidity call"
            },
            "returns": {
              "_1": "BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency",
              "selector_": "The function selector for the hook"
            }
          },
          "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "params": {
              "_amount0": "The amount of token0 being donated",
              "_amount1": "The amount of token1 being donated",
              "_key": "The key for the pool",
              "_sender": "The initial msg.sender for the donate call"
            },
            "returns": {
              "selector_": "The function selector for the hook"
            }
          },
          "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)": {
            "params": {
              "key": "The key for the pool being initialized",
              "sender": "The initial msg.sender for the initialize call",
              "sqrtPriceX96": "The sqrt(price) of the pool as a Q64.96",
              "tick": "The current tick after the state of a pool is initialized"
            },
            "returns": {
              "_0": "bytes4 The function selector for the hook"
            }
          },
          "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
            "params": {
              "_delta": "The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta",
              "_feesAccrued": "The fees accrued since the last time fees were collected from this position",
              "_key": "The key for the pool",
              "_sender": "The initial msg.sender for the remove liquidity call"
            },
            "returns": {
              "selector_": "The function selector for the hook"
            }
          },
          "afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": {
            "params": {
              "_delta": "The amount owed to the caller (positive) or owed to the pool (negative)",
              "_hookData": "Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook",
              "_key": "The key for the pool",
              "_params": "The parameters for the swap",
              "_sender": "The sender (or swap contract) making the call"
            },
            "returns": {
              "hookDeltaUnspecified_": "The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency",
              "selector_": "The function selector for the hook"
            }
          },
          "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "params": {
              "_key": "The key for the pool"
            },
            "returns": {
              "selector_": "The function selector for the hook"
            }
          },
          "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "params": {
              "amount0": "The amount of token0 being donated",
              "amount1": "The amount of token1 being donated",
              "hookData": "Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook",
              "key": "The key for the pool",
              "sender": "The initial msg.sender for the donate call"
            },
            "returns": {
              "_0": "bytes4 The function selector for the hook"
            }
          },
          "beforeInitialize(address,(address,address,uint24,int24,address),uint160)": {
            "details": "As we call `poolManager.initialize` from the IHooks contract itself, we bypass this hook call as therefore bypass the prevention."
          },
          "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "params": {
              "_key": "The key for the pool"
            },
            "returns": {
              "selector_": "The function selector for the hook"
            }
          },
          "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
            "params": {
              "_hookData": "Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook",
              "_key": "The key for the pool",
              "_params": "The parameters for the swap",
              "_sender": "The address calling the swap"
            },
            "returns": {
              "_2": "swapFee_ The percentage fee applied to our swap",
              "beforeSwapDelta_": "The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency",
              "selector_": "The function selector for the hook"
            }
          },
          "cancelOwnershipHandover()": {
            "details": "Cancels the two-step ownership handover to the caller, if any."
          },
          "completeOwnershipHandover(address)": {
            "details": "Allows the owner to complete the two-step ownership handover to `pendingOwner`. Reverts if there is no existing ownership handover requested by `pendingOwner`."
          },
          "feeSplit(bytes32,uint256)": {
            "details": "Fee priority: swapfee -> referrer -> || protocol -> creator -> bidwall ||",
            "params": {
              "_amount": "The amount of token being passed in",
              "_poolId": "The PoolId that is having the fee split calculated"
            },
            "returns": {
              "bidWall_": "The amount that the PBW will receive",
              "creator_": "The amount that the token creator will receive",
              "protocol_": "The amount that the protocol will receive"
            }
          },
          "flaunch((string,string,string,uint256,uint256,uint256,address,uint24,uint256,bytes,bytes,bytes))": {
            "returns": {
              "memecoin_": "The created ERC20 token address"
            }
          },
          "getFeeCalculator(bool)": {
            "details": "This could return a zero address if no fee calculators have been set",
            "params": {
              "_isFairLaunch": "If the pool is currently in FairLaunch"
            },
            "returns": {
              "_0": "IFeeCalculator The IFeeCalculator to use"
            }
          },
          "getFlaunchingFee(bytes)": {
            "returns": {
              "_0": "The ETH value of the fee"
            }
          },
          "getFlaunchingMarketCap(bytes)": {
            "returns": {
              "_0": "The ETH market cap value"
            }
          },
          "getHookPermissions()": {
            "details": "1011 1111 0111 00 == 2FDC"
          },
          "getPoolFeeDistribution(bytes32)": {
            "params": {
              "_poolId": "The PoolId being updated"
            },
            "returns": {
              "feeDistribution_": "The FeeDistribution applied to the pool"
            }
          },
          "owner()": {
            "details": "Returns the owner of the contract."
          },
          "ownershipHandoverExpiresAt(address)": {
            "details": "Returns the expiry timestamp for the two-step ownership handover to `pendingOwner`."
          },
          "poolFees((address,address,uint24,int24,address))": {
            "params": {
              "_poolKey": "The PoolKey to check"
            },
            "returns": {
              "_0": "The {ClaimableFees} for the PoolKey"
            }
          },
          "poolKey(address)": {
            "details": "The easiest way to check for an empty response is `tickSpacing = 0`",
            "params": {
              "_token": "The address of the ERC20 token"
            },
            "returns": {
              "_0": "The corresponding {PoolKey} for the token"
            }
          },
          "renounceOwnership()": {
            "details": "Allows the owner to renounce their ownership."
          },
          "requestOwnershipHandover()": {
            "details": "Request a two-step ownership handover to the caller. The request will automatically expire in 48 hours (172800 seconds) by default."
          },
          "setFairLaunchFeeCalculator(address)": {
            "params": {
              "_feeCalculator": "The new {IFeeCalculator} to use"
            }
          },
          "setFeeCalculator(address)": {
            "params": {
              "_feeCalculator": "The new {IFeeCalculator} to use"
            }
          },
          "setFeeDistribution((uint24,uint24,uint24,bool))": {
            "params": {
              "_feeDistribution": "The new FeeDistribution value"
            }
          },
          "setFlaunch(address)": {
            "params": {
              "_flaunchContract": "The new {IFlaunch} contract address"
            }
          },
          "setInitialPrice(address)": {
            "params": {
              "_initialPrice": "The contract address for the `IInitialPrice` contract"
            }
          },
          "setPoolFeeDistribution(bytes32,(uint24,uint24,uint24,bool))": {
            "params": {
              "_feeDistribution": "The new FeeDistribution value",
              "_poolId": "The PoolId being updated"
            }
          },
          "setProtocolFeeDistribution(uint24)": {
            "params": {
              "_protocol": "New protocol fee"
            }
          },
          "setReferralEscrow(address)": {
            "params": {
              "_referralEscrow": "The new {ReferralEscrow} contract address"
            }
          },
          "transferOwnership(address)": {
            "details": "Allows the owner to transfer the ownership to `newOwner`."
          },
          "unlockCallback(bytes)": {
            "details": "We force the onlyPoolManager modifier by exposing a virtual function after the onlyPoolManager check.",
            "params": {
              "data": "The data that was passed to the call to unlock"
            },
            "returns": {
              "_0": "Any data that you want to be returned from the unlock call"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAX_PROTOCOL_ALLOCATION()": {
            "notice": "The maximum value of a protocol fee allocation"
          },
          "actionManager()": {
            "notice": "The contract that handles the token Treasury actions"
          },
          "afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
            "notice": "Once a liquidity has been added, we emit our price update event."
          },
          "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "notice": "The hook called after donate, emitting our price update event."
          },
          "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)": {
            "notice": "The hook called after the state of a pool is initialized"
          },
          "afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)": {
            "notice": "Once liquidity has been removed, we emit our price update event."
          },
          "afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": {
            "notice": "[FD] Captures fees from the swap to either distribute or send to ISP [ISP] Once a swap has been made, we distribute fees to our LPs and emit our price update event. [FD] Tracks the swap for future fee calculations [FL][BW] If Fair Launch ended then we may have an ETH to deposit into the BidWall"
          },
          "beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "notice": "[FL] Prevent liquidity modification during FairLaunch period [FD] Before a liquidity position is modified, we distribute fees before they can come in to take a share of fees that they have not earned."
          },
          "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": {
            "notice": "The hook called before donate"
          },
          "beforeInitialize(address,(address,address,uint24,int24,address),uint160)": {
            "notice": "The hook called before the state of a pool is initialized. Prevents external contracts from initializing pools using our contract as a hook."
          },
          "beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)": {
            "notice": "[FL] Prevent liquidity modification during FairLaunch period [FD] Before liquidity is removed, we distribute fees."
          },
          "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
            "notice": "[FL] Handles swaps during the FairLaunch and closure of the position when it expires [ISP] Checks if we can process an internal swap ahead of the Uniswap swap. [FD] Captures fees from the internal swap pool"
          },
          "bidWall()": {
            "notice": "Store the contract that will manage our Bidwall interactions"
          },
          "closeBidWall((address,address,uint24,int24,address))": {
            "notice": "Calls for the BidWall to be closed, as this requires callback from the {PoolManager}."
          },
          "constructor": {
            "notice": "Initializes our {BaseHook} contract and initializes all implemented hooks."
          },
          "fairLaunch()": {
            "notice": "The contract that handles the FairLaunch flow"
          },
          "feeCalculator()": {
            "notice": "The {IFeeCalculator} used to calculate swap fees"
          },
          "feeEscrow()": {
            "notice": "The {FeeEscrow} contract that will be used"
          },
          "feeExemptions()": {
            "notice": "Store the contract that will manage fee exemptions"
          },
          "feeSplit(bytes32,uint256)": {
            "notice": "Taking an amount, show the split that each of the different recipients will receive."
          },
          "flaunch((string,string,string,uint256,uint256,uint256,address,uint24,uint256,bytes,bytes,bytes))": {
            "notice": "Creates a new ERC20 memecoin token creating and an ERC721 that signifies ownership of the flaunched collection. The token is then initialized into a UV4 pool. The FairLaunch period will start in this call, as soon as the pool is initialized."
          },
          "flaunchContract()": {
            "notice": "The contract that will be used for flaunching tokens"
          },
          "flaunchesAt(bytes32)": {
            "notice": "Store the block timestamp when a poolId is set to launch"
          },
          "flayGovernance()": {
            "notice": "The address of the $FLAY token's governance"
          },
          "getFeeCalculator(bool)": {
            "notice": "Gets the {IFeeCalculator} contract that should be used based on which are set, and if the pool is currently in FairLaunch or not."
          },
          "getFlaunchingFee(bytes)": {
            "notice": "Gets the ETH fee that must be paid to flaunch a token."
          },
          "getFlaunchingMarketCap(bytes)": {
            "notice": "Gets the ETH market cap for a new token that will be flaunched."
          },
          "getHookPermissions()": {
            "notice": "Defines the Uniswap V4 hooks that are used by our implementation. This will determine the address that our contract **must** be deployed to for Uniswap V4. This address suffix is shown in the dev comments for this function call."
          },
          "getPoolFeeDistribution(bytes32)": {
            "notice": "Gets the distribution for a pool by checking to see if a pool has it's own FeeDistribution. If it does then this is used, but if it isn't then it will fallback on the global FeeDistribution."
          },
          "initialPrice()": {
            "notice": "Our starting token sqrtPriceX96"
          },
          "nativeToken()": {
            "notice": "Our internal native token"
          },
          "notifier()": {
            "notice": "Store our {Notifier} contract"
          },
          "poolFees((address,address,uint24,int24,address))": {
            "notice": "Provides the {ClaimableFees} for a pool key."
          },
          "poolKey(address)": {
            "notice": "Returns the PoolKey mapped to the token address. If none is set then a zero value will be returned for the fields."
          },
          "poolManager()": {
            "notice": "The Uniswap v4 PoolManager contract"
          },
          "referralEscrow()": {
            "notice": "The {ReferralEscrow} contract that will be used"
          },
          "setFairLaunchFeeCalculator(address)": {
            "notice": "Allows an owner to update the {IFeeCalculator} used during FairLaunch to determine the swap fee."
          },
          "setFeeCalculator(address)": {
            "notice": "Allows an owner to update the {IFeeCalculator} used to determine the swap fee."
          },
          "setFeeDistribution((uint24,uint24,uint24,bool))": {
            "notice": "Allows the governing contract to make global changes to the fees."
          },
          "setFlaunch(address)": {
            "notice": "Allows the contract used to flaunch a new token to be updated."
          },
          "setInitialPrice(address)": {
            "notice": "Updates the `IInitialPrice` contract address that is used during `flaunch` to calculate the initial tick / sqrtPriceX96 value."
          },
          "setPoolFeeDistribution(bytes32,(uint24,uint24,uint24,bool))": {
            "notice": "Allows the governing contract to make pool specific changes to the fees."
          },
          "setProtocolFeeDistribution(uint24)": {
            "notice": "Allows the $FLAY token governance to set the global protocol fee."
          },
          "setReferralEscrow(address)": {
            "notice": "Updates the {ReferralEscrow} contract that will store referrer fees."
          },
          "unlockCallback(bytes)": {
            "notice": "Called by the pool manager on `msg.sender` when the manager is unlocked"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=lib/v4-core/node_modules/@ensdomains/",
        "@flaunch-interfaces/=src/interfaces/",
        "@flaunch/=src/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@optimism/=lib/optimism/packages/contracts-bedrock/",
        "@solady/=lib/solady/src/",
        "@uniswap-periphery/=lib/v4-periphery/src/",
        "@uniswap/v3-core/=lib/v3-core/",
        "@uniswap/v4-core/=lib/v4-core/",
        "ds-test/=lib/vulcan/lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "hardhat/=lib/v4-core/node_modules/hardhat/",
        "kontrol-cheatcodes/=lib/optimism/packages/contracts-bedrock/lib/kontrol-cheatcodes/src/",
        "lib-keccak/=lib/optimism/packages/contracts-bedrock/lib/lib-keccak/contracts/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts-v5/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts-v5/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "optimism/=lib/optimism/",
        "permit2/=lib/v4-periphery/lib/permit2/",
        "safe-contracts/=lib/optimism/packages/contracts-bedrock/lib/safe-contracts/contracts/",
        "solady-v0.0.245/=lib/optimism/packages/contracts-bedrock/lib/solady-v0.0.245/src/",
        "solady/=lib/solady/src/",
        "solmate/=lib/v4-core/lib/solmate/",
        "v3-core/=lib/v3-core/",
        "v4-core/=lib/v4-core/src/",
        "v4-periphery/=lib/v4-periphery/",
        "vulcan/=lib/vulcan/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 0
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/PositionManager.sol": "PositionManager"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0xd0e967bcd2ad6fd4231951e744b121e4cb428ce9d38e1c99350db6bb4a5207f7",
        "urls": [
          "bzz-raw://3f454d107c23bd052c0bdb26dcdbb64ea203fd01b5dabb08f185f4c096beb0c8",
          "dweb:/ipfs/QmSNAV8u7TLKWTKmoQhWbBiyTKVZVQTqi9NvnmNSvnWn2D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0xccb9b54747f3733f9ca435191745881587b2b48a12d6903358b59bc8ae39ea6b",
        "urls": [
          "bzz-raw://021b637b39bddc68e1beed71677cb52919d27880804b1c7160d53064342786bc",
          "dweb:/ipfs/QmV3wgNQmoi9d6U3P7xwHAEKDoaQzGqGGjcSXsyWMf9rsK"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
        "urls": [
          "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
          "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x6dd0cb67846da3fa1241c520faaa215d6bec8226e37beac6056c51e8af44d24e",
        "urls": [
          "bzz-raw://650e533e62b30dcc6edea2b6c91358d5659da3bde42e56adf7316c493b916a15",
          "dweb:/ipfs/QmYkmK2vPE6FjdAoQVpZSJxamTLGno9wzGS495TcMNFViV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261",
        "urls": [
          "bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11",
          "dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Arrays.sol": {
        "keccak256": "0xb4d040e2cc1d4a66d08b174b97332aa3dbf330bc74f91c725d7ff653efca7eb1",
        "urls": [
          "bzz-raw://9da205f459aac15cadd00538691b525eef81f098a95bc3eedea12968bcb70706",
          "dweb:/ipfs/QmcqTJET3rNsXMGT3UvqLgFS3RrKaHe5x97m4dcfUCWMoW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Comparators.sol": {
        "keccak256": "0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58",
        "urls": [
          "bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd",
          "dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/SlotDerivation.sol": {
        "keccak256": "0x91832f9744a308318ef3344caf2122345d6a949e25017461322d13a4ede53f10",
        "urls": [
          "bzz-raw://77f5fa6ce1145a3637406a77940cd1ab50523187c8ac7281805b3fc2bd6ffd5e",
          "dweb:/ipfs/QmewJyTg2SoBee1bKwks3vktT2wTQhB7TtzZg9xKvzvfUf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa",
        "urls": [
          "bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287",
          "dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xc240f71206795cead02e49f999b3523414c230cec53423298d8457a7ce9d3ea4",
        "urls": [
          "bzz-raw://7d5813c665d5ea1b73e27844800eb45831b9ba608b2a9216ead318e246fd5e8f",
          "dweb:/ipfs/QmNStA3tbwHZm1tXgdmY4wB3NbYKJtzYWADjKmDMhYHjyA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x804753930b59f27c3a6747a4cf58b4d291f2c942a2a76edd43d4571a5f6b02bc",
        "urls": [
          "bzz-raw://6f05286cf2babfc5bf1c347c447477ca24147bea09bb4f5ba01fe9afd98ab409",
          "dweb:/ipfs/QmUcTFzF4y2U9VoBbv7kx3PDTACdNMoYQuTe89ot2pAqqA"
        ],
        "license": "MIT"
      },
      "lib/optimism/packages/contracts-bedrock/interfaces/L2/IL2ToL2CrossDomainMessenger.sol": {
        "keccak256": "0x8ee3b6c749dc02a562c563e7990a0bac1da24bb32e89a1c0a78342ddd53b13be",
        "urls": [
          "bzz-raw://3e29cc32d34d1907f6167956c99c210a94bed0c170cc28ada80a84bfbe294ac0",
          "dweb:/ipfs/QmTbcCVQg6pa2okfUNsig3PTH99zgoyoNJD2PWrFZVnnQa"
        ],
        "license": "MIT"
      },
      "lib/optimism/packages/contracts-bedrock/src/libraries/Predeploys.sol": {
        "keccak256": "0x57983e9aaf75c3fefc61c08cb8cf34c0b18716cdb0a0b11623a7db501adaa62d",
        "urls": [
          "bzz-raw://fbab15fa0831e68b7c29dabaaa195632dda6af6bbb6e22e95e0d6a448e565f3e",
          "dweb:/ipfs/QmXANzeLX6ggEhyCTYQG26M3njch66xSaKo91XZAxwCVwc"
        ],
        "license": "MIT"
      },
      "lib/solady/src/auth/Ownable.sol": {
        "keccak256": "0xc208cdd9de02bbf4b5edad18b88e23a2be7ff56d2287d5649329dc7cda64b9a3",
        "urls": [
          "bzz-raw://e8fba079cc7230c617f7493a2e97873f88e59a53a5018fcb2e2b6ac42d8aa5a3",
          "dweb:/ipfs/QmTXg8GSt8hsK2cZhbPFrund1mrwVdkLQmEPoQaFy4fhjs"
        ],
        "license": "MIT"
      },
      "lib/solady/src/tokens/ERC721.sol": {
        "keccak256": "0x7ee665c5f70c388430cd7af42a5b1c2ff0e11ab45e46ab7ba02a6aad29f5cc77",
        "urls": [
          "bzz-raw://14433fac4ec7393908c97a874fd735e6f80fb81d286d76bd83d7d6159ec9cc6f",
          "dweb:/ipfs/Qmc9nE2q5HrFSQDt9oKXxs5mbgnNNfYnnr7KhfForCERzv"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/Initializable.sol": {
        "keccak256": "0x58ee7b2e966232ca1ca9e9e705d8afcefa83fe29d37d6f8361d73015a9db1fe4",
        "urls": [
          "bzz-raw://59f134cb038e0a547f0a3dbfe9c9b6939f7b39dff64646a79e8cf2dd6ba14f80",
          "dweb:/ipfs/QmfXt149JQEWsYbLUkS9iLP6kGZqzHYyMg7SsLUUPgafEb"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/LibBytes.sol": {
        "keccak256": "0x561dd29e4abd6feb7800e97a68f73ed100714296c42e444d1029f9e944ea4f5f",
        "urls": [
          "bzz-raw://a76e216f6d36e1c1c7434195cd7dcf4a94d09f494a0e2beebb5714c75ad1d4c1",
          "dweb:/ipfs/QmeFHgUHSBg4cRZTeCD7nt5uMRZhgpzquzcYC9L9vyqBcn"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/LibClone.sol": {
        "keccak256": "0x1b96fd03a3948155bd2fe95dc4980930c759b174026e18f11bc8e88d55ae030e",
        "urls": [
          "bzz-raw://64998d16472a127031ee6a796ed9afcf13dd662afd30eb4d3e2a42c2bc9fd204",
          "dweb:/ipfs/QmTXHGy9t8YTW96tjiZ8RBqmijXUTqc1JznEBqHv8Duc4A"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/LibString.sol": {
        "keccak256": "0xe0427faa09ff8439d820147a7485148c1eadd353d11f097755ed60cad80c3785",
        "urls": [
          "bzz-raw://60d45e30ddb233e745b5de17c6c6cbc1149ca016655ad229d14141bb67aa4d05",
          "dweb:/ipfs/QmWWdczKjEKnU19qCcjAKosv1TtXMxnZd9oRsDkLaussv2"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0xdb28f318ec45197a6c7cc2abebed67d7cb8b965838ef962e3844423256a9ddb8",
        "urls": [
          "bzz-raw://873cd46b77a2aeb781e7a0d131e7299151323ed884c330101a51d0727e218d98",
          "dweb:/ipfs/QmddadCjyedztvdSgLZEyKWoRes2SqtpviSjhEbSNrkUoi"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/SafeTransferLib.sol": {
        "keccak256": "0xf1a06ea1cce6a233b18a2b16d36195bf1ab7c7a721b51a172c7b493386c4825b",
        "urls": [
          "bzz-raw://c54e268d1344503a360d99b9f25c1ff18685fba4f94fedcd9fa6277ea73554d7",
          "dweb:/ipfs/QmdYp5AP8rNLwBthb9gTyeNZdJGRaNUKpDz9bMRoPaY2oK"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/IExtsload.sol": {
        "keccak256": "0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43",
        "urls": [
          "bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1",
          "dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/IExttload.sol": {
        "keccak256": "0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937",
        "urls": [
          "bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8",
          "dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/IHooks.sol": {
        "keccak256": "0x4c9571aed0c2b6ef11832545554fc11ffdb03746daaf5c73683c00600bfc7ec0",
        "urls": [
          "bzz-raw://e78b34b58ce9de91b91943b4f3cc3ce121d0b151e123e8a600ac5ef64d91db6c",
          "dweb:/ipfs/QmRkaQnPCYwLrXgbpGujJTx32PaZK63KSPJJV1XmnQuCMb"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/IPoolManager.sol": {
        "keccak256": "0x3534f00531038e77ab8a7fc4d0a6e0993ee53fb7a396b1324ad917318ea46cea",
        "urls": [
          "bzz-raw://0a4a7e771828dc40848485b568a1cf514f553ace6653f4f4d1ad3f3e9cdb6c27",
          "dweb:/ipfs/QmTjzQ7KVYnrEWtxPER2E4MXzycgcznfzSDsZtd5turk5V"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/IProtocolFees.sol": {
        "keccak256": "0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848",
        "urls": [
          "bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d",
          "dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/callback/IUnlockCallback.sol": {
        "keccak256": "0x58c82f2bd9d7c097ed09bd0991fedc403b0ec270eb3d0158bfb095c06a03d719",
        "urls": [
          "bzz-raw://91168ca26a10980df2cdc3fbfe8ddf372c002b7ef19e3c59a0c9870d64198f1b",
          "dweb:/ipfs/QmUSpaM825vd1SwvF38esgbdLgYiPwefKaFERTWvUi6uSK"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/external/IERC20Minimal.sol": {
        "keccak256": "0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f",
        "urls": [
          "bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de",
          "dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/interfaces/external/IERC6909Claims.sol": {
        "keccak256": "0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48",
        "urls": [
          "bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f",
          "dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/BitMath.sol": {
        "keccak256": "0x51b9be4f5c4fd3e80cbc9631a65244a2eb2be250b6b7f128a2035080e18aee8d",
        "urls": [
          "bzz-raw://fe98bbd5498e912146b9319827fc63621eb66ff55d5baae0fa02a7a972ab8d1e",
          "dweb:/ipfs/QmY5hCuyrtgsJtk4AavrxcvBkRrChfr4N6ZnhdC8roPpNi"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/CurrencyReserves.sol": {
        "keccak256": "0x1576616129933fcdf3b684cea33cffd9c95e18fafbd2832a8c48ac3d8526d4c3",
        "urls": [
          "bzz-raw://33b050efb9b81803b18f562271e7cca2ec5362c4d505860d6419b4a345636725",
          "dweb:/ipfs/QmQtFtTwKZ5pFVGD2ENDUXvp7ECFvzqeCuJ1miJcUHdmiX"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-core/src/libraries/CustomRevert.sol": {
        "keccak256": "0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de",
        "urls": [
          "bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd",
          "dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/FixedPoint128.sol": {
        "keccak256": "0xad236e10853f4b4b20a35a9bb52b857c4fc79874846b7e444e06ead7f2630542",
        "urls": [
          "bzz-raw://0de1f9a06520b1a689660943faa14fc0b8344ab41fab9e6012ea34bff4b9b3eb",
          "dweb:/ipfs/QmRNMPTyko7W6d6KxuTsnDBa9oZgDK4xiwRRq3H9ASTbwy"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/FixedPoint96.sol": {
        "keccak256": "0xef5c3fd41aee26bb12aa1c32873cfee88e67eddfe7c2b32283786265ac669741",
        "urls": [
          "bzz-raw://4de298d02f662a1c36c7be0a150f18c2a161408a5d3e48432e707efd01fac9a4",
          "dweb:/ipfs/QmSiM4oeMmLVKmAtJXz2feYkv4R9ZcyBpkTRW5Nhw5KDyJ"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/FullMath.sol": {
        "keccak256": "0x4fc73a00817193fd3cac1cc03d8167d21af97d75f1815a070ee31a90c702b4c2",
        "urls": [
          "bzz-raw://c3b2d66d36b1ad56b1ab6e2eb8a816740877b40b461c93f125e88621c8378e52",
          "dweb:/ipfs/QmPGvMZzKQvNiWKd8aRzzdW7oAizwrMgcMtnaworDkVHFC"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/Hooks.sol": {
        "keccak256": "0x27b1c3b8aa3d07d8e3123970695745929315685a5ffaa7342c3ba3582f37fecb",
        "urls": [
          "bzz-raw://fa3bb092dc205eaa1b9defc93e9bbad5f4c5c44e1c4aa531dfca2574c2aba9ba",
          "dweb:/ipfs/QmR1soxkepHNkbGxAMaK4XqhQ4VxWn69dewzGkQJNx5byM"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/LPFeeLibrary.sol": {
        "keccak256": "0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b",
        "urls": [
          "bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475",
          "dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/LiquidityMath.sol": {
        "keccak256": "0x000ef2eadcc1eb7b2c18a77655f94e76e0e860f605783484657ef65fd6eda353",
        "urls": [
          "bzz-raw://a766b620a7a22798b43c6c1f23b5c6cff0ebf588deb89842bad05208d448cd99",
          "dweb:/ipfs/QmVKjaFJdzkqA3ey2Byum8iTCMssWVD8MmVC8rw62Tj5WD"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/Lock.sol": {
        "keccak256": "0x9338be4b5695f1da5f3d3f7a3eeaf7a356c1045458289586ac0cbe9cef77c6d5",
        "urls": [
          "bzz-raw://485ec42ed6155469d612a9a0c18068ebfbad74448792a338a435503de3ef1b2c",
          "dweb:/ipfs/QmVnnv5u74MYatfRmBgrcfFYQcsMAJMG9jQ6ju8UiydKNF"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-core/src/libraries/NonzeroDeltaCount.sol": {
        "keccak256": "0x0666ebd5d3528d7d52c48538296367a4cff97a578cf13365c51983fae3219b87",
        "urls": [
          "bzz-raw://d27f1be3bd09d85c53d3e6a539dd6529ddd8b2b764ccb47fd7765fc81f9add59",
          "dweb:/ipfs/QmQdZujNXhKEXQBkKtF5jbdvo1yXMqPDUoBBaF9S5u3Kpm"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-core/src/libraries/ParseBytes.sol": {
        "keccak256": "0x7533b13f53ee2c2c55500100b22ffd6e37e7523c27874edc98663d53a8672b15",
        "urls": [
          "bzz-raw://82449058634fde28a085f3c59a6a5f412550c02181590593fd84c3e8b329aa17",
          "dweb:/ipfs/Qmev4E9Au6SsE4wsArChCwfg94KhHc5gYsEsZUnjF5sRLa"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/Position.sol": {
        "keccak256": "0xddab2a831f1befb6abf5567e77c4582169ca8156cf69eb4f22d8e87f7226a3f9",
        "urls": [
          "bzz-raw://c79fe61b50f3b70cff503abfa6f5643fcbefb9b794855bee1019b1e6d9c083b2",
          "dweb:/ipfs/QmbKmYNQesaMz8bo1b7TMHQcAwaDd3eDPrE5pAdPPZTtk5"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-core/src/libraries/SafeCast.sol": {
        "keccak256": "0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86",
        "urls": [
          "bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59",
          "dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/SqrtPriceMath.sol": {
        "keccak256": "0xf8079fe6e3460db495451d06b1705e18f1c4075c1af96a31ad313545f7082982",
        "urls": [
          "bzz-raw://582fc51546723a0a8acccf782f69b530bacf9b3ef929458e82569b7121f0b138",
          "dweb:/ipfs/QmSBXcmqZdFsM7M4sRaiyQAxykCeMNFKyKgBcwSMTw1bcF"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/StateLibrary.sol": {
        "keccak256": "0x96db333ee126a841dd959e38e452cc59d73583cb0437a1d48b2052e33a74f952",
        "urls": [
          "bzz-raw://8672bba1eb69608299b0904f4ff305238eb18479d371c26518f278c9ee184cd0",
          "dweb:/ipfs/QmTLu3s6ECvsEDHStQv8HTVHYtvkviBbdjPrFJd4SpVRFY"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/SwapMath.sol": {
        "keccak256": "0x6baa782ae523269c079cc763639a9b91a25fcfa1743c049c76e43741ef494bd9",
        "urls": [
          "bzz-raw://035c337e62e05262a5bd5d3bc85bc9a383c1013001216b429f49cf1e129a0812",
          "dweb:/ipfs/QmU7s4h58Fh2A6mM8yeorZ2ygwEJMQw8zdZLLkHeDoSWxD"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/TickMath.sol": {
        "keccak256": "0x4e1a11e154eb06106cb1c4598f06cca5f5ca16eaa33494ba2f0e74981123eca8",
        "urls": [
          "bzz-raw://a79a57f7b240783b045168d1c4f774ac1812caf8f9a83cb6959a86b0b07b6c70",
          "dweb:/ipfs/QmTb5kvxwDNW8jDuQaqdJ445cCFejNkUqEB17Bjo8UBiva"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/TransientStateLibrary.sol": {
        "keccak256": "0x7d1e0875747bd89b32c25f1a48da2766e5f4aff1f671ad5f3c0c07ebbbcb946a",
        "urls": [
          "bzz-raw://d76cfeb1cb60595b41ecc51c8a12fb4bf63a7fc733d0b1a2e3adb55abeb1f9d5",
          "dweb:/ipfs/Qmb8oX7DtsRpw3tTtdWZwGhauj1evq43d3PLwe4nSDAKkV"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/libraries/UnsafeMath.sol": {
        "keccak256": "0xa6e55e0a43a15df2df471d9972cd48f613d07c663ecb8bbeaf7623f6f99bcce4",
        "urls": [
          "bzz-raw://02ea6e13879fc5a5f35149a2f1cd8af3a1f0877ff69101dad53841d16f515572",
          "dweb:/ipfs/QmcpL4gdG6hL2w1wqs2Vw4J1EFCwBs9T1Qd4p16CtECQkn"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/types/BalanceDelta.sol": {
        "keccak256": "0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f",
        "urls": [
          "bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9",
          "dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/types/BeforeSwapDelta.sol": {
        "keccak256": "0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78",
        "urls": [
          "bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782",
          "dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/types/Currency.sol": {
        "keccak256": "0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93",
        "urls": [
          "bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01",
          "dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/types/PoolId.sol": {
        "keccak256": "0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af",
        "urls": [
          "bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918",
          "dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y"
        ],
        "license": "MIT"
      },
      "lib/v4-core/src/types/PoolKey.sol": {
        "keccak256": "0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786",
        "urls": [
          "bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639",
          "dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi"
        ],
        "license": "MIT"
      },
      "lib/v4-core/test/utils/LiquidityAmounts.sol": {
        "keccak256": "0x3ec40b1ddf34a1b33fe3934a2f1e4f66dbcf4378a4c672d0d6ce845ccf8bcae2",
        "urls": [
          "bzz-raw://6fc4a4688f272d4b55c1d0440ee5ebdc951e5299ff23ae79a4b52cc83e978b8a",
          "dweb:/ipfs/QmYJogZFeyaVeSFbYLCMdwEZtL8sWB8Ndx5AuepWdHsHGY"
        ],
        "license": "UNLICENSED"
      },
      "lib/v4-periphery/src/base/ImmutableState.sol": {
        "keccak256": "0x2b4d3e76d118c351e3bba4b6d5761844a67c138631d2d6c30a30a343d4021631",
        "urls": [
          "bzz-raw://119f8888a7ba7e8aa13fcfb6ce58e974b72d617851986c7b62e86b327e5a058b",
          "dweb:/ipfs/QmfZPZcGh8UeSCY4PqNyhnunN1FC938rZaxKTKYssNZGCt"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/src/base/SafeCallback.sol": {
        "keccak256": "0xd00fd50f780bc9189e79adba6f0bff93b2e993df7049aca638f356807ab086a3",
        "urls": [
          "bzz-raw://353e27536510b0cc38ebe3f5617999a8f87bed3cab118f8faa84fd6a487cfcbc",
          "dweb:/ipfs/QmQywaAkX4Rmq1vzQPsJvty7pctUiDsRE7QebPwj7p8ibn"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/src/base/hooks/BaseHook.sol": {
        "keccak256": "0xcc005378e3c7b6677f7dfb18947ba0a8070f9a16a324389b532926f855665125",
        "urls": [
          "bzz-raw://a9c03164794e2fe55d06d112967507243b7b44798eb493277327128fbed1a199",
          "dweb:/ipfs/QmVQZ7NUeaWrs3f3WeLj7rA5xDyj3P3uE48aH71hU4GLsQ"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/src/interfaces/IImmutableState.sol": {
        "keccak256": "0x36ab3100e87457ecf04887f4f540e34fd7f21d8e3b83880cb679239e60b7b06b",
        "urls": [
          "bzz-raw://7f290c7ce8e4832608d637a51b13dff95abecf6549485448e647a11c8ed01341",
          "dweb:/ipfs/QmfD1R6mTp8j4EjQXmQZW3vCh11EYFjnvoaw8rXRP27mMq"
        ],
        "license": "MIT"
      },
      "src/contracts/Flaunch.sol": {
        "keccak256": "0x1c22280e0e3808accdf31a128e7aa05edf2bf7d58cc7be1934911d5c432256eb",
        "urls": [
          "bzz-raw://5e3d4aa9c660181ffd052d0b0c140d2e8d108e0e38b45410db82408b7572c3a2",
          "dweb:/ipfs/QmQCCzotuDsE35p6E8X5VLrqvutsRcJNJAXKVq47T1hNtG"
        ],
        "license": "MIT"
      },
      "src/contracts/PositionManager.sol": {
        "keccak256": "0xbaed796836da9506b5935d7043770f0b97c8c2cf80e92f8b768e5dbe4d65ccb5",
        "urls": [
          "bzz-raw://f4e5762e3537bbbaff86bc6a813e79c2e911796818ada7a0a343499c57551ec1",
          "dweb:/ipfs/QmUrhGDVjnbtKETFC25NHLPZZZ2kNRkrssX8enT2Vs2UWK"
        ],
        "license": "MIT"
      },
      "src/contracts/bidwall/BidWall.sol": {
        "keccak256": "0x01276a42d85198a1ec83d1668e4be8c8f9ff07b1ddaf486fb6b3e3e471ab5b32",
        "urls": [
          "bzz-raw://3734cf40fe7f3b92c6fc558cbe49cca210b61f3b4971b90b9709cb2bda0afad0",
          "dweb:/ipfs/QmX9Dfy7NNFNZeFAcUNtZvQ1UocZLKyzwDqrgfPoSUXB5E"
        ],
        "license": "MIT"
      },
      "src/contracts/contants.sol": {
        "keccak256": "0x5ae6f584c76437cccc319f2cce96e8d51e2c38bbc550010282c47d4b23fc43eb",
        "urls": [
          "bzz-raw://08890ac7a1510bc13508b6164310314a2cae5ea94b3898de8fdc06f68edb9216",
          "dweb:/ipfs/QmSqNM8wEuKgCbc9q83NSNHGdwKA2SS3rksaQr9eNbrRwY"
        ],
        "license": "MIT"
      },
      "src/contracts/escrows/FeeEscrow.sol": {
        "keccak256": "0xb631600012a6df77c835249d61f12aeb0d636b5ec44ce69657c4d9a40fe8bd51",
        "urls": [
          "bzz-raw://adf86e86af20ef4980b6f87a1c555e59d215914df76f1b322125c170d4b56c5e",
          "dweb:/ipfs/QmYw1riuJ7Pri7FDAyyGRUbDyaYPRQmtsBorRWcefQezyJ"
        ],
        "license": "MIT"
      },
      "src/contracts/escrows/ReferralEscrow.sol": {
        "keccak256": "0xcd04f4016b830ac35dadc329f93ed3d97655062bcd1a03d875be05136631afdf",
        "urls": [
          "bzz-raw://f69143b495cf29515f823d8061d7e240188395c129de0ce5ce83d4c1f3d410d8",
          "dweb:/ipfs/QmeTJA984BBbjp6GeGCFsQy3fBQZWRbvpyPdqfXHJUBsuC"
        ],
        "license": "MIT"
      },
      "src/contracts/hooks/FairLaunch.sol": {
        "keccak256": "0x5ae679b9ca3da408a8a55ee0a91ea69cfc86a2eec309694191efad9707d27687",
        "urls": [
          "bzz-raw://89c4061dd462f85b85a4e6d800de010822189c5f8bd3b8c6ccc1d2a73f45868e",
          "dweb:/ipfs/QmVP98PRk5UiFtRCu5T4VLnCJ5z9BpageYoYkjVgXHYxSN"
        ],
        "license": "MIT"
      },
      "src/contracts/hooks/FeeDistributor.sol": {
        "keccak256": "0x27216feec5a5cd5cdbfcd7f0cd753a8368c22df8cd2a821dd813feb8334a4438",
        "urls": [
          "bzz-raw://42ad7e327628115dbf9428197352b90afa8003f90a784943727c1b2e5520aa4f",
          "dweb:/ipfs/QmY9r4ywP4pycABVK1VDUcajBaUoGdMmBMSVbvt3g3Cc9X"
        ],
        "license": "MIT"
      },
      "src/contracts/hooks/FeeExemptions.sol": {
        "keccak256": "0xd014c6d17a996bc7402ceb3852cda5def88d5d5507bbbdb68cb997f6452e1383",
        "urls": [
          "bzz-raw://641437d2ce67496fe880cd7cb3fdc8c20093bf0a1d6cbe8a98e2d77f2b37e48b",
          "dweb:/ipfs/QmQ4JuYLhk8wzMnKwViKD3kzphYSDnoMJ231pzs8s3b7RP"
        ],
        "license": "MIT"
      },
      "src/contracts/hooks/InternalSwapPool.sol": {
        "keccak256": "0xa493412443fb32edc59d17152fd02694793a183fe6710177312f70e80fde758d",
        "urls": [
          "bzz-raw://899412b7256955fdf4a97bd0e936c871924d394386f27a131bda6d66765c2a45",
          "dweb:/ipfs/Qme6yUcFmTNCpnD945WSgyssS9qpLWJH4Q7i9Zs8AfJoBb"
        ],
        "license": "MIT"
      },
      "src/contracts/hooks/Notifier.sol": {
        "keccak256": "0x1c64833a18020b18d80eb2b6fac5034f52f5baba905ff89e027d65f9b1be06e4",
        "urls": [
          "bzz-raw://3e04f39d3da4d4a37ce48cc10f1707d11cff5639e34e676bdfd1bb62dbbf6f2a",
          "dweb:/ipfs/QmYnswohkXfwKLcMdoquAQvbWz8Wasxze2s193BgdnYaZE"
        ],
        "license": "MIT"
      },
      "src/contracts/libraries/CurrencySettler.sol": {
        "keccak256": "0x1947908d65887002ba48d984b18a4136f4894f0753e7effc4af74b78b8891637",
        "urls": [
          "bzz-raw://448fd2c63df6d77d50b8cd747b61fda967baa6fc159eb4fdffe499951c0897fb",
          "dweb:/ipfs/QmRd8WL4Mg1YJoz8VNXLdN9xUCsXtxf1CxjG4LSXShW83S"
        ],
        "license": "MIT"
      },
      "src/contracts/libraries/ProtocolRoles.sol": {
        "keccak256": "0xc3ecb32c87d15b5a149d23aa0143ca772e921e62f3c11482c05b9aad511c6037",
        "urls": [
          "bzz-raw://b520151fbf6a72a86fc2cc370fc7afa92e4b6273b77a52e840dbff3d462087fe",
          "dweb:/ipfs/QmNvcuY6ag66mdFYAgcXY25qqukQTmFvYGi5UeGMpWxFCh"
        ],
        "license": "MIT"
      },
      "src/contracts/libraries/TokenSupply.sol": {
        "keccak256": "0xbed223c0987d967e260a66bcdd283ba631f1b42c93c52d4a5afec735f7cd83e2",
        "urls": [
          "bzz-raw://e3ce9b8c73cf13ae9c73ee3ceb575b6401762180f4afabc196cac4eca43ee21b",
          "dweb:/ipfs/Qmes76ZFHxqusfg9NwY6tL5SYxcchkiW6aGorpMWXXxAvV"
        ],
        "license": "MIT"
      },
      "src/contracts/libraries/UniswapHookEvents.sol": {
        "keccak256": "0x124e75c5d2853da58681498ba5afff2380779d6e21f5b0f658c44066ab93a616",
        "urls": [
          "bzz-raw://58276dce40ddf1675f0bcce9d56d6cdeb8e6d2a973bd0ad5298e2f11513e11e7",
          "dweb:/ipfs/QmRetjzoNXvJD5QkQuSQMcGLEuEdQyd2PPewxpcgv1bxDR"
        ],
        "license": "MIT"
      },
      "src/contracts/price/FlaunchFeeExemption.sol": {
        "keccak256": "0xe5a256a583afa7ccd229d091310dcf774c7d1dcb9894dc5d1c9306981476694a",
        "urls": [
          "bzz-raw://ee7abb576861805a6669c1542cb9cadb045c3d88a4aab6c4563d70fe947c764d",
          "dweb:/ipfs/Qmdyv6y3HsWnzTznaG9H8TSwdG7CMA5oxXizRf7iuuzkt7"
        ],
        "license": "MIT"
      },
      "src/contracts/subscribers/Indexer.sol": {
        "keccak256": "0x59bfca4d99bae3beebf1581ed93f569319f5f5c6b0d49f06b140b46a58509916",
        "urls": [
          "bzz-raw://90b8876e25e6b2708cf5e4a075f2625b451c84778bf4d05d141ae419d41c9101",
          "dweb:/ipfs/QmYetyrsqFcqvAjem9KUxDnYRPP7EsXxVdMT7MWVu4H79g"
        ],
        "license": "MIT"
      },
      "src/contracts/treasury/ActionManager.sol": {
        "keccak256": "0xbf83cfec82315dc4a3ec031a869984e1e754f92b41f474e86cf6088ae486e0b0",
        "urls": [
          "bzz-raw://ad69c078fb563ac05d43063b37c826b388092521783cfa496ba57f743aa0c7c8",
          "dweb:/ipfs/QmWxvidGyn3zsnbRPARJZ88tvz7yYh4QQYV8AN1NmGVxDz"
        ],
        "license": "MIT"
      },
      "src/contracts/treasury/MemecoinTreasury.sol": {
        "keccak256": "0x20629bd593397b351e9a3af1e7d573cca0d755af61b7312cca42565f900f1363",
        "urls": [
          "bzz-raw://712598571d05445c0bfe64f5dd17bff24705eb7e6f66a3ebfa4acf3d2c733694",
          "dweb:/ipfs/QmTtZYNB7DTdpBVxZi36hsm9f7PouVKGiArsgttTRJXKkF"
        ],
        "license": "MIT"
      },
      "src/contracts/types/MemecoinFinder.sol": {
        "keccak256": "0xfb797765334db24b80ce274dadddf2d02ae6e1bcc5b21ddc71e31ebe6a16a9bc",
        "urls": [
          "bzz-raw://88ee3018fca8abded6d53a4464e19c545b93a0c275b3f6563198d72f4f7cda4a",
          "dweb:/ipfs/QmPCXvvzNCTafgtun4Dgi4oB2rCUaLPq6tzcBDXR32mN6A"
        ],
        "license": "MIT"
      },
      "src/contracts/types/StoreKeys.sol": {
        "keccak256": "0x24a45a523b389f1e8e7c6dcb7d401458a67ad519b879eb2eb6f0501b3b2e4041",
        "urls": [
          "bzz-raw://2c83f401837cbf0fbc57aefdb2fb09faed9a6c94025b98ee1ea8e0ab3020201c",
          "dweb:/ipfs/QmXCTEBxfBmUjYqiLUxnSuRnJ47KuRCJ8pifPrBmnbxAY3"
        ],
        "license": "MIT"
      },
      "src/contracts/types/TickFinder.sol": {
        "keccak256": "0xd0520af45af21e3e21959edf440bf91a5c7008bba27f19a37157b068f15577a1",
        "urls": [
          "bzz-raw://37c00788c51797b6536f3a63ab3bf5eab0075b9311bc0607a474685a95c6dc97",
          "dweb:/ipfs/QmT5QQRMSdmZivyvK5pJxGxh6ueBFZLHFCmpMkqFwbqp5Z"
        ],
        "license": "MIT"
      },
      "src/contracts/vesting/CreatorVesting.sol": {
        "keccak256": "0x1dd7fbdca1fece583b9db8a30d052d4c81b5be520e23b73e5dc99be26bc1ccdf",
        "urls": [
          "bzz-raw://71f86832c84587c0d91a968e7e591e458599166be90a6e215ae943849ab11228",
          "dweb:/ipfs/QmYiqphd7TiGnjvC2Je1rNf2eWLBLExMvgBxDddDJ4pzzu"
        ],
        "license": "MIT"
      },
      "src/contracts/zaps/PoolSwap.sol": {
        "keccak256": "0xc76373ac0ae07e02b01080b6f4f8784f23ad63759353f3e0c652e5765ea419e4",
        "urls": [
          "bzz-raw://23aece61b14a38f729ad3f471dd2c7e928db1f34ca1df34a08f80dd248dad13c",
          "dweb:/ipfs/QmZwypsxv3SjVVexvfZom6QDYSCqDNJ8YmHtpBzNiEkKnj"
        ],
        "license": "MIT"
      },
      "src/interfaces/IFLETH.sol": {
        "keccak256": "0x76d5a68a2aa36d96b5e686df7a390ed2dd6142979b538e0e0e889b45ce2fcbbf",
        "urls": [
          "bzz-raw://a50cd7e6979a1af1345a993ca9a4ec3ea8803d5e429d2dc585b7b74d723e0a0c",
          "dweb:/ipfs/QmW7ptGGwi8BCi8V9BrNwqFxdzG8WFtqNzMmLrFvQkWdK9"
        ],
        "license": "MIT"
      },
      "src/interfaces/IFeeCalculator.sol": {
        "keccak256": "0x7fb44228009865a432793863a419d98511bfb4f777286f41a098747327d0b26d",
        "urls": [
          "bzz-raw://490c1bcd8fef48aa6bc7cb481e814631025738700caa8b93ef2b3d7e70d34267",
          "dweb:/ipfs/QmUcuzY5wtAwwGssDCLMCr8G6tWRGD2P4RYav3yw7qYXAc"
        ],
        "license": "MIT"
      },
      "src/interfaces/IFlaunch.sol": {
        "keccak256": "0x673e7120c0573e3dd881535af90a9c36edf53fa5c96e11d1609d50a1e82d06eb",
        "urls": [
          "bzz-raw://5637b5dd2c7774f7ddbc20b2ed875020f9b5c978c886d23257aa79ebc997d632",
          "dweb:/ipfs/Qmb3FUnRYUQVaww7p5uqMuhK1c562dro5bkb7geierd44Q"
        ],
        "license": "MIT"
      },
      "src/interfaces/IInitialPrice.sol": {
        "keccak256": "0x9ba8d9c572577512288872bff08302298851224b75ef5803c694d244a1d87ad9",
        "urls": [
          "bzz-raw://a6c596953c3c0ffdd2841d8288eaf94129c94bfb4b776cc476e361851af06d20",
          "dweb:/ipfs/QmRi1NxTpsxMEYxZH7cVEkAUSw6fUJX1ZQ224NeHa3E6AB"
        ],
        "license": "MIT"
      },
      "src/interfaces/IMemecoin.sol": {
        "keccak256": "0x5552714add1c5e2d86b6287585da5be78b4c52583ba59a15d090eb24e11bc882",
        "urls": [
          "bzz-raw://19a42e80cf7f356ad7c1616879464c31624d6c6922aec343e76ebae1474660ef",
          "dweb:/ipfs/QmUS7sNX9QPuUc6wZxVzXhRzWqVyVrrycpxWmY273bFmeT"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISubscriber.sol": {
        "keccak256": "0x9e66782ee2129d3f7f43be7d22455d50baf0c872b072a24d2ed385ccea49c30e",
        "urls": [
          "bzz-raw://bb37831e1c71192ecb3dfc1e0272d2c9e0b6afe1867059747140ec83b8aa993c",
          "dweb:/ipfs/QmSgCjT9MRbrB5RmdbFBx8P2KtuwPUZUuD8bDDFGfF3mbZ"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ITreasuryAction.sol": {
        "keccak256": "0x57d93df0946a294dd050aa5ca5c6b0d18c3280f323bc5adc21a114ce7ad60dbc",
        "urls": [
          "bzz-raw://51217a2625d02bf841082c5322e1de047edd60f9235e238de0deed51fc919edb",
          "dweb:/ipfs/QmdnF6VnjX7yVpPWDT5CRhJzfarqb2LctrzowG5LHuXDbo"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 166
}
